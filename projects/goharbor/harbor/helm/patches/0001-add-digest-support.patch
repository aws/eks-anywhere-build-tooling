From 900bd38eb2458f951d8847ed8968ebaeb21f9dec Mon Sep 17 00:00:00 2001
From: Vincent Ni <kangqini@amazon.com>
Date: Fri, 11 Feb 2022 10:29:08 -0800
Subject: [PATCH] add digest support

---
 templates/_helpers.tpl                     |  5 ++
 templates/chartmuseum/chartmuseum-dpl.yaml |  2 +-
 templates/core/core-dpl.yaml               |  2 +-
 templates/database/database-ss.yaml        |  6 +-
 templates/exporter/exporter-dpl.yaml       |  2 +-
 templates/jobservice/jobservice-dpl.yaml   |  2 +-
 templates/nginx/deployment.yaml            |  2 +-
 templates/notary/notary-server.yaml        |  2 +-
 templates/notary/notary-signer.yaml        |  2 +-
 templates/portal/deployment.yaml           |  2 +-
 templates/redis/statefulset.yaml           |  2 +-
 templates/registry/registry-dpl.yaml       |  4 +-
 templates/trivy/trivy-sts.yaml             |  2 +-
 values.yaml                                | 70 +++++++++++-----------
 14 files changed, 56 insertions(+), 49 deletions(-)

diff --git a/templates/_helpers.tpl b/templates/_helpers.tpl
index 5eb9910..5706b1f 100644
--- a/templates/_helpers.tpl
+++ b/templates/_helpers.tpl
@@ -603,4 +603,9 @@ postgres://{{ template "harbor.database.username" . }}:{{ template "harbor.datab
 {{/* Allow KubeVersion to be overridden. */}}
 {{- define "harbor.ingress.kubeVersion" -}}
   {{- default .Capabilities.KubeVersion.Version .Values.expose.ingress.kubeVersionOverride -}}
+{{- end -}}
+
+{{/* Generate image repository path. */}}
+{{- define "harbor.image.repository.path" -}}
+  {{- .repository }}@{{ .digest -}}
 {{- end -}}
\ No newline at end of file
diff --git a/templates/chartmuseum/chartmuseum-dpl.yaml b/templates/chartmuseum/chartmuseum-dpl.yaml
index a57c385..4484331 100644
--- a/templates/chartmuseum/chartmuseum-dpl.yaml
+++ b/templates/chartmuseum/chartmuseum-dpl.yaml
@@ -48,7 +48,7 @@ spec:
       automountServiceAccountToken: {{ .Values.chartmuseum.automountServiceAccountToken | default false }}
       containers:
       - name: chartmuseum
-        image: {{ .Values.chartmuseum.image.repository }}:{{ .Values.chartmuseum.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.chartmuseum.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           httpGet:
diff --git a/templates/core/core-dpl.yaml b/templates/core/core-dpl.yaml
index c0b740a..eea41f3 100644
--- a/templates/core/core-dpl.yaml
+++ b/templates/core/core-dpl.yaml
@@ -43,7 +43,7 @@ spec:
       terminationGracePeriodSeconds: 120
       containers:
       - name: core
-        image: {{ .Values.core.image.repository }}:{{ .Values.core.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.core.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         {{- if .Values.core.startupProbe.enabled }}
         startupProbe:
diff --git a/templates/database/database-ss.yaml b/templates/database/database-ss.yaml
index 80b90eb..373cb35 100644
--- a/templates/database/database-ss.yaml
+++ b/templates/database/database-ss.yaml
@@ -43,7 +43,7 @@ spec:
       # for more detail.
       # we may remove it after several releases
       - name: "data-migrator"
-        image: {{ .Values.database.internal.image.repository }}:{{ .Values.database.internal.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.database.internal.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         command: ["/bin/sh"]
         args: ["-c", "[ -e /var/lib/postgresql/data/postgresql.conf ] && [ ! -d /var/lib/postgresql/data/pgdata ] && mkdir -m 0700 /var/lib/postgresql/data/pgdata && mv /var/lib/postgresql/data/* /var/lib/postgresql/data/pgdata/ || true"]
@@ -60,7 +60,7 @@ spec:
       # use this init container to correct the permission
       # as "fsGroup" applied before the init container running, the container has enough permission to execute the command
       - name: "data-permissions-ensurer"
-        image: {{ .Values.database.internal.image.repository }}:{{ .Values.database.internal.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.database.internal.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         command: ["/bin/sh"]
         args: ["-c", "chmod -R 700 /var/lib/postgresql/data/pgdata || true"]
@@ -74,7 +74,7 @@ spec:
             subPath: {{ $database.subPath }}
       containers:
       - name: database
-        image: {{ .Values.database.internal.image.repository }}:{{ .Values.database.internal.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.database.internal.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           exec:
diff --git a/templates/exporter/exporter-dpl.yaml b/templates/exporter/exporter-dpl.yaml
index ddcc331..8c7f356 100644
--- a/templates/exporter/exporter-dpl.yaml
+++ b/templates/exporter/exporter-dpl.yaml
@@ -35,7 +35,7 @@ spec:
       automountServiceAccountToken: {{ .Values.exporter.automountServiceAccountToken | default false }}
       containers:
       - name: exporter
-        image: {{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.exporter.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           httpGet:
diff --git a/templates/jobservice/jobservice-dpl.yaml b/templates/jobservice/jobservice-dpl.yaml
index bf854c9..a2003e4 100644
--- a/templates/jobservice/jobservice-dpl.yaml
+++ b/templates/jobservice/jobservice-dpl.yaml
@@ -49,7 +49,7 @@ spec:
       terminationGracePeriodSeconds: 120
       containers:
       - name: jobservice
-        image: {{ .Values.jobservice.image.repository }}:{{ .Values.jobservice.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.jobservice.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           httpGet:
diff --git a/templates/nginx/deployment.yaml b/templates/nginx/deployment.yaml
index a7c2633..4eecc2d 100644
--- a/templates/nginx/deployment.yaml
+++ b/templates/nginx/deployment.yaml
@@ -43,7 +43,7 @@ spec:
       automountServiceAccountToken: {{ .Values.nginx.automountServiceAccountToken | default false }}
       containers:
       - name: nginx
-        image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.nginx.image }}
         imagePullPolicy: "{{ .Values.imagePullPolicy }}"
         {{- $_ := set . "scheme" "HTTP" -}}
         {{- $_ := set . "port" "8080" -}}
diff --git a/templates/notary/notary-server.yaml b/templates/notary/notary-server.yaml
index 753f2ec..ae17544 100644
--- a/templates/notary/notary-server.yaml
+++ b/templates/notary/notary-server.yaml
@@ -37,7 +37,7 @@ spec:
       automountServiceAccountToken: {{ .Values.notary.server.automountServiceAccountToken | default false }}
       containers:
       - name: notary-server
-        image: {{ .Values.notary.server.image.repository }}:{{ .Values.notary.server.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.notary.server.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           httpGet:
diff --git a/templates/notary/notary-signer.yaml b/templates/notary/notary-signer.yaml
index 15987b8..24363d5 100644
--- a/templates/notary/notary-signer.yaml
+++ b/templates/notary/notary-signer.yaml
@@ -36,7 +36,7 @@ spec:
       automountServiceAccountToken: {{ .Values.notary.signer.automountServiceAccountToken | default false }}
       containers:
       - name: notary-signer
-        image: {{ .Values.notary.signer.image.repository }}:{{ .Values.notary.signer.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.notary.signer.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           httpGet:
diff --git a/templates/portal/deployment.yaml b/templates/portal/deployment.yaml
index 66f00cc..f13fc08 100644
--- a/templates/portal/deployment.yaml
+++ b/templates/portal/deployment.yaml
@@ -39,7 +39,7 @@ spec:
       automountServiceAccountToken: {{ .Values.portal.automountServiceAccountToken | default false }}
       containers:
       - name: portal
-        image: {{ .Values.portal.image.repository }}:{{ .Values.portal.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.portal.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
 {{- if .Values.portal.resources }}
         resources:
diff --git a/templates/redis/statefulset.yaml b/templates/redis/statefulset.yaml
index ff04008..5a1b2dc 100644
--- a/templates/redis/statefulset.yaml
+++ b/templates/redis/statefulset.yaml
@@ -38,7 +38,7 @@ spec:
       terminationGracePeriodSeconds: 120
       containers:
       - name: redis
-        image: {{ .Values.redis.internal.image.repository }}:{{ .Values.redis.internal.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.redis.internal.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           tcpSocket:
diff --git a/templates/registry/registry-dpl.yaml b/templates/registry/registry-dpl.yaml
index fd1f951..6fe7227 100644
--- a/templates/registry/registry-dpl.yaml
+++ b/templates/registry/registry-dpl.yaml
@@ -49,7 +49,7 @@ spec:
       terminationGracePeriodSeconds: 120
       containers:
       - name: registry
-        image: {{ .Values.registry.registry.image.repository }}:{{ .Values.registry.registry.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.registry.registry.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           httpGet:
@@ -130,7 +130,7 @@ spec:
 {{ include "harbor.caBundleVolumeMount" . | indent 8 }}
         {{- end }}
       - name: registryctl
-        image: {{ .Values.registry.controller.image.repository }}:{{ .Values.registry.controller.image.tag }}
+        image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.registry.controller.image }}
         imagePullPolicy: {{ .Values.imagePullPolicy }}
         livenessProbe:
           httpGet:
diff --git a/templates/trivy/trivy-sts.yaml b/templates/trivy/trivy-sts.yaml
index 69c00f8..9c7f57c 100644
--- a/templates/trivy/trivy-sts.yaml
+++ b/templates/trivy/trivy-sts.yaml
@@ -43,7 +43,7 @@ spec:
       automountServiceAccountToken: {{ .Values.trivy.automountServiceAccountToken | default false }}
       containers:
         - name: trivy
-          image: {{ .Values.trivy.image.repository }}:{{ .Values.trivy.image.tag }}
+          image: {{ .Values.imageRegistry }}/{{ include "harbor.image.repository.path" .Values.trivy.image }}
           imagePullPolicy: {{ .Values.imagePullPolicy }}
           securityContext:
             privileged: false
diff --git a/values.yaml b/values.yaml
index b2e57fc..9ec0f7d 100644
--- a/values.yaml
+++ b/values.yaml
@@ -2,7 +2,7 @@ expose:
   # Set the way how to expose the service. Set the type as "ingress",
   # "clusterIP", "nodePort" or "loadBalancer" and fill the information
   # in the corresponding section
-  type: ingress
+  type: nodePort
   tls:
     # Enable the tls or not.
     # Delete the "ssl-redirect" annotations in "expose.ingress.annotations" when TLS is disabled and "expose.type" is "ingress"
@@ -18,7 +18,7 @@ expose:
     # The tls certificate can be generated manually or by cert manager
     # 3) none: configure no tls certificate for the ingress. If the default
     # tls certificate is configured in the ingress controller, choose this option
-    certSource: auto
+    certSource: secret
     auto:
       # The common name used to generate the certificate, it's necessary
       # when the type isn't "ingress"
@@ -27,7 +27,7 @@ expose:
       # The name of secret which contains keys named:
       # "tls.crt" - the certificate
       # "tls.key" - the private key
-      secretName: ""
+      secretName: "tls-secret"
       # The name of secret which contains keys named:
       # "tls.crt" - the certificate
       # "tls.key" - the private key
@@ -119,13 +119,13 @@ expose:
 # the IP address of k8s node
 #
 # If Harbor is deployed behind the proxy, set it as the URL of proxy
-externalURL: https://core.harbor.domain
+externalURL: https://127.0.0.1:30003
 
 # The internal TLS used for harbor components secure communicating. In order to enable https
 # in each components tls cert files need to provided in advance.
 internalTLS:
   # If internal TLS enabled
-  enabled: false
+  enabled: true
   # There are three ways to provide tls
   # 1) "auto" will generate cert automatically
   # 2) "manual" need provide cert file manually in following value
@@ -384,11 +384,13 @@ proxy:
 # contains a base64 encoded CA Certificate named `ca.crt`.
 # uaaSecretName:
 
+imageRegistry: "public.ecr.aws/eks-anywhere"
+
 # If expose the service via "ingress", the Nginx will not be used
 nginx:
   image:
-    repository: goharbor/nginx-photon
-    tag: v2.4.1
+    repository: harbor/harbor-nginx
+    digest: {{harbor/harbor-nginx}}
   # set the service account to be used, default if left empty
   serviceAccountName: ""
   # mount the service account token
@@ -408,8 +410,8 @@ nginx:
 
 portal:
   image:
-    repository: goharbor/harbor-portal
-    tag: v2.4.1
+    repository: harbor/harbor-portal
+    digest: {{harbor/harbor-portal}}
   # set the service account to be used, default if left empty
   serviceAccountName: ""
   # mount the service account token
@@ -429,8 +431,8 @@ portal:
 
 core:
   image:
-    repository: goharbor/harbor-core
-    tag: v2.4.1
+    repository: harbor/harbor-core
+    digest: {{harbor/harbor-core}}
   # set the service account to be used, default if left empty
   serviceAccountName: ""
   # mount the service account token
@@ -467,8 +469,8 @@ core:
 
 jobservice:
   image:
-    repository: goharbor/harbor-jobservice
-    tag: v2.4.1
+    repository: harbor/harbor-jobservice
+    digest: {{harbor/harbor-jobservice}}
   replicas: 1
   # set the service account to be used, default if left empty
   serviceAccountName: ""
@@ -504,16 +506,16 @@ registry:
   automountServiceAccountToken: false
   registry:
     image:
-      repository: goharbor/registry-photon
-      tag: v2.4.1
+      repository: harbor/harbor-registry
+      digest: {{harbor/harbor-registry}}
     # resources:
     #  requests:
     #    memory: 256Mi
     #    cpu: 100m
   controller:
     image:
-      repository: goharbor/harbor-registryctl
-      tag: v2.4.1
+      repository: harbor/harbor-registryctl
+      digest: {{harbor/harbor-registryctl}}
 
     # resources:
     #  requests:
@@ -552,7 +554,7 @@ registry:
       privateKeySecret: "my-secret"
 
 chartmuseum:
-  enabled: true
+  enabled: false
   # set the service account to be used, default if left empty
   serviceAccountName: ""
   # mount the service account token
@@ -560,8 +562,8 @@ chartmuseum:
   # Harbor defaults ChartMuseum to returning relative urls, if you want using absolute url you should enable it by change the following value to 'true'
   absoluteUrl: false
   image:
-    repository: goharbor/chartmuseum-photon
-    tag: v2.4.1
+    repository: harbor/harbor-chartmuseum
+    digest: {{harbor/harbor-chartmuseum}}
   replicas: 1
   # resources:
   #  requests:
@@ -579,12 +581,12 @@ chartmuseum:
 
 trivy:
   # enabled the flag to enable Trivy scanner
-  enabled: true
+  enabled: false
   image:
     # repository the repository for Trivy adapter image
-    repository: goharbor/trivy-adapter-photon
+    repository: harbor/harbor-trivy-adapter
     # tag the tag for Trivy adapter image
-    tag: v2.4.1
+    digest: {{goharbor/trivy-adapter-photon}}
   # set the service account to be used, default if left empty
   serviceAccountName: ""
   # mount the service account token
@@ -641,15 +643,15 @@ trivy:
   priorityClassName:
 
 notary:
-  enabled: true
+  enabled: false
   server:
     # set the service account to be used, default if left empty
     serviceAccountName: ""
     # mount the service account token
     automountServiceAccountToken: false
     image:
-      repository: goharbor/notary-server-photon
-      tag: v2.4.1
+      repository: harbor/harbor-notary-server
+      digest: {{harbor/harbor-notary-server}}
     replicas: 1
     # resources:
     #  requests:
@@ -668,8 +670,8 @@ notary:
     # mount the service account token
     automountServiceAccountToken: false
     image:
-      repository: goharbor/notary-signer-photon
-      tag: v2.4.1
+      repository: harbor/harbor-notary-signer
+      digest: {{harbor/harbor-notary-signer}}
     replicas: 1
     # resources:
     #  requests:
@@ -700,8 +702,8 @@ database:
     # mount the service account token
     automountServiceAccountToken: false
     image:
-      repository: goharbor/harbor-db
-      tag: v2.4.1
+      repository: harbor/harbor-db
+      digest: {{harbor/harbor-db}}
     # The initial superuser password for internal database
     password: "changeit"
     # The size limit for Shared memory, pgSQL use it for shared_buffer
@@ -764,8 +766,8 @@ redis:
     # mount the service account token
     automountServiceAccountToken: false
     image:
-      repository: goharbor/redis-photon
-      tag: v2.4.1
+      repository: harbor/harbor-redis
+      digest: {{harbor/harbor-redis}}
     # resources:
     #  requests:
     #    memory: 256Mi
@@ -804,8 +806,8 @@ exporter:
     # mount the service account token
     automountServiceAccountToken: false
     image:
-      repository: goharbor/harbor-exporter
-      tag: v2.4.1
+      repository: harbor/harbor-exporter
+      digest: {{harbor/harbor-exporter}}
     nodeSelector: {}
     tolerations: []
     affinity: {}
-- 
2.32.0 (Apple Git-132)

