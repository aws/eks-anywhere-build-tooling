From 5e0c8c8e991deceae23b82b61c0275f840034bd2 Mon Sep 17 00:00:00 2001
From: Guillermo Gaston <gaslor@amazon.com>
Date: Tue, 3 Aug 2021 09:31:32 +0000
Subject: [PATCH 3/9] Fixed linting

---
 apis/config.go                   | 3 +++
 initsystem/kubelet/initsystem.go | 6 ++++--
 initsystem/systemd.go            | 6 +++---
 3 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/apis/config.go b/apis/config.go
index 9ab7f312..3eddb02b 100644
--- a/apis/config.go
+++ b/apis/config.go
@@ -94,10 +94,13 @@ type EtcdAdmConfig struct {
 	InitSystem InitSystem
 }
 
+// InitSystem represents the different types of init system
 type InitSystem string
 
 const (
+	// Systemd represents the systemd init system
 	Systemd InitSystem = "systemd"
+	// Kubelet represents the kubelet init system
 	Kubelet InitSystem = "kubelet"
 )
 
diff --git a/initsystem/kubelet/initsystem.go b/initsystem/kubelet/initsystem.go
index d907753a..bf7cba6e 100644
--- a/initsystem/kubelet/initsystem.go
+++ b/initsystem/kubelet/initsystem.go
@@ -30,8 +30,9 @@ import (
 	"sigs.k8s.io/yaml"
 )
 
-const DefaultEtcdStartupTimeout = 30 * time.Second
+const defaultEtcdStartupTimeout = 30 * time.Second
 
+// New creates a new kubelet init system
 func New(config *apis.EtcdAdmConfig) *InitSystem {
 	return &InitSystem{
 		desiredConfig: config,
@@ -303,6 +304,7 @@ type hostPath struct {
 	Type string `json:"type"`
 }
 
+// Install downloads all the necessary components
 func (s InitSystem) Install() error {
 	// TODO: preload etcd image to make start up times more reliable?
 	return nil
@@ -316,5 +318,5 @@ func (s InitSystem) Configure() error {
 
 // StartupTimeout defines the max time that the system should wait for etcd to be up
 func (s InitSystem) StartupTimeout() time.Duration {
-	return DefaultEtcdStartupTimeout
+	return defaultEtcdStartupTimeout
 }
diff --git a/initsystem/systemd.go b/initsystem/systemd.go
index ab84d499..de99e82c 100644
--- a/initsystem/systemd.go
+++ b/initsystem/systemd.go
@@ -32,7 +32,7 @@ import (
 	"sigs.k8s.io/etcdadm/service"
 )
 
-const DefaultEtcdStartupTimeout = 5 * time.Second
+const defaultEtcdStartupTimeout = 5 * time.Second
 
 // SystemdInitSystem defines systemd init system
 type SystemdInitSystem struct {
@@ -171,7 +171,7 @@ func (s SystemdInitSystem) Install() error {
 		return fmt.Errorf("artifact could not be installed from cache: %w", err)
 	}
 	if !inCache {
-		log.Printf("[install] Artifact not found in cache. Trying to fetch from upstream: %w", s.etcdAdmConfig.ReleaseURL)
+		log.Printf("[install] Artifact not found in cache. Trying to fetch from upstream: %s", s.etcdAdmConfig.ReleaseURL)
 		if err = binary.Download(s.etcdAdmConfig.ReleaseURL, s.etcdAdmConfig.Version, s.etcdAdmConfig.CacheDir); err != nil {
 			return fmt.Errorf("unable to fetch artifact from upstream: %w", err)
 		}
@@ -231,5 +231,5 @@ func (s SystemdInitSystem) writeUnitFile() error {
 
 // StartupTimeout defines the max time that the system should wait for etcd to be up
 func (s SystemdInitSystem) StartupTimeout() time.Duration {
-	return DefaultEtcdStartupTimeout
+	return defaultEtcdStartupTimeout
 }
-- 
2.25.1

