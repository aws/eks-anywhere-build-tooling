From 3593f49cd4a1f874b0f5a24ef4de7040164037c4 Mon Sep 17 00:00:00 2001
From: Aravind Ramalingam <ramaliar@amazon.com>
Date: Mon, 22 Jan 2024 12:47:26 -0800
Subject: [PATCH 30/36] Adding support for multiple registry mirrors in
 bottlerocket

---
 .../kubeadm/v1beta1/kubeadm_types.go          |  15 +++
 .../v1beta1/zz_generated.conversion.go        |  34 +++++
 .../kubeadm/v1beta1/zz_generated.deepcopy.go  |  31 ++++-
 .../kubeadm/v1beta2/kubeadm_types.go          |  15 +++
 .../kubeadm/v1beta2/zz_generated.deepcopy.go  |  31 ++++-
 api/core/v1beta1/machinedeployment_types.go   |  18 ++-
 api/core/v1beta1/zz_generated.openapi.go      |   2 +-
 ...strap.cluster.x-k8s.io_kubeadmconfigs.yaml | 108 ++++++++++++++++
 ...uster.x-k8s.io_kubeadmconfigtemplates.yaml | 120 ++++++++++++++++++
 .../internal/bottlerocket/bootstrap.go        |  20 ++-
 .../internal/bottlerocket/bootstrap_test.go   |  72 ++++++++++-
 .../internal/bottlerocket/bottlerocket.go     |  28 +++-
 .../controllers/kubeadmconfig_controller.go   |  12 +-
 .../zz_generated.conversion.go                |   1 +
 .../cluster.x-k8s.io_clusterclasses.yaml      |   8 +-
 .../crd/bases/cluster.x-k8s.io_clusters.yaml  |   8 +-
 .../cluster.x-k8s.io_machinedeployments.yaml  |   8 +-
 ...cluster.x-k8s.io_kubeadmcontrolplanes.yaml | 120 ++++++++++++++++++
 ...x-k8s.io_kubeadmcontrolplanetemplates.yaml | 120 ++++++++++++++++++
 .../kubeadm/v1alpha4/kubeadm_types.go         |  15 +++
 .../v1alpha4/zz_generated.conversion.go       |  34 +++++
 .../kubeadm/v1alpha4/zz_generated.deepcopy.go |  31 ++++-
 22 files changed, 825 insertions(+), 26 deletions(-)

diff --git a/api/bootstrap/kubeadm/v1beta1/kubeadm_types.go b/api/bootstrap/kubeadm/v1beta1/kubeadm_types.go
index e51124d21..5257ae74e 100644
--- a/api/bootstrap/kubeadm/v1beta1/kubeadm_types.go
+++ b/api/bootstrap/kubeadm/v1beta1/kubeadm_types.go
@@ -339,6 +339,21 @@ type RegistryMirrorConfiguration struct {
 
 	// CACert defines the CA cert for the registry mirror
 	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
 }
 
 // ControlPlaneComponent holds settings common to control plane component of the cluster.
diff --git a/api/bootstrap/kubeadm/v1beta1/zz_generated.conversion.go b/api/bootstrap/kubeadm/v1beta1/zz_generated.conversion.go
index 14f2053b5..555adca33 100644
--- a/api/bootstrap/kubeadm/v1beta1/zz_generated.conversion.go
+++ b/api/bootstrap/kubeadm/v1beta1/zz_generated.conversion.go
@@ -290,6 +290,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*Mirror)(nil), (*v1beta2.Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_Mirror_To_v1beta2_Mirror(a.(*Mirror), b.(*v1beta2.Mirror), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta2.Mirror)(nil), (*Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta2_Mirror_To_v1beta1_Mirror(a.(*v1beta2.Mirror), b.(*Mirror), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*NTP)(nil), (*v1beta2.NTP)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta1_NTP_To_v1beta2_NTP(a.(*NTP), b.(*v1beta2.NTP), scope)
 	}); err != nil {
@@ -2065,6 +2075,28 @@ func autoConvert_v1beta2_LocalEtcd_To_v1beta1_LocalEtcd(in *v1beta2.LocalEtcd, o
 	return nil
 }
 
+func autoConvert_v1beta1_Mirror_To_v1beta2_Mirror(in *Mirror, out *v1beta2.Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1beta1_Mirror_To_v1beta2_Mirror is an autogenerated conversion function.
+func Convert_v1beta1_Mirror_To_v1beta2_Mirror(in *Mirror, out *v1beta2.Mirror, s conversion.Scope) error {
+	return autoConvert_v1beta1_Mirror_To_v1beta2_Mirror(in, out, s)
+}
+
+func autoConvert_v1beta2_Mirror_To_v1beta1_Mirror(in *v1beta2.Mirror, out *Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1beta2_Mirror_To_v1beta1_Mirror is an autogenerated conversion function.
+func Convert_v1beta2_Mirror_To_v1beta1_Mirror(in *v1beta2.Mirror, out *Mirror, s conversion.Scope) error {
+	return autoConvert_v1beta2_Mirror_To_v1beta1_Mirror(in, out, s)
+}
+
 func autoConvert_v1beta1_NTP_To_v1beta2_NTP(in *NTP, out *v1beta2.NTP, s conversion.Scope) error {
 	out.Servers = *(*[]string)(unsafe.Pointer(&in.Servers))
 	out.Enabled = (*bool)(unsafe.Pointer(in.Enabled))
@@ -2223,6 +2255,7 @@ func Convert_v1beta2_ProxyConfiguration_To_v1beta1_ProxyConfiguration(in *v1beta
 func autoConvert_v1beta1_RegistryMirrorConfiguration_To_v1beta2_RegistryMirrorConfiguration(in *RegistryMirrorConfiguration, out *v1beta2.RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
@@ -2234,6 +2267,7 @@ func Convert_v1beta1_RegistryMirrorConfiguration_To_v1beta2_RegistryMirrorConfig
 func autoConvert_v1beta2_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(in *v1beta2.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/api/bootstrap/kubeadm/v1beta1/zz_generated.deepcopy.go b/api/bootstrap/kubeadm/v1beta1/zz_generated.deepcopy.go
index 33b5f34c5..89054205a 100644
--- a/api/bootstrap/kubeadm/v1beta1/zz_generated.deepcopy.go
+++ b/api/bootstrap/kubeadm/v1beta1/zz_generated.deepcopy.go
@@ -374,7 +374,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 		copy(*out, *in)
 	}
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.Etcd.DeepCopyInto(&out.Etcd)
 	out.Networking = in.Networking
 	in.APIServer.DeepCopyInto(&out.APIServer)
@@ -858,7 +858,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 		copy(*out, *in)
 	}
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.NodeRegistration.DeepCopyInto(&out.NodeRegistration)
 	in.Discovery.DeepCopyInto(&out.Discovery)
 	if in.ControlPlane != nil {
@@ -1353,6 +1353,26 @@ func (in *LocalEtcd) DeepCopy() *LocalEtcd {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *Mirror) DeepCopyInto(out *Mirror) {
+	*out = *in
+	if in.Endpoints != nil {
+		in, out := &in.Endpoints, &out.Endpoints
+		*out = make([]string, len(*in))
+		copy(*out, *in)
+	}
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mirror.
+func (in *Mirror) DeepCopy() *Mirror {
+	if in == nil {
+		return nil
+	}
+	out := new(Mirror)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in MountPoints) DeepCopyInto(out *MountPoints) {
 	{
@@ -1546,6 +1566,13 @@ func (in *ProxyConfiguration) DeepCopy() *ProxyConfiguration {
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *RegistryMirrorConfiguration) DeepCopyInto(out *RegistryMirrorConfiguration) {
 	*out = *in
+	if in.Mirrors != nil {
+		in, out := &in.Mirrors, &out.Mirrors
+		*out = make([]Mirror, len(*in))
+		for i := range *in {
+			(*in)[i].DeepCopyInto(&(*out)[i])
+		}
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryMirrorConfiguration.
diff --git a/api/bootstrap/kubeadm/v1beta2/kubeadm_types.go b/api/bootstrap/kubeadm/v1beta2/kubeadm_types.go
index d1007c058..81d734fe6 100644
--- a/api/bootstrap/kubeadm/v1beta2/kubeadm_types.go
+++ b/api/bootstrap/kubeadm/v1beta2/kubeadm_types.go
@@ -132,6 +132,21 @@ type RegistryMirrorConfiguration struct {
 
 	// CACert defines the CA cert for the registry mirror
 	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
 }
 
 // ClusterConfiguration contains cluster-wide configuration for a kubeadm cluster.
diff --git a/api/bootstrap/kubeadm/v1beta2/zz_generated.deepcopy.go b/api/bootstrap/kubeadm/v1beta2/zz_generated.deepcopy.go
index 861fc79b9..d54bb1740 100644
--- a/api/bootstrap/kubeadm/v1beta2/zz_generated.deepcopy.go
+++ b/api/bootstrap/kubeadm/v1beta2/zz_generated.deepcopy.go
@@ -385,7 +385,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	if in.BottlerocketHostContainers != nil {
 		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
 		*out = make([]BottlerocketHostContainer, len(*in))
@@ -774,7 +774,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	if in.BottlerocketCustomHostContainers != nil {
 		in, out := &in.BottlerocketCustomHostContainers, &out.BottlerocketCustomHostContainers
 		*out = make([]BottlerocketHostContainer, len(*in))
@@ -1295,6 +1295,26 @@ func (in *LocalEtcd) DeepCopy() *LocalEtcd {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *Mirror) DeepCopyInto(out *Mirror) {
+	*out = *in
+	if in.Endpoints != nil {
+		in, out := &in.Endpoints, &out.Endpoints
+		*out = make([]string, len(*in))
+		copy(*out, *in)
+	}
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mirror.
+func (in *Mirror) DeepCopy() *Mirror {
+	if in == nil {
+		return nil
+	}
+	out := new(Mirror)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in MountPoints) DeepCopyInto(out *MountPoints) {
 	{
@@ -1476,6 +1496,13 @@ func (in *ProxyConfiguration) DeepCopy() *ProxyConfiguration {
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *RegistryMirrorConfiguration) DeepCopyInto(out *RegistryMirrorConfiguration) {
 	*out = *in
+	if in.Mirrors != nil {
+		in, out := &in.Mirrors, &out.Mirrors
+		*out = make([]Mirror, len(*in))
+		for i := range *in {
+			(*in)[i].DeepCopyInto(&(*out)[i])
+		}
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryMirrorConfiguration.
diff --git a/api/core/v1beta1/machinedeployment_types.go b/api/core/v1beta1/machinedeployment_types.go
index 4abb03a9a..225b088ca 100644
--- a/api/core/v1beta1/machinedeployment_types.go
+++ b/api/core/v1beta1/machinedeployment_types.go
@@ -39,6 +39,9 @@ const (
 	// i.e. gradually scale down the old MachineSet and scale up the new one.
 	RollingUpdateMachineDeploymentStrategyType MachineDeploymentStrategyType = "RollingUpdate"
 
+	// InPlaceMachineDeploymentStrategyType upgrades the machines within the same MachineSet without rolling out any new nodes.
+	InPlaceMachineDeploymentStrategyType MachineDeploymentStrategyType = "InPlace"
+
 	// OnDeleteMachineDeploymentStrategyType replaces old MachineSets when the deletion of the associated machines are completed.
 	OnDeleteMachineDeploymentStrategyType MachineDeploymentStrategyType = "OnDelete"
 
@@ -60,6 +63,12 @@ const (
 	// proportions in case the deployment has surge replicas.
 	MaxReplicasAnnotation = "machinedeployment.clusters.x-k8s.io/max-replicas"
 
+	// MachineDeploymentInPlaceUpgradeAnnotation is used to denote that the MachineDeployment needs to be in-place upgraded by an external entity.
+	// This annotation will be added to the MD object when `strategy.type` is set to `InPlace`.
+	// The external upgrader entity should watch for the annotation and trigger an upgrade when it's added.
+	// Once the upgrade is complete, the external upgrade implementer is also responsible for removing this annotation.
+	MachineDeploymentInPlaceUpgradeAnnotation = "machinedeployment.clusters.x-k8s.io/in-place-upgrade-needed"
+
 	// MachineDeploymentUniqueLabel is used to uniquely identify the Machines of a MachineSet.
 	// The MachineDeployment controller will set this label on a MachineSet when it is created.
 	// The label is also applied to the Machines of the MachineSet and used in the MachineSet selector.
@@ -326,9 +335,14 @@ type MachineDeploymentSpec struct {
 // MachineDeploymentStrategy describes how to replace existing machines
 // with new ones.
 type MachineDeploymentStrategy struct {
-	// type of deployment. Allowed values are RollingUpdate and OnDelete.
+	// type of rollout strategy to use.
+	// Supported values:
+	// - `RollingUpdate`: replaces the old MachineSet by new one using rolling update
+	// i.e. gradually scale down the old MachineSet and scale up the new one.
+	// - `OnDelete`: replaces old MachineSets when the deletion of the associated machines are completed.
+	// - `InPlace`: upgrades the machines within the same MachineSet without rolling out any new nodes.
 	// The default is RollingUpdate.
-	// +kubebuilder:validation:Enum=RollingUpdate;OnDelete
+	// +kubebuilder:validation:Enum=RollingUpdate;OnDelete;InPlace
 	// +optional
 	Type MachineDeploymentStrategyType `json:"type,omitempty"`
 
diff --git a/api/core/v1beta1/zz_generated.openapi.go b/api/core/v1beta1/zz_generated.openapi.go
index c7285e46e..aa856ed8f 100644
--- a/api/core/v1beta1/zz_generated.openapi.go
+++ b/api/core/v1beta1/zz_generated.openapi.go
@@ -2535,7 +2535,7 @@ func schema_cluster_api_api_core_v1beta1_MachineDeploymentStrategy(ref common.Re
 				Properties: map[string]spec.Schema{
 					"type": {
 						SchemaProps: spec.SchemaProps{
-							Description: "type of deployment. Allowed values are RollingUpdate and OnDelete. The default is RollingUpdate.",
+							Description: "type of rollout strategy to use. Supported values: - `RollingUpdate`: replaces the old MachineSet by new one using rolling update i.e. gradually scale down the old MachineSet and scale up the new one. - `OnDelete`: replaces old MachineSets when the deletion of the associated machines are completed. - `InPlace`: upgrades the machines within the same MachineSet without rolling out any new nodes. The default is RollingUpdate.",
 							Type:        []string{"string"},
 							Format:      "",
 						},
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
index 3c0610254..85bb1aa73 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
@@ -1556,6 +1556,24 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: |-
+                                Endpoints defines the registry mirror endpoints to use for pulling images.
+                                Currently we support only one private registry. Hence endpoints would have only one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   scheduler:
                     description: scheduler contains extra settings for the scheduler
@@ -2311,6 +2329,24 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: |-
+                                Endpoints defines the registry mirror endpoints to use for pulling images.
+                                Currently we support only one private registry. Hence endpoints would have only one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                 type: object
               mounts:
@@ -3503,6 +3539,24 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: |-
+                                Endpoints defines the registry mirror endpoints to use for pulling images.
+                                Currently we support only one private registry. Hence endpoints would have only one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   scheduler:
                     description: scheduler contains extra settings for the scheduler
@@ -4753,6 +4807,24 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: |-
+                                Endpoints defines the registry mirror endpoints to use for pulling images.
+                                Currently we support only one private registry. Hence endpoints would have only one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   skipPhases:
                     description: |-
@@ -6179,6 +6251,24 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: |-
+                                Endpoints defines the registry mirror endpoints to use for pulling images.
+                                Currently we support only one private registry. Hence endpoints would have only one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   scheduler:
                     description: scheduler contains extra settings for the scheduler
@@ -7574,6 +7664,24 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: |-
+                                Endpoints defines the registry mirror endpoints to use for pulling images.
+                                Currently we support only one private registry. Hence endpoints would have only one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   skipPhases:
                     description: |-
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
index e11c9971f..00f4035f1 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
@@ -1528,6 +1528,26 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: |-
+                                        Endpoints defines the registry mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry. Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           scheduler:
                             description: scheduler contains extra settings for the
@@ -2300,6 +2320,26 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: |-
+                                        Endpoints defines the registry mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry. Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                         type: object
                       mounts:
@@ -3484,6 +3524,26 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: |-
+                                        Endpoints defines the registry mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry. Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           scheduler:
                             description: scheduler contains extra settings for the
@@ -4762,6 +4822,26 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: |-
+                                        Endpoints defines the registry mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry. Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           skipPhases:
                             description: |-
@@ -6093,6 +6173,26 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: |-
+                                        Endpoints defines the registry mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry. Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           scheduler:
                             description: scheduler contains extra settings for the
@@ -7513,6 +7613,26 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: |-
+                                        Endpoints defines the registry mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry. Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           skipPhases:
                             description: |-
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
index b3cf9a03f..9e88da034 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
@@ -74,8 +74,11 @@ no-proxy = [{{stringsJoin .NoProxyEndpoints "," }}]
 {{- end -}}
 `
 	registryMirrorTemplate = `{{ define "registryMirrorSettings" -}}
-[settings.container-registry.mirrors]
-"public.ecr.aws" = ["https://{{.RegistryMirrorEndpoint}}"]
+{{- range $orig, $mirror := .RegistryMirrorMap }}
+[[settings.container-registry.mirrors]]
+registry = "{{ $orig }}"
+endpoint = [{{stringsJoin $mirror "," }}]
+{{- end -}}
 {{- end -}}
 `
 	registryMirrorCACertTemplate = `{{ define "registryMirrorCACertSettings" -}}
@@ -88,16 +91,21 @@ trusted=true
 	// to "public.ecr.aws" rather than the mirror's endpoint
 	// TODO: Once the bottlerocket fixes are in we need to remove the "public.ecr.aws" creds
 	registryMirrorCredentialsTemplate = `{{define "registryMirrorCredentialsSettings" -}}
+{{- range $orig, $mirror := .RegistryMirrorMap }}
+{{- if (eq $orig "public.ecr.aws")}}
 [[settings.container-registry.credentials]]
-registry = "public.ecr.aws"
-username = "{{.RegistryMirrorUsername}}"
-password = "{{.RegistryMirrorPassword}}"
+registry = "{{ $orig }}"
+username = "{{$.RegistryMirrorUsername}}"
+password = "{{$.RegistryMirrorPassword}}"
+{{- end }}
+{{- end }}
 [[settings.container-registry.credentials]]
 registry = "{{.RegistryMirrorEndpoint}}"
 username = "{{.RegistryMirrorUsername}}"
 password = "{{.RegistryMirrorPassword}}"
 {{- end -}}
 `
+
 	nodeLabelsTemplate = `{{ define "nodeLabelSettings" -}}
 [settings.kubernetes.node-labels]
 {{.NodeLabels}}
@@ -153,7 +161,7 @@ trusted = true
 {{- end -}}
 
 
-{{- if (ne .RegistryMirrorEndpoint "")}}
+{{- if .RegistryMirrorMap}}
 {{template "registryMirrorSettings" .}}
 {{- end -}}
 
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
index 7d1f8c6f5..8180a3f17 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
@@ -134,8 +134,9 @@ provider-id = "PROVIDERID"
 
 [settings.network]
 hostname = "hostname"
-[settings.container-registry.mirrors]
-"public.ecr.aws" = ["https://REGISTRY_ENDPOINT"]
+[[settings.container-registry.mirrors]]
+registry = "public.ecr.aws"
+endpoint = ["REGISTRY_ENDPOINT"]
 [settings.pki.registry-mirror-ca]
 data = "UkVHSVNUUllfQ0E="
 trusted=true`
@@ -162,8 +163,9 @@ provider-id = "PROVIDERID"
 
 [settings.network]
 hostname = "hostname"
-[settings.container-registry.mirrors]
-"public.ecr.aws" = ["https://REGISTRY_ENDPOINT"]
+[[settings.container-registry.mirrors]]
+registry = "public.ecr.aws"
+endpoint = ["REGISTRY_ENDPOINT"]
 [settings.pki.registry-mirror-ca]
 data = "UkVHSVNUUllfQ0E="
 trusted=true
@@ -338,6 +340,39 @@ trusted = true
 [settings.pki.bundle2]
 data = "MTIzNDU2"
 trusted = true`
+
+	registryMirrorMultipleMirrorsUserData = `
+[settings.host-containers.admin]
+enabled = true
+superpowered = true
+source = "ADMIN_REPO:ADMIN_TAG"
+user-data = "CnsKCSJzc2giOiB7CgkJImF1dGhvcml6ZWQta2V5cyI6IFsic3NoLXJzYSBBQUEuLi4iXQoJfQp9"
+[settings.host-containers.kubeadm-bootstrap]
+enabled = true
+superpowered = true
+source = "BOOTSTRAP_REPO:BOOTSTRAP_TAG"
+user-data = "Qk9UVExFUk9DS0VUX0JPT1RTVFJBUF9VU0VSREFUQQ=="
+
+[settings.kubernetes]
+cluster-domain = "cluster.local"
+standalone-mode = true
+authentication-mode = "tls"
+server-tls-bootstrap = false
+pod-infra-container-image = "PAUSE_REPO:PAUSE_TAG"
+provider-id = "PROVIDERID"
+
+[settings.network]
+hostname = "hostname"
+
+[[settings.container-registry.mirrors]]
+registry = "docker.io"
+endpoint = ["REGISTRY_ENDPOINT"]
+[[settings.container-registry.mirrors]]
+registry = "public.ecr.aws"
+endpoint = ["REGISTRY_ENDPOINT"]
+[settings.pki.registry-mirror-ca]
+data = "UkVHSVNUUllfQ0E="
+trusted=true`
 )
 
 var (
@@ -651,6 +686,35 @@ func TestGetBottlerocketNodeUserData(t *testing.T) {
 			},
 			output: userDataWithCertBundle,
 		},
+		{
+			name: "with multiple registries to mirror",
+			config: &BottlerocketConfig{
+				BottlerocketAdmin:     brAdmin,
+				BottlerocketBootstrap: brBootstrap,
+				Hostname:              hostname,
+				Pause:                 pause,
+				KubeletExtraArgs: []bootstrapv1.Arg{
+					{
+						Name:  "provider-id",
+						Value: stringPtr("PROVIDERID"),
+					},
+				},
+				RegistryMirrorConfiguration: bootstrapv1.RegistryMirrorConfiguration{
+					CACert: "REGISTRY_CA",
+					Mirrors: []bootstrapv1.Mirror{
+						{
+							Registry:  "docker.io",
+							Endpoints: []string{"REGISTRY_ENDPOINT"},
+						},
+						{
+							Registry:  "public.ecr.aws",
+							Endpoints: []string{"REGISTRY_ENDPOINT"},
+						},
+					},
+				},
+			},
+			output: registryMirrorMultipleMirrorsUserData,
+		},
 	}
 	for _, testcase := range testcases {
 		t.Run(testcase.name, func(t *testing.T) {
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
index 858b35790..2611712fe 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
@@ -4,6 +4,7 @@ import (
 	"bytes"
 	"encoding/base64"
 	"fmt"
+	"regexp"
 	"strconv"
 	"strings"
 	"text/template"
@@ -67,6 +68,7 @@ type BottlerocketSettingsInput struct {
 	BootstrapContainers        []bootstrapv1.BottlerocketBootstrapContainer
 	SysctlSettings             string
 	CertBundles                []bootstrapv1.CertBundle
+	RegistryMirrorMap          map[string][]string
 }
 
 // HostPath holds the path and type of a host path volume.
@@ -237,7 +239,6 @@ func getBottlerocketNodeUserData(bootstrapContainerUserData []byte, users []boot
 		BootstrapContainerSource: fmt.Sprintf("%s:%s", config.BottlerocketBootstrap.ImageRepository, config.BottlerocketBootstrap.ImageTag),
 		PauseContainerSource:     fmt.Sprintf("%s:%s", config.Pause.ImageRepository, config.Pause.ImageTag),
 		HTTPSProxyEndpoint:       config.ProxyConfiguration.HTTPSProxy,
-		RegistryMirrorEndpoint:   config.RegistryMirrorConfiguration.Endpoint,
 		NodeLabels:               parseNodeLabels(getArgValue(config.KubeletExtraArgs, "node-labels")), // empty string if it does not exist
 		Taints:                   parseTaints(config.Taints),                                           //empty string if it does not exist
 		ProviderID:               getArgValue(config.KubeletExtraArgs, "provider-id"),
@@ -251,6 +252,31 @@ func getBottlerocketNodeUserData(bootstrapContainerUserData []byte, users []boot
 			bottlerocketInput.NoProxyEndpoints = append(bottlerocketInput.NoProxyEndpoints, strconv.Quote(noProxy))
 		}
 	}
+
+	// When RegistryMirrorConfiguration.Endpoint is specified, we default the mirror to public.ecr.aws.
+	// This was done for backward compatability, since public.ecr.aws was the only supported registry before.
+	// For existing customers this ensures that their nodes dont rollout, unless more mirrors are specified explicitly.
+	// If RegistryMirrorConfiguration.Endpoint is not specified, we iterate the RegistryMirrorConfiguration.Mirrors to setup the mirrors.
+	bottlerocketInput.RegistryMirrorMap = make(map[string][]string)
+	endpointRegex := regexp.MustCompile(`^(https?:\/\/)?[\w\.\:\-]+`)
+	if config.RegistryMirrorConfiguration.Endpoint != "" {
+		bottlerocketInput.RegistryMirrorMap["public.ecr.aws"] = []string{strconv.Quote(config.RegistryMirrorConfiguration.Endpoint)}
+		if endpoint := endpointRegex.FindStringSubmatch(config.RegistryMirrorConfiguration.Endpoint); endpoint != nil {
+			bottlerocketInput.RegistryMirrorEndpoint = endpoint[0]
+		}
+	} else if len(config.RegistryMirrorConfiguration.Mirrors) > 0 {
+		for _, mirror := range config.RegistryMirrorConfiguration.Mirrors {
+			for _, endpoint := range mirror.Endpoints {
+				bottlerocketInput.RegistryMirrorMap[mirror.Registry] = append(bottlerocketInput.RegistryMirrorMap[mirror.Registry], strconv.Quote(endpoint))
+			}
+		}
+
+		// Right now we support only one private registry. Hence defaulting to first entry.
+		if endpoint := endpointRegex.FindStringSubmatch(config.RegistryMirrorConfiguration.Mirrors[0].Endpoints[0]); endpoint != nil {
+			bottlerocketInput.RegistryMirrorEndpoint = endpoint[0]
+		}
+	}
+
 	if config.RegistryMirrorConfiguration.CACert != "" {
 		bottlerocketInput.RegistryMirrorCACert = base64.StdEncoding.EncodeToString([]byte(config.RegistryMirrorConfiguration.CACert))
 	}
diff --git a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
index 142ad064a..c6f695a8e 100644
--- a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
+++ b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
@@ -580,7 +580,9 @@ func (r *KubeadmConfigReconciler) handleClusterNotInitialized(ctx context.Contex
 		if scope.Config.Spec.ClusterConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.ClusterConfiguration.Proxy
 		}
-		if scope.Config.Spec.ClusterConfiguration.RegistryMirror.Endpoint != "" {
+
+		if scope.Config.Spec.ClusterConfiguration.RegistryMirror.Endpoint != "" ||
+			len(scope.Config.Spec.ClusterConfiguration.RegistryMirror.Mirrors) != 0 {
 			bottlerocketConfig.RegistryMirrorConfiguration = scope.Config.Spec.ClusterConfiguration.RegistryMirror
 			registryUsername, registryPassword, err := r.resolveRegistryCredentials(ctx, scope.Config)
 			if err != nil {
@@ -906,7 +908,9 @@ func (r *KubeadmConfigReconciler) joinWorker(ctx context.Context, scope *Scope)
 		if scope.Config.Spec.JoinConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.JoinConfiguration.Proxy
 		}
-		if scope.Config.Spec.JoinConfiguration.RegistryMirror.Endpoint != "" {
+
+		if scope.Config.Spec.JoinConfiguration.RegistryMirror.Endpoint != "" ||
+			len(scope.Config.Spec.JoinConfiguration.RegistryMirror.Mirrors) != 0 {
 			bottlerocketConfig.RegistryMirrorConfiguration = scope.Config.Spec.JoinConfiguration.RegistryMirror
 			registryUsername, registryPassword, err := r.resolveRegistryCredentials(ctx, scope.Config)
 			if err != nil {
@@ -1113,7 +1117,9 @@ func (r *KubeadmConfigReconciler) joinControlplane(ctx context.Context, scope *S
 		if scope.Config.Spec.JoinConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.JoinConfiguration.Proxy
 		}
-		if scope.Config.Spec.ClusterConfiguration.RegistryMirror.Endpoint != "" {
+
+		if scope.Config.Spec.ClusterConfiguration.RegistryMirror.Endpoint != "" ||
+			len(scope.Config.Spec.ClusterConfiguration.RegistryMirror.Mirrors) != 0 {
 			bottlerocketConfig.RegistryMirrorConfiguration = scope.Config.Spec.ClusterConfiguration.RegistryMirror
 			registryUsername, registryPassword, err := r.resolveRegistryCredentials(ctx, scope.Config)
 			if err != nil {
diff --git a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
index dcfbb99ef..9f868bd92 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
@@ -879,6 +879,7 @@ func Convert_upstreamv1beta3_RegistryMirrorConfiguration_To_v1beta2_RegistryMirr
 func autoConvert_v1beta2_RegistryMirrorConfiguration_To_upstreamv1beta3_RegistryMirrorConfiguration(in *v1beta2.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/config/crd/bases/cluster.x-k8s.io_clusterclasses.yaml b/config/crd/bases/cluster.x-k8s.io_clusterclasses.yaml
index 8df5a13f3..7bcc1a856 100644
--- a/config/crd/bases/cluster.x-k8s.io_clusterclasses.yaml
+++ b/config/crd/bases/cluster.x-k8s.io_clusterclasses.yaml
@@ -1858,11 +1858,17 @@ spec:
                               type: object
                             type:
                               description: |-
-                                type of deployment. Allowed values are RollingUpdate and OnDelete.
+                                type of rollout strategy to use.
+                                Supported values:
+                                - `RollingUpdate`: replaces the old MachineSet by new one using rolling update
+                                i.e. gradually scale down the old MachineSet and scale up the new one.
+                                - `OnDelete`: replaces old MachineSets when the deletion of the associated machines are completed.
+                                - `InPlace`: upgrades the machines within the same MachineSet without rolling out any new nodes.
                                 The default is RollingUpdate.
                               enum:
                               - RollingUpdate
                               - OnDelete
+                              - InPlace
                               type: string
                           type: object
                         template:
diff --git a/config/crd/bases/cluster.x-k8s.io_clusters.yaml b/config/crd/bases/cluster.x-k8s.io_clusters.yaml
index caf74526a..62da0c06b 100644
--- a/config/crd/bases/cluster.x-k8s.io_clusters.yaml
+++ b/config/crd/bases/cluster.x-k8s.io_clusters.yaml
@@ -1824,11 +1824,17 @@ spec:
                                   type: object
                                 type:
                                   description: |-
-                                    type of deployment. Allowed values are RollingUpdate and OnDelete.
+                                    type of rollout strategy to use.
+                                    Supported values:
+                                    - `RollingUpdate`: replaces the old MachineSet by new one using rolling update
+                                    i.e. gradually scale down the old MachineSet and scale up the new one.
+                                    - `OnDelete`: replaces old MachineSets when the deletion of the associated machines are completed.
+                                    - `InPlace`: upgrades the machines within the same MachineSet without rolling out any new nodes.
                                     The default is RollingUpdate.
                                   enum:
                                   - RollingUpdate
                                   - OnDelete
+                                  - InPlace
                                   type: string
                               type: object
                             variables:
diff --git a/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml b/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml
index 86dd138d2..3e6fbb0b7 100644
--- a/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml
+++ b/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml
@@ -1348,11 +1348,17 @@ spec:
                     type: object
                   type:
                     description: |-
-                      type of deployment. Allowed values are RollingUpdate and OnDelete.
+                      type of rollout strategy to use.
+                      Supported values:
+                      - `RollingUpdate`: replaces the old MachineSet by new one using rolling update
+                      i.e. gradually scale down the old MachineSet and scale up the new one.
+                      - `OnDelete`: replaces old MachineSets when the deletion of the associated machines are completed.
+                      - `InPlace`: upgrades the machines within the same MachineSet without rolling out any new nodes.
                       The default is RollingUpdate.
                     enum:
                     - RollingUpdate
                     - OnDelete
+                    - InPlace
                     type: string
                 type: object
               template:
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
index d2efe2233..04a5efab2 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
@@ -1789,6 +1789,26 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: |-
+                                    Endpoints defines the registry mirror endpoints to use for pulling images.
+                                    Currently we support only one private registry. Hence endpoints would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       scheduler:
                         description: scheduler contains extra settings for the scheduler
@@ -2554,6 +2574,26 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: |-
+                                    Endpoints defines the registry mirror endpoints to use for pulling images.
+                                    Currently we support only one private registry. Hence endpoints would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                     type: object
                   mounts:
@@ -3991,6 +4031,26 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: |-
+                                    Endpoints defines the registry mirror endpoints to use for pulling images.
+                                    Currently we support only one private registry. Hence endpoints would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       scheduler:
                         description: scheduler contains extra settings for the scheduler
@@ -5255,6 +5315,26 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: |-
+                                    Endpoints defines the registry mirror endpoints to use for pulling images.
+                                    Currently we support only one private registry. Hence endpoints would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       skipPhases:
                         description: |-
@@ -7121,6 +7201,26 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: |-
+                                    Endpoints defines the registry mirror endpoints to use for pulling images.
+                                    Currently we support only one private registry. Hence endpoints would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       scheduler:
                         description: scheduler contains extra settings for the scheduler
@@ -8527,6 +8627,26 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: |-
+                                    Endpoints defines the registry mirror endpoints to use for pulling images.
+                                    Currently we support only one private registry. Hence endpoints would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       skipPhases:
                         description: |-
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
index 85168abc5..82ff3b2fb 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
@@ -587,6 +587,26 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: |-
+                                            Endpoints defines the registry mirror endpoints to use for pulling images.
+                                            Currently we support only one private registry. Hence endpoints would have only one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                               scheduler:
                                 description: scheduler contains extra settings for
@@ -1367,6 +1387,26 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: |-
+                                            Endpoints defines the registry mirror endpoints to use for pulling images.
+                                            Currently we support only one private registry. Hence endpoints would have only one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                             type: object
                           mounts:
@@ -2715,6 +2755,26 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: |-
+                                            Endpoints defines the registry mirror endpoints to use for pulling images.
+                                            Currently we support only one private registry. Hence endpoints would have only one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                               scheduler:
                                 description: scheduler contains extra settings for
@@ -4004,6 +4064,26 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: |-
+                                            Endpoints defines the registry mirror endpoints to use for pulling images.
+                                            Currently we support only one private registry. Hence endpoints would have only one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                               skipPhases:
                                 description: |-
@@ -5543,6 +5623,26 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: |-
+                                            Endpoints defines the registry mirror endpoints to use for pulling images.
+                                            Currently we support only one private registry. Hence endpoints would have only one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                               scheduler:
                                 description: scheduler contains extra settings for
@@ -6977,6 +7077,26 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: |-
+                                            Endpoints defines the registry mirror endpoints to use for pulling images.
+                                            Currently we support only one private registry. Hence endpoints would have only one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                               skipPhases:
                                 description: |-
diff --git a/internal/api/bootstrap/kubeadm/v1alpha4/kubeadm_types.go b/internal/api/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
index 1530e2c95..a39c61f4b 100644
--- a/internal/api/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
+++ b/internal/api/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
@@ -259,6 +259,21 @@ type RegistryMirrorConfiguration struct {
 
 	// CACert defines the CA cert for the registry mirror
 	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
 }
 
 // ControlPlaneComponent holds settings common to control plane component of the cluster.
diff --git a/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go b/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
index 9ff4a7a8f..1bffdd045 100644
--- a/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
+++ b/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
@@ -239,6 +239,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*Mirror)(nil), (*v1beta2.Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1alpha4_Mirror_To_v1beta2_Mirror(a.(*Mirror), b.(*v1beta2.Mirror), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta2.Mirror)(nil), (*Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta2_Mirror_To_v1alpha4_Mirror(a.(*v1beta2.Mirror), b.(*Mirror), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*NTP)(nil), (*v1beta2.NTP)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1alpha4_NTP_To_v1beta2_NTP(a.(*NTP), b.(*v1beta2.NTP), scope)
 	}); err != nil {
@@ -1721,6 +1731,28 @@ func autoConvert_v1beta2_LocalEtcd_To_v1alpha4_LocalEtcd(in *v1beta2.LocalEtcd,
 	return nil
 }
 
+func autoConvert_v1alpha4_Mirror_To_v1beta2_Mirror(in *Mirror, out *v1beta2.Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1alpha4_Mirror_To_v1beta2_Mirror is an autogenerated conversion function.
+func Convert_v1alpha4_Mirror_To_v1beta2_Mirror(in *Mirror, out *v1beta2.Mirror, s conversion.Scope) error {
+	return autoConvert_v1alpha4_Mirror_To_v1beta2_Mirror(in, out, s)
+}
+
+func autoConvert_v1beta2_Mirror_To_v1alpha4_Mirror(in *v1beta2.Mirror, out *Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1beta2_Mirror_To_v1alpha4_Mirror is an autogenerated conversion function.
+func Convert_v1beta2_Mirror_To_v1alpha4_Mirror(in *v1beta2.Mirror, out *Mirror, s conversion.Scope) error {
+	return autoConvert_v1beta2_Mirror_To_v1alpha4_Mirror(in, out, s)
+}
+
 func autoConvert_v1alpha4_NTP_To_v1beta2_NTP(in *NTP, out *v1beta2.NTP, s conversion.Scope) error {
 	out.Servers = *(*[]string)(unsafe.Pointer(&in.Servers))
 	out.Enabled = (*bool)(unsafe.Pointer(in.Enabled))
@@ -1833,6 +1865,7 @@ func Convert_v1beta2_ProxyConfiguration_To_v1alpha4_ProxyConfiguration(in *v1bet
 func autoConvert_v1alpha4_RegistryMirrorConfiguration_To_v1beta2_RegistryMirrorConfiguration(in *RegistryMirrorConfiguration, out *v1beta2.RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
@@ -1844,6 +1877,7 @@ func Convert_v1alpha4_RegistryMirrorConfiguration_To_v1beta2_RegistryMirrorConfi
 func autoConvert_v1beta2_RegistryMirrorConfiguration_To_v1alpha4_RegistryMirrorConfiguration(in *v1beta2.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go b/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
index e64e5d0bf..5e30f97ba 100644
--- a/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
+++ b/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
@@ -354,7 +354,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.Etcd.DeepCopyInto(&out.Etcd)
 	out.Networking = in.Networking
 	in.APIServer.DeepCopyInto(&out.APIServer)
@@ -713,7 +713,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.NodeRegistration.DeepCopyInto(&out.NodeRegistration)
 	in.Discovery.DeepCopyInto(&out.Discovery)
 	if in.ControlPlane != nil {
@@ -1066,6 +1066,26 @@ func (in *LocalEtcd) DeepCopy() *LocalEtcd {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *Mirror) DeepCopyInto(out *Mirror) {
+	*out = *in
+	if in.Endpoints != nil {
+		in, out := &in.Endpoints, &out.Endpoints
+		*out = make([]string, len(*in))
+		copy(*out, *in)
+	}
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mirror.
+func (in *Mirror) DeepCopy() *Mirror {
+	if in == nil {
+		return nil
+	}
+	out := new(Mirror)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in MountPoints) DeepCopyInto(out *MountPoints) {
 	{
@@ -1223,6 +1243,13 @@ func (in *ProxyConfiguration) DeepCopy() *ProxyConfiguration {
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *RegistryMirrorConfiguration) DeepCopyInto(out *RegistryMirrorConfiguration) {
 	*out = *in
+	if in.Mirrors != nil {
+		in, out := &in.Mirrors, &out.Mirrors
+		*out = make([]Mirror, len(*in))
+		for i := range *in {
+			(*in)[i].DeepCopyInto(&(*out)[i])
+		}
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryMirrorConfiguration.
-- 
2.49.0

