From 509e07cca706cc666e2ef376bb5aad3a0b21006a Mon Sep 17 00:00:00 2001
From: Jiayi Wang <jiayiwang7@yahoo.com>
Date: Wed, 23 Nov 2022 09:26:28 -0500
Subject: [PATCH 18/41] Support configuring bottlerocket admin container image

---
 .../kubeadm/api/v1beta1/kubeadm_types.go      | 17 ++++
 .../api/v1beta1/zz_generated.deepcopy.go      | 18 ++++
 ...strap.cluster.x-k8s.io_kubeadmconfigs.yaml | 96 +++++++++++++++++++
 ...uster.x-k8s.io_kubeadmconfigtemplates.yaml | 96 +++++++++++++++++++
 .../internal/bottlerocket/bootstrap_test.go   | 82 +++++++++++++++-
 .../internal/bottlerocket/bottlerocket.go     |  2 +
 .../controllers/kubeadmconfig_controller.go   |  3 +
 .../kubeadm/types/upstreamv1beta1/types.go    | 17 ++++
 .../upstreamv1beta1/zz_generated.deepcopy.go  | 18 ++++
 .../zz_generated.conversion.go                |  2 +
 .../zz_generated.conversion.go                |  2 +
 ...cluster.x-k8s.io_kubeadmcontrolplanes.yaml | 96 +++++++++++++++++++
 ...x-k8s.io_kubeadmcontrolplanetemplates.yaml | 64 +++++++++++++
 .../kubeadm/v1alpha4/kubeadm_types.go         | 17 ++++
 .../v1alpha4/zz_generated.conversion.go       | 46 +++++++++
 .../kubeadm/v1alpha4/zz_generated.deepcopy.go | 18 ++++
 16 files changed, 592 insertions(+), 2 deletions(-)

diff --git a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
index 4e0e597c5..c6645682e 100644
--- a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
+++ b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
@@ -83,6 +83,11 @@ type ClusterConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
@@ -196,6 +201,13 @@ type BottlerocketBootstrap struct {
 	ImageMeta `json:",inline"`
 }
 
+// BottlerocketAdmin holds the settings of admin container for bottlerocket nodes
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketAdmin struct {
+	// ImageMeta allows to customize the image used for the BottlerocketAdmin component
+	ImageMeta `json:",inline"`
+}
+
 // BottlerocketControl holds the settings of control container for bottlerocket nodes
 // This setting is ONLY for bottlerocket nodes.
 type BottlerocketControl struct {
@@ -519,6 +531,11 @@ type JoinConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
diff --git a/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go b/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
index a6a49c6ce..3a406f009 100644
--- a/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
@@ -142,6 +142,22 @@ func (in *BootstrapTokenString) DeepCopy() *BootstrapTokenString {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketAdmin) DeepCopyInto(out *BottlerocketAdmin) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketAdmin.
+func (in *BottlerocketAdmin) DeepCopy() *BottlerocketAdmin {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketAdmin)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketBootstrap) DeepCopyInto(out *BottlerocketBootstrap) {
 	*out = *in
@@ -212,6 +228,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.TypeMeta = in.TypeMeta
 	out.Pause = in.Pause
 	out.BottlerocketBootstrap = in.BottlerocketBootstrap
+	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
@@ -685,6 +702,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.TypeMeta = in.TypeMeta
 	out.Pause = in.Pause
 	out.BottlerocketBootstrap = in.BottlerocketBootstrap
+	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
index b58a0a014..4187280aa 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
@@ -111,6 +111,22 @@ spec:
                       may reject unrecognized values.
                       More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                     type: string
+                  bottlerocketAdmin:
+                    description: |-
+                      BottlerocketAdmin holds the image source for admin container
+                      This is only for bottlerocket
+                    properties:
+                      imageRepository:
+                        description: |-
+                          ImageRepository sets the container registry to pull images from.
+                          if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                        type: string
+                      imageTag:
+                        description: |-
+                          ImageTag allows to specify a tag for the image.
+                          In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                        type: string
+                    type: object
                   bottlerocketBootstrap:
                     description: |-
                       BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -829,6 +845,22 @@ spec:
                       may reject unrecognized values.
                       More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                     type: string
+                  bottlerocketAdmin:
+                    description: |-
+                      BottlerocketAdmin holds the image source for admin container
+                      This is only for bottlerocket
+                    properties:
+                      imageRepository:
+                        description: |-
+                          ImageRepository sets the container registry to pull images from.
+                          if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                        type: string
+                      imageTag:
+                        description: |-
+                          ImageTag allows to specify a tag for the image.
+                          In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                        type: string
+                    type: object
                   bottlerocketBootstrap:
                     description: |-
                       BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -1433,6 +1465,22 @@ spec:
                       may reject unrecognized values.
                       More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                     type: string
+                  bottlerocketAdmin:
+                    description: |-
+                      BottlerocketAdmin holds the image source for admin container
+                      This is only for bottlerocket
+                    properties:
+                      imageRepository:
+                        description: |-
+                          ImageRepository sets the container registry to pull images from.
+                          if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                        type: string
+                      imageTag:
+                        description: |-
+                          ImageTag allows to specify a tag for the image.
+                          In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                        type: string
+                    type: object
                   bottlerocketBootstrap:
                     description: |-
                       BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -2147,6 +2195,22 @@ spec:
                       may reject unrecognized values.
                       More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                     type: string
+                  bottlerocketAdmin:
+                    description: |-
+                      BottlerocketAdmin holds the image source for admin container
+                      This is only for bottlerocket
+                    properties:
+                      imageRepository:
+                        description: |-
+                          ImageRepository sets the container registry to pull images from.
+                          if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                        type: string
+                      imageTag:
+                        description: |-
+                          ImageTag allows to specify a tag for the image.
+                          In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                        type: string
+                    type: object
                   bottlerocketBootstrap:
                     description: |-
                       BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -2869,6 +2933,22 @@ spec:
                       may reject unrecognized values.
                       More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                     type: string
+                  bottlerocketAdmin:
+                    description: |-
+                      BottlerocketAdmin holds the image source for admin container
+                      This is only for bottlerocket
+                    properties:
+                      imageRepository:
+                        description: |-
+                          ImageRepository sets the container registry to pull images from.
+                          if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                        type: string
+                      imageTag:
+                        description: |-
+                          ImageTag allows to specify a tag for the image.
+                          In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                        type: string
+                    type: object
                   bottlerocketBootstrap:
                     description: |-
                       BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -4072,6 +4152,22 @@ spec:
                       may reject unrecognized values.
                       More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                     type: string
+                  bottlerocketAdmin:
+                    description: |-
+                      BottlerocketAdmin holds the image source for admin container
+                      This is only for bottlerocket
+                    properties:
+                      imageRepository:
+                        description: |-
+                          ImageRepository sets the container registry to pull images from.
+                          if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                        type: string
+                      imageTag:
+                        description: |-
+                          ImageTag allows to specify a tag for the image.
+                          In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                        type: string
+                    type: object
                   bottlerocketBootstrap:
                     description: |-
                       BottlerocketBootstrap holds the image source for kubeadm bootstrap container
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
index feaad6390..7403b497b 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
@@ -119,6 +119,22 @@ spec:
                               may reject unrecognized values.
                               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                             type: string
+                          bottlerocketAdmin:
+                            description: |-
+                              BottlerocketAdmin holds the image source for admin container
+                              This is only for bottlerocket
+                            properties:
+                              imageRepository:
+                                description: |-
+                                  ImageRepository sets the container registry to pull images from.
+                                  if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                type: string
+                              imageTag:
+                                description: |-
+                                  ImageTag allows to specify a tag for the image.
+                                  In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                type: string
+                            type: object
                           bottlerocketBootstrap:
                             description: |-
                               BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -852,6 +868,22 @@ spec:
                               may reject unrecognized values.
                               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                             type: string
+                          bottlerocketAdmin:
+                            description: |-
+                              BottlerocketAdmin holds the image source for admin container
+                              This is only for bottlerocket
+                            properties:
+                              imageRepository:
+                                description: |-
+                                  ImageRepository sets the container registry to pull images from.
+                                  if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                type: string
+                              imageTag:
+                                description: |-
+                                  ImageTag allows to specify a tag for the image.
+                                  In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                type: string
+                            type: object
                           bottlerocketBootstrap:
                             description: |-
                               BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -1402,6 +1434,22 @@ spec:
                               may reject unrecognized values.
                               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                             type: string
+                          bottlerocketAdmin:
+                            description: |-
+                              BottlerocketAdmin holds the image source for admin container
+                              This is only for bottlerocket
+                            properties:
+                              imageRepository:
+                                description: |-
+                                  ImageRepository sets the container registry to pull images from.
+                                  if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                type: string
+                              imageTag:
+                                description: |-
+                                  ImageTag allows to specify a tag for the image.
+                                  In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                type: string
+                            type: object
                           bottlerocketBootstrap:
                             description: |-
                               BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -2132,6 +2180,22 @@ spec:
                               may reject unrecognized values.
                               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                             type: string
+                          bottlerocketAdmin:
+                            description: |-
+                              BottlerocketAdmin holds the image source for admin container
+                              This is only for bottlerocket
+                            properties:
+                              imageRepository:
+                                description: |-
+                                  ImageRepository sets the container registry to pull images from.
+                                  if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                type: string
+                              imageTag:
+                                description: |-
+                                  ImageTag allows to specify a tag for the image.
+                                  In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                type: string
+                            type: object
                           bottlerocketBootstrap:
                             description: |-
                               BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -2834,6 +2898,22 @@ spec:
                               may reject unrecognized values.
                               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                             type: string
+                          bottlerocketAdmin:
+                            description: |-
+                              BottlerocketAdmin holds the image source for admin container
+                              This is only for bottlerocket
+                            properties:
+                              imageRepository:
+                                description: |-
+                                  ImageRepository sets the container registry to pull images from.
+                                  if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                type: string
+                              imageTag:
+                                description: |-
+                                  ImageTag allows to specify a tag for the image.
+                                  In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                type: string
+                            type: object
                           bottlerocketBootstrap:
                             description: |-
                               BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -4070,6 +4150,22 @@ spec:
                               may reject unrecognized values.
                               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                             type: string
+                          bottlerocketAdmin:
+                            description: |-
+                              BottlerocketAdmin holds the image source for admin container
+                              This is only for bottlerocket
+                            properties:
+                              imageRepository:
+                                description: |-
+                                  ImageRepository sets the container registry to pull images from.
+                                  if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                type: string
+                              imageTag:
+                                description: |-
+                                  ImageTag allows to specify a tag for the image.
+                                  In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                type: string
+                            type: object
                           bottlerocketBootstrap:
                             description: |-
                               BottlerocketBootstrap holds the image source for kubeadm bootstrap container
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
index 9065a7c58..5ee1b0d45 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
@@ -8,7 +8,44 @@ import (
 	bootstrapv1 "sigs.k8s.io/cluster-api/bootstrap/kubeadm/api/v1beta1"
 )
 
-const userData = `
+const userDataFullSetting = `
+[settings.host-containers.admin]
+enabled = true
+superpowered = true
+source = "REPO:TAG"
+user-data = "B64USERDATA"
+[settings.host-containers.kubeadm-bootstrap]
+enabled = true
+superpowered = true
+source = "REPO:TAG"
+user-data = "B64USERDATA"
+
+[settings.kubernetes]
+cluster-domain = "cluster.local"
+standalone-mode = true
+authentication-mode = "tls"
+server-tls-bootstrap = false
+pod-infra-container-image = "PAUSE"
+provider-id = "PROVIDERID"
+
+[settings.bootstrap-containers.BOOTSTRAP]
+essential = false
+mode = "MODE"
+user-data = "B64USERDATA"
+[settings.network]
+https-proxy = "PROXY"
+no-proxy = []
+[settings.container-registry.mirrors]
+"public.ecr.aws" = ["https://REGISTRYENDPOINT"]
+[settings.pki.registry-mirror-ca]
+data = "REGISTRYCA"
+trusted=true
+[settings.kubernetes.node-labels]
+KEY=VAR
+[settings.kubernetes.node-taints]
+KEY=VAR`
+
+const userDataNoAdminImage = `
 [settings.host-containers.admin]
 enabled = true
 superpowered = true
@@ -66,6 +103,47 @@ func TestGenerateUserData(t *testing.T) {
 					{
 						Name:         "admin",
 						Superpowered: true,
+						ImageMeta: bootstrapv1.ImageMeta{
+							ImageRepository: "REPO",
+							ImageTag:        "TAG",
+						},
+						UserData: "B64USERDATA",
+					},
+					{
+						Name:         "kubeadm-bootstrap",
+						Superpowered: true,
+						ImageMeta: bootstrapv1.ImageMeta{
+							ImageRepository: "REPO",
+							ImageTag:        "TAG",
+						},
+						UserData: "B64USERDATA",
+					},
+				},
+				BootstrapContainers: []bootstrapv1.BottlerocketBootstrapContainer{
+					{
+						Name:     "BOOTSTRAP",
+						Mode:     "MODE",
+						UserData: "B64USERDATA",
+					},
+				},
+			},
+			output: userDataFullSetting,
+		},
+		{
+			name: "no admin image meta",
+			input: &BottlerocketSettingsInput{
+				PauseContainerSource:   "PAUSE",
+				HTTPSProxyEndpoint:     "PROXY",
+				RegistryMirrorEndpoint: "REGISTRYENDPOINT",
+				RegistryMirrorCACert:   "REGISTRYCA",
+				NodeLabels:             "KEY=VAR",
+				Taints:                 "KEY=VAR",
+				ProviderId:             "PROVIDERID",
+				HostContainers: []bootstrapv1.BottlerocketHostContainer{
+					{
+						Name:         "admin",
+						Superpowered: true,
+						ImageMeta:    bootstrapv1.ImageMeta{},
 						UserData:     "B64USERDATA",
 					},
 					{
@@ -86,7 +164,7 @@ func TestGenerateUserData(t *testing.T) {
 					},
 				},
 			},
-			output: userData,
+			output: userDataNoAdminImage,
 		},
 	}
 	for _, testcase := range testcases {
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
index e504684a0..9848f47e8 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
@@ -25,6 +25,7 @@ const (
 type BottlerocketConfig struct {
 	Pause                                 bootstrapv1.Pause
 	BottlerocketBootstrap                 bootstrapv1.BottlerocketBootstrap
+	BottlerocketAdmin                     bootstrapv1.BottlerocketAdmin
 	BottlerocketControl                   bootstrapv1.BottlerocketControl
 	ProxyConfiguration                    bootstrapv1.ProxyConfiguration
 	RegistryMirrorConfiguration           bootstrapv1.RegistryMirrorConfiguration
@@ -160,6 +161,7 @@ func getBottlerocketNodeUserData(bootstrapContainerUserData []byte, users []boot
 		{
 			Name:         "admin",
 			Superpowered: true,
+			ImageMeta:    config.BottlerocketAdmin.ImageMeta,
 			UserData:     b64AdminContainerUserData,
 		},
 		{
diff --git a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
index f45394a39..f434c9788 100644
--- a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
+++ b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
@@ -549,6 +549,7 @@ func (r *KubeadmConfigReconciler) handleClusterNotInitialized(ctx context.Contex
 		bottlerocketConfig = &bottlerocket.BottlerocketConfig{
 			Pause:                                 scope.Config.Spec.ClusterConfiguration.Pause,
 			BottlerocketBootstrap:                 scope.Config.Spec.ClusterConfiguration.BottlerocketBootstrap,
+			BottlerocketAdmin:                     scope.Config.Spec.ClusterConfiguration.BottlerocketAdmin,
 			BottlerocketControl:                   scope.Config.Spec.ClusterConfiguration.BottlerocketControl,
 			BottlerocketCustomHostContainers:      scope.Config.Spec.ClusterConfiguration.BottlerocketHostContainers,
 			BottlerocketCustomBootstrapContainers: scope.Config.Spec.ClusterConfiguration.BottlerocketCustomBootstrapContainers,
@@ -844,6 +845,7 @@ func (r *KubeadmConfigReconciler) joinWorker(ctx context.Context, scope *Scope)
 		bottlerocketConfig := &bottlerocket.BottlerocketConfig{
 			Pause:                                 scope.Config.Spec.JoinConfiguration.Pause,
 			BottlerocketBootstrap:                 scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
+			BottlerocketAdmin:                     scope.Config.Spec.JoinConfiguration.BottlerocketAdmin,
 			BottlerocketControl:                   scope.Config.Spec.JoinConfiguration.BottlerocketControl,
 			BottlerocketCustomHostContainers:      scope.Config.Spec.JoinConfiguration.BottlerocketCustomHostContainers,
 			BottlerocketCustomBootstrapContainers: scope.Config.Spec.JoinConfiguration.BottlerocketCustomBootstrapContainers,
@@ -1022,6 +1024,7 @@ func (r *KubeadmConfigReconciler) joinControlplane(ctx context.Context, scope *S
 		bottlerocketConfig := &bottlerocket.BottlerocketConfig{
 			Pause:                                 scope.Config.Spec.JoinConfiguration.Pause,
 			BottlerocketBootstrap:                 scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
+			BottlerocketAdmin:                     scope.Config.Spec.JoinConfiguration.BottlerocketAdmin,
 			BottlerocketControl:                   scope.Config.Spec.JoinConfiguration.BottlerocketControl,
 			BottlerocketCustomHostContainers:      scope.Config.Spec.JoinConfiguration.BottlerocketCustomHostContainers,
 			BottlerocketCustomBootstrapContainers: scope.Config.Spec.JoinConfiguration.BottlerocketCustomBootstrapContainers,
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/types.go b/bootstrap/kubeadm/types/upstreamv1beta1/types.go
index 53e96ea97..06344fb02 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/types.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/types.go
@@ -65,6 +65,11 @@ type ClusterConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
@@ -175,6 +180,13 @@ type BottlerocketBootstrap struct {
 	ImageMeta `json:",inline"`
 }
 
+// BottlerocketAdmin holds the settings of admin container for bottlerocket nodes
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketAdmin struct {
+	// ImageMeta allows to customize the image used for the BottlerocketAdmin component
+	ImageMeta `json:",inline"`
+}
+
 // BottlerocketControl holds the settings of control container for bottlerocket nodes
 // This setting is ONLY for bottlerocket nodes.
 type BottlerocketControl struct {
@@ -410,6 +422,11 @@ type JoinConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
index 8b2d77601..1e89c7c78 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
@@ -141,6 +141,22 @@ func (in *BootstrapTokenString) DeepCopy() *BootstrapTokenString {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketAdmin) DeepCopyInto(out *BottlerocketAdmin) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketAdmin.
+func (in *BottlerocketAdmin) DeepCopy() *BottlerocketAdmin {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketAdmin)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketBootstrap) DeepCopyInto(out *BottlerocketBootstrap) {
 	*out = *in
@@ -211,6 +227,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.TypeMeta = in.TypeMeta
 	out.Pause = in.Pause
 	out.BottlerocketBootstrap = in.BottlerocketBootstrap
+	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
@@ -490,6 +507,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.TypeMeta = in.TypeMeta
 	out.Pause = in.Pause
 	out.BottlerocketBootstrap = in.BottlerocketBootstrap
+	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
diff --git a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
index 19f81b765..e92a0f7e7 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
@@ -528,6 +528,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta2_ClusterConfigur
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta2_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta2_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -873,6 +874,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta2_JoinConfiguration(
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta2_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta2_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
diff --git a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
index fe67ec0be..23699e084 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
@@ -532,6 +532,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta3_ClusterConfigur
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta3_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta3_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -870,6 +871,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta3_JoinConfiguration(
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_upstreamv1beta3_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	// WARNING: in.BottlerocketAdmin requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta1_BottlerocketControl_To_upstreamv1beta3_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
index b3d793ca8..db4098ad3 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
@@ -194,6 +194,22 @@ spec:
                           may reject unrecognized values.
                           More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                         type: string
+                      bottlerocketAdmin:
+                        description: |-
+                          BottlerocketAdmin holds the image source for admin container
+                          This is only for bottlerocket
+                        properties:
+                          imageRepository:
+                            description: |-
+                              ImageRepository sets the container registry to pull images from.
+                              if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                            type: string
+                          imageTag:
+                            description: |-
+                              ImageTag allows to specify a tag for the image.
+                              In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                            type: string
+                        type: object
                       bottlerocketBootstrap:
                         description: |-
                           BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -922,6 +938,22 @@ spec:
                           may reject unrecognized values.
                           More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                         type: string
+                      bottlerocketAdmin:
+                        description: |-
+                          BottlerocketAdmin holds the image source for admin container
+                          This is only for bottlerocket
+                        properties:
+                          imageRepository:
+                            description: |-
+                              ImageRepository sets the container registry to pull images from.
+                              if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                            type: string
+                          imageTag:
+                            description: |-
+                              ImageTag allows to specify a tag for the image.
+                              In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                            type: string
+                        type: object
                       bottlerocketBootstrap:
                         description: |-
                           BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -1663,6 +1695,22 @@ spec:
                           may reject unrecognized values.
                           More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                         type: string
+                      bottlerocketAdmin:
+                        description: |-
+                          BottlerocketAdmin holds the image source for admin container
+                          This is only for bottlerocket
+                        properties:
+                          imageRepository:
+                            description: |-
+                              ImageRepository sets the container registry to pull images from.
+                              if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                            type: string
+                          imageTag:
+                            description: |-
+                              ImageTag allows to specify a tag for the image.
+                              In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                            type: string
+                        type: object
                       bottlerocketBootstrap:
                         description: |-
                           BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -2388,6 +2436,22 @@ spec:
                           may reject unrecognized values.
                           More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                         type: string
+                      bottlerocketAdmin:
+                        description: |-
+                          BottlerocketAdmin holds the image source for admin container
+                          This is only for bottlerocket
+                        properties:
+                          imageRepository:
+                            description: |-
+                              ImageRepository sets the container registry to pull images from.
+                              if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                            type: string
+                          imageTag:
+                            description: |-
+                              ImageTag allows to specify a tag for the image.
+                              In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                            type: string
+                        type: object
                       bottlerocketBootstrap:
                         description: |-
                           BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -3348,6 +3412,22 @@ spec:
                           may reject unrecognized values.
                           More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                         type: string
+                      bottlerocketAdmin:
+                        description: |-
+                          BottlerocketAdmin holds the image source for admin container
+                          This is only for bottlerocket
+                        properties:
+                          imageRepository:
+                            description: |-
+                              ImageRepository sets the container registry to pull images from.
+                              if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                            type: string
+                          imageTag:
+                            description: |-
+                              ImageTag allows to specify a tag for the image.
+                              In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                            type: string
+                        type: object
                       bottlerocketBootstrap:
                         description: |-
                           BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -4569,6 +4649,22 @@ spec:
                           may reject unrecognized values.
                           More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                         type: string
+                      bottlerocketAdmin:
+                        description: |-
+                          BottlerocketAdmin holds the image source for admin container
+                          This is only for bottlerocket
+                        properties:
+                          imageRepository:
+                            description: |-
+                              ImageRepository sets the container registry to pull images from.
+                              if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                            type: string
+                          imageTag:
+                            description: |-
+                              ImageTag allows to specify a tag for the image.
+                              In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                            type: string
+                        type: object
                       bottlerocketBootstrap:
                         description: |-
                           BottlerocketBootstrap holds the image source for kubeadm bootstrap container
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
index 8140e825d..cf70f57fc 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
@@ -131,6 +131,22 @@ spec:
                                   may reject unrecognized values.
                                   More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                 type: string
+                              bottlerocketAdmin:
+                                description: |-
+                                  BottlerocketAdmin holds the image source for admin container
+                                  This is only for bottlerocket
+                                properties:
+                                  imageRepository:
+                                    description: |-
+                                      ImageRepository sets the container registry to pull images from.
+                                      if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                    type: string
+                                  imageTag:
+                                    description: |-
+                                      ImageTag allows to specify a tag for the image.
+                                      In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                    type: string
+                                type: object
                               bottlerocketBootstrap:
                                 description: |-
                                   BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -870,6 +886,22 @@ spec:
                                   may reject unrecognized values.
                                   More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                 type: string
+                              bottlerocketAdmin:
+                                description: |-
+                                  BottlerocketAdmin holds the image source for admin container
+                                  This is only for bottlerocket
+                                properties:
+                                  imageRepository:
+                                    description: |-
+                                      ImageRepository sets the container registry to pull images from.
+                                      if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                    type: string
+                                  imageTag:
+                                    description: |-
+                                      ImageTag allows to specify a tag for the image.
+                                      In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                    type: string
+                                type: object
                               bottlerocketBootstrap:
                                 description: |-
                                   BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -1732,6 +1764,22 @@ spec:
                                   may reject unrecognized values.
                                   More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                 type: string
+                              bottlerocketAdmin:
+                                description: |-
+                                  BottlerocketAdmin holds the image source for admin container
+                                  This is only for bottlerocket
+                                properties:
+                                  imageRepository:
+                                    description: |-
+                                      ImageRepository sets the container registry to pull images from.
+                                      if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                    type: string
+                                  imageTag:
+                                    description: |-
+                                      ImageTag allows to specify a tag for the image.
+                                      In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                    type: string
+                                type: object
                               bottlerocketBootstrap:
                                 description: |-
                                   BottlerocketBootstrap holds the image source for kubeadm bootstrap container
@@ -2985,6 +3033,22 @@ spec:
                                   may reject unrecognized values.
                                   More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                 type: string
+                              bottlerocketAdmin:
+                                description: |-
+                                  BottlerocketAdmin holds the image source for admin container
+                                  This is only for bottlerocket
+                                properties:
+                                  imageRepository:
+                                    description: |-
+                                      ImageRepository sets the container registry to pull images from.
+                                      if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                    type: string
+                                  imageTag:
+                                    description: |-
+                                      ImageTag allows to specify a tag for the image.
+                                      In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                    type: string
+                                type: object
                               bottlerocketBootstrap:
                                 description: |-
                                   BottlerocketBootstrap holds the image source for kubeadm bootstrap container
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go b/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
index 142d5c20d..2f2038eaa 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
@@ -71,6 +71,11 @@ type ClusterConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
@@ -177,6 +182,13 @@ type BottlerocketBootstrap struct {
 	ImageMeta `json:",inline"`
 }
 
+// BottlerocketAdmin holds the settings of admin container for bottlerocket nodes
+// This setting is ONLY for bottlerocket nodes.
+type BottlerocketAdmin struct {
+	// ImageMeta allows to customize the image used for the BottlerocketAdmin component
+	ImageMeta `json:",inline"`
+}
+
 // BottlerocketControl holds the settings of control container for bottlerocket nodes
 // This setting is ONLY for bottlerocket nodes.
 type BottlerocketControl struct {
@@ -421,6 +433,11 @@ type JoinConfiguration struct {
 	// +optional
 	BottlerocketBootstrap BottlerocketBootstrap `json:"bottlerocketBootstrap,omitempty"`
 
+	// BottlerocketAdmin holds the image source for admin container
+	// This is only for bottlerocket
+	// +optional
+	BottlerocketAdmin BottlerocketAdmin `json:"bottlerocketAdmin,omitempty"`
+
 	// BottlerocketControl holds the image source for control container
 	// This is only for bottlerocket
 	// +optional
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
index 4d95b56b2..f3ed121d2 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
@@ -90,6 +90,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketAdmin)(nil), (*v1beta1.BottlerocketAdmin)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1alpha4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(a.(*BottlerocketAdmin), b.(*v1beta1.BottlerocketAdmin), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketAdmin)(nil), (*BottlerocketAdmin)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketAdmin_To_v1alpha4_BottlerocketAdmin(a.(*v1beta1.BottlerocketAdmin), b.(*BottlerocketAdmin), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*BottlerocketBootstrap)(nil), (*v1beta1.BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1alpha4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(a.(*BottlerocketBootstrap), b.(*v1beta1.BottlerocketBootstrap), scope)
 	}); err != nil {
@@ -611,6 +621,30 @@ func Convert_v1beta1_BootstrapTokenString_To_v1alpha4_BootstrapTokenString(in *v
 	return autoConvert_v1beta1_BootstrapTokenString_To_v1alpha4_BootstrapTokenString(in, out, s)
 }
 
+func autoConvert_v1alpha4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in *BottlerocketAdmin, out *v1beta1.BottlerocketAdmin, s conversion.Scope) error {
+	if err := Convert_v1alpha4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_v1alpha4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin is an autogenerated conversion function.
+func Convert_v1alpha4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in *BottlerocketAdmin, out *v1beta1.BottlerocketAdmin, s conversion.Scope) error {
+	return autoConvert_v1alpha4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketAdmin_To_v1alpha4_BottlerocketAdmin(in *v1beta1.BottlerocketAdmin, out *BottlerocketAdmin, s conversion.Scope) error {
+	if err := Convert_v1beta1_ImageMeta_To_v1alpha4_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketAdmin_To_v1alpha4_BottlerocketAdmin is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketAdmin_To_v1alpha4_BottlerocketAdmin(in *v1beta1.BottlerocketAdmin, out *BottlerocketAdmin, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketAdmin_To_v1alpha4_BottlerocketAdmin(in, out, s)
+}
+
 func autoConvert_v1alpha4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(in *BottlerocketBootstrap, out *v1beta1.BottlerocketBootstrap, s conversion.Scope) error {
 	if err := Convert_v1alpha4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
 		return err
@@ -728,6 +762,9 @@ func autoConvert_v1alpha4_ClusterConfiguration_To_v1beta1_ClusterConfiguration(i
 	if err := Convert_v1alpha4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	if err := Convert_v1alpha4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_v1alpha4_BottlerocketControl_To_v1beta1_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -778,6 +815,9 @@ func autoConvert_v1beta1_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(i
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_v1alpha4_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	if err := Convert_v1beta1_BottlerocketAdmin_To_v1alpha4_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_v1beta1_BottlerocketControl_To_v1alpha4_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -1190,6 +1230,9 @@ func autoConvert_v1alpha4_JoinConfiguration_To_v1beta1_JoinConfiguration(in *Joi
 	if err := Convert_v1alpha4_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	if err := Convert_v1alpha4_BottlerocketAdmin_To_v1beta1_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_v1alpha4_BottlerocketControl_To_v1beta1_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
@@ -1224,6 +1267,9 @@ func autoConvert_v1beta1_JoinConfiguration_To_v1alpha4_JoinConfiguration(in *v1b
 	if err := Convert_v1beta1_BottlerocketBootstrap_To_v1alpha4_BottlerocketBootstrap(&in.BottlerocketBootstrap, &out.BottlerocketBootstrap, s); err != nil {
 		return err
 	}
+	if err := Convert_v1beta1_BottlerocketAdmin_To_v1alpha4_BottlerocketAdmin(&in.BottlerocketAdmin, &out.BottlerocketAdmin, s); err != nil {
+		return err
+	}
 	if err := Convert_v1beta1_BottlerocketControl_To_v1alpha4_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
index 4e60b7369..082b6114c 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
@@ -142,6 +142,22 @@ func (in *BootstrapTokenString) DeepCopy() *BootstrapTokenString {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketAdmin) DeepCopyInto(out *BottlerocketAdmin) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketAdmin.
+func (in *BottlerocketAdmin) DeepCopy() *BottlerocketAdmin {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketAdmin)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketBootstrap) DeepCopyInto(out *BottlerocketBootstrap) {
 	*out = *in
@@ -212,6 +228,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.TypeMeta = in.TypeMeta
 	out.Pause = in.Pause
 	out.BottlerocketBootstrap = in.BottlerocketBootstrap
+	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
@@ -591,6 +608,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.TypeMeta = in.TypeMeta
 	out.Pause = in.Pause
 	out.BottlerocketBootstrap = in.BottlerocketBootstrap
+	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
-- 
2.45.2

