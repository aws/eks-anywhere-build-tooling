From 88eee784c619e72dd2d1513cc5b4ba4f3d6aa5c7 Mon Sep 17 00:00:00 2001
From: Guillermo Gaston <gaslor@amazon.com>
Date: Thu, 21 Oct 2021 21:24:34 +0000
Subject: [PATCH] Ignore EndpointSlice when checking for cert-manager
 components version

Signed-off-by: Guillermo Gaston <gaslor@amazon.com>
---
 cmd/clusterctl/client/cluster/cert_manager.go |  6 +++---
 .../client/cluster/cert_manager_test.go       | 20 +++++++++++++++++++
 2 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/cmd/clusterctl/client/cluster/cert_manager.go b/cmd/clusterctl/client/cluster/cert_manager.go
index 00c203c38..365559bf2 100644
--- a/cmd/clusterctl/client/cluster/cert_manager.go
+++ b/cmd/clusterctl/client/cluster/cert_manager.go
@@ -260,8 +260,9 @@ func shouldUpgrade(objs []unstructured.Unstructured) (string, bool, error) {
 	for i := range objs {
 		obj := objs[i]
 
-		// Endpoints are generated by Kubernetes without the version annotation, so we are skipping them
-		if obj.GetKind() == "Endpoints" {
+		// Endpoints and EndpointSlice are generated by Kubernetes without the version annotation, so we are skipping them
+		kind := obj.GetKind()
+		if kind == "Endpoints" || kind == "EndpointSlice" {
 			continue
 		}
 
@@ -333,7 +334,6 @@ func (cm *certManagerClient) getManifestObjs() ([]unstructured.Unstructured, err
 	}
 
 	objs, err := utilyaml.ToUnstructured(yaml)
-
 	if err != nil {
 		return nil, errors.Wrap(err, "failed to parse yaml for cert-manager manifest")
 	}
diff --git a/cmd/clusterctl/client/cluster/cert_manager_test.go b/cmd/clusterctl/client/cluster/cert_manager_test.go
index dda7353c2..2d00778bc 100644
--- a/cmd/clusterctl/client/cluster/cert_manager_test.go
+++ b/cmd/clusterctl/client/cluster/cert_manager_test.go
@@ -344,6 +344,26 @@ func Test_shouldUpgrade(t *testing.T) {
 			want:        false,
 			wantErr:     false,
 		},
+		{
+			name: "EndpointSlices are ignored",
+			args: args{
+				objs: []unstructured.Unstructured{
+					{
+						Object: map[string]interface{}{
+							"kind": "EndpointSlice",
+							"metadata": map[string]interface{}{
+								"annotations": map[string]interface{}{
+									certmanagerVersionAnnotation: "foo",
+								},
+							},
+						},
+					},
+				},
+			},
+			wantVersion: "",
+			want:        false,
+			wantErr:     false,
+		},
 	}
 	for _, tt := range tests {
 		t.Run(tt.name, func(t *testing.T) {
-- 
2.25.1

