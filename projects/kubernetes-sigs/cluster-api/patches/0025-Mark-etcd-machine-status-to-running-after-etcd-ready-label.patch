From ff786ed8d1aab9e181e07b50a1db61353c69677d Mon Sep 17 00:00:00 2001
From: Jiayi Wang <jiayiwang7@yahoo.com>
Date: Mon, 9 Jan 2023 15:41:05 -0500
Subject: [PATCH 25/25] Mark etcd machine status to running after etcd controller
 adds the etcd machine ready label

---
 api/v1beta1/machine_types.go                          |  5 ++++-
 .../controllers/machine/machine_controller_phases.go  | 11 ++++-------
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/api/v1beta1/machine_types.go b/api/v1beta1/machine_types.go
index 15d162568..7e623665f 100644
--- a/api/v1beta1/machine_types.go
+++ b/api/v1beta1/machine_types.go
@@ -30,9 +30,12 @@ const (
 	// MachineControlPlaneLabelName is the label set on machines or related objects that are part of a control plane.
 	MachineControlPlaneLabelName = "cluster.x-k8s.io/control-plane"
 
-	//MachineEtcdClusterLabelName is the label set on machines or related objects that are part of an etcd cluster
+	// MachineEtcdClusterLabelName is the label set on machines or related objects that are part of an etcd cluster
 	MachineEtcdClusterLabelName = "cluster.x-k8s.io/etcd-cluster"
 
+	// MachineEtcdReadyLabelName is the label set on machines that have succesfully joined the etcd cluster.
+	MachineEtcdReadyLabelName = "cluster.x-k8s.io/etcd-ready"
+
 	// ExcludeNodeDrainingAnnotation annotation explicitly skips node draining if set.
 	ExcludeNodeDrainingAnnotation = "machine.cluster.x-k8s.io/exclude-node-draining"
 
diff --git a/internal/controllers/machine/machine_controller_phases.go b/internal/controllers/machine/machine_controller_phases.go
index 17eae3285..97dc58729 100644
--- a/internal/controllers/machine/machine_controller_phases.go
+++ b/internal/controllers/machine/machine_controller_phases.go
@@ -19,7 +19,6 @@ package machine
 import (
 	"context"
 	"fmt"
-	"sigs.k8s.io/controller-runtime/pkg/client"
 	"time"
 
 	"github.com/pkg/errors"
@@ -30,6 +29,7 @@ import (
 	"k8s.io/apimachinery/pkg/runtime/schema"
 	"k8s.io/utils/pointer"
 	ctrl "sigs.k8s.io/controller-runtime"
+	"sigs.k8s.io/controller-runtime/pkg/client"
 	"sigs.k8s.io/controller-runtime/pkg/controller/controllerutil"
 	"sigs.k8s.io/controller-runtime/pkg/handler"
 
@@ -43,9 +43,7 @@ import (
 	"sigs.k8s.io/cluster-api/util/patch"
 )
 
-var (
-	externalReadyWait = 30 * time.Second
-)
+var externalReadyWait = 30 * time.Second
 
 func (r *Reconciler) reconcilePhase(_ context.Context, m *clusterv1.Machine) {
 	originalPhase := m.Status.Phase //nolint:ifshort // Cannot be inlined because m.Status.Phase might be changed before it is used in the if.
@@ -71,8 +69,7 @@ func (r *Reconciler) reconcilePhase(_ context.Context, m *clusterv1.Machine) {
 	}
 
 	if _, ok := m.Labels[clusterv1.MachineEtcdClusterLabelName]; ok {
-		// Status.NodeRef does not get set for etcd machines since they don't correspond to k8s node objects
-		if m.Status.InfrastructureReady {
+		if _, ok := m.Labels[clusterv1.MachineEtcdReadyLabelName]; ok && m.Status.InfrastructureReady {
 			m.Status.SetTypedPhase(clusterv1.MachinePhaseRunning)
 		}
 	}
@@ -370,7 +367,7 @@ func (r *Reconciler) reconcileInfrastructure(ctx context.Context, cluster *clust
 							},
 						},
 						Data: map[string][]byte{
-							"address": []byte(machineIP),
+							"address":    []byte(machineIP),
 							"clientUrls": []byte(fmt.Sprintf("https://%v:2379", machineIP)),
 						},
 						Type: clusterv1.ClusterSecretType,
-- 
2.37.2

