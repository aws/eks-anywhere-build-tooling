From 467f855cf793ce83ba76c330cc9fcfd1a2905383 Mon Sep 17 00:00:00 2001
From: Jiayi Wang <jiayiwang7@yahoo.com>
Date: Mon, 21 Nov 2022 17:31:22 -0500
Subject: [PATCH 17/40] Add bottlerocket custom bootstrap containers config
 option

---
 .../kubeadm/api/v1beta1/kubeadm_types.go      |  34 ++-
 .../api/v1beta1/zz_generated.deepcopy.go      |  26 ++
 ...strap.cluster.x-k8s.io_kubeadmconfigs.yaml | 258 +++++++++++++++++
 ...uster.x-k8s.io_kubeadmconfigtemplates.yaml | 264 ++++++++++++++++++
 .../internal/bottlerocket/bootstrap.go        |  24 ++
 .../internal/bottlerocket/bootstrap_test.go   |  99 +++++++
 .../internal/bottlerocket/bottlerocket.go     |  27 +-
 .../controllers/kubeadmconfig_controller.go   |  27 +-
 .../kubeadm/types/upstreamv1beta1/types.go    |  33 +++
 .../upstreamv1beta1/zz_generated.deepcopy.go  |  26 ++
 .../zz_generated.conversion.go                |   2 +
 .../zz_generated.conversion.go                |   2 +
 ...cluster.x-k8s.io_kubeadmcontrolplanes.yaml | 264 ++++++++++++++++++
 ...x-k8s.io_kubeadmcontrolplanetemplates.yaml | 184 ++++++++++++
 .../kubeadm/v1alpha4/kubeadm_types.go         |  33 +++
 .../v1alpha4/zz_generated.conversion.go       |  46 +++
 .../kubeadm/v1alpha4/zz_generated.deepcopy.go |  26 ++
 17 files changed, 1353 insertions(+), 22 deletions(-)
 create mode 100644 bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go

diff --git a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
index 057e6b53d..4e0e597c5 100644
--- a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
+++ b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
@@ -175,6 +175,11 @@ type ClusterConfiguration struct {
 	// that we will deploy as host containers in the CPIs
 	// +optional
 	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
 }
 
 // Pause defines the pause image repo and tag that should be run on the bootstrapped nodes.
@@ -439,7 +444,6 @@ type BootstrapToken struct {
 
 // Etcd contains elements describing Etcd configuration.
 type Etcd struct {
-
 	// local provides configuration knobs for configuring the local etcd instance
 	// Local and External are mutually exclusive
 	// +optional
@@ -568,6 +572,11 @@ type JoinConfiguration struct {
 	// that we will deploy as host containers in the CPIs
 	// +optional
 	BottlerocketCustomHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
 }
 
 // BottlerocketHostContainer describes a host image for Bottlerocket
@@ -585,6 +594,29 @@ type BottlerocketHostContainer struct {
 	UserData string `json:"userData,omitempty"`
 }
 
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// ImageMeta is the actual image used for Bottlerocket bootstrap.
+	ImageMeta `json:",inline"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
 type JoinControlPlane struct {
 	// localAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.
diff --git a/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go b/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
index 1d2e1266b..a6a49c6ce 100644
--- a/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
@@ -158,6 +158,22 @@ func (in *BottlerocketBootstrap) DeepCopy() *BottlerocketBootstrap {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketBootstrapContainer) DeepCopyInto(out *BottlerocketBootstrapContainer) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketBootstrapContainer.
+func (in *BottlerocketBootstrapContainer) DeepCopy() *BottlerocketBootstrapContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketBootstrapContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketControl) DeepCopyInto(out *BottlerocketControl) {
 	*out = *in
@@ -217,6 +233,11 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 		*out = make([]BottlerocketHostContainer, len(*in))
 		copy(*out, *in)
 	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
@@ -689,6 +710,11 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 		*out = make([]BottlerocketHostContainer, len(*in))
 		copy(*out, *in)
 	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JoinConfiguration.
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
index 9d29393d7..b58a0a014 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
@@ -143,6 +143,49 @@ spec:
                           In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            ImageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          type: string
+                        imageTag:
+                          description: |-
+                            ImageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
                   bottlerocketCustomHostContainers:
                     description: |-
                       BottlerocketHostContainers contains the information of any additional images
@@ -818,6 +861,49 @@ spec:
                           In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            ImageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          type: string
+                        imageTag:
+                          description: |-
+                            ImageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
                   bottlerocketCustomHostContainers:
                     description: |-
                       BottlerocketCustomHostContainers contains the information of any additional images
@@ -1379,6 +1465,49 @@ spec:
                           In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            ImageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          type: string
+                        imageTag:
+                          description: |-
+                            ImageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
                   bottlerocketCustomHostContainers:
                     description: |-
                       BottlerocketHostContainers contains the information of any additional images
@@ -2050,6 +2179,49 @@ spec:
                           In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            ImageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          type: string
+                        imageTag:
+                          description: |-
+                            ImageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
                   bottlerocketCustomHostContainers:
                     description: |-
                       BottlerocketCustomHostContainers contains the information of any additional images
@@ -2729,6 +2901,49 @@ spec:
                           In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            ImageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          type: string
+                        imageTag:
+                          description: |-
+                            ImageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
                   bottlerocketCustomHostContainers:
                     description: |-
                       BottlerocketHostContainers contains the information of any additional images
@@ -3889,6 +4104,49 @@ spec:
                           In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            ImageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          type: string
+                        imageTag:
+                          description: |-
+                            ImageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
                   bottlerocketCustomHostContainers:
                     description: |-
                       BottlerocketCustomHostContainers contains the information of any additional images
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
index 8844bb705..feaad6390 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
@@ -151,6 +151,50 @@ spec:
                                   In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    ImageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    ImageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
                           bottlerocketCustomHostContainers:
                             description: |-
                               BottlerocketHostContainers contains the information of any additional images
@@ -840,6 +884,50 @@ spec:
                                   In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    ImageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    ImageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
                           bottlerocketCustomHostContainers:
                             description: |-
                               BottlerocketCustomHostContainers contains the information of any additional images
@@ -1346,6 +1434,50 @@ spec:
                                   In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    ImageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    ImageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
                           bottlerocketCustomHostContainers:
                             description: |-
                               BottlerocketHostContainers contains the information of any additional images
@@ -2032,6 +2164,50 @@ spec:
                                   In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    ImageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    ImageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
                           bottlerocketCustomHostContainers:
                             description: |-
                               BottlerocketCustomHostContainers contains the information of any additional images
@@ -2690,6 +2866,50 @@ spec:
                                   In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    ImageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    ImageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
                           bottlerocketCustomHostContainers:
                             description: |-
                               BottlerocketHostContainers contains the information of any additional images
@@ -3882,6 +4102,50 @@ spec:
                                   In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    ImageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    ImageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
                           bottlerocketCustomHostContainers:
                             description: |-
                               BottlerocketCustomHostContainers contains the information of any additional images
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
index bc5094eb1..fe280e091 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
@@ -34,6 +34,26 @@ user-data = "{{.UserData}}"
 {{template "hostContainerSettings" $hContainer }}
 {{- end -}}
 {{- end -}}
+`
+
+	bootstrapContainerTemplate = `{{ define "bootstrapContainerSettings" -}}
+[settings.bootstrap-containers.{{.Name}}]
+essential = {{.Essential}}
+mode = "{{.Mode}}"
+{{- if (ne (imageUrl .ImageMeta) "")}}
+source = "{{imageUrl .ImageMeta}}"
+{{- end -}}
+{{- if (ne .UserData "")}}
+user-data = "{{.UserData}}"
+{{- end -}}
+{{- end -}}
+`
+
+	bootstrapContainerSliceTemplate = `{{ define "bootstrapContainerSlice" -}}
+{{- range $bContainer := .BootstrapContainers }}
+{{template "bootstrapContainerSettings" $bContainer }}
+{{- end -}}
+{{- end -}}
 `
 
 	networkInitTemplate = `{{ define "networkInitSettings" -}}
@@ -68,6 +88,10 @@ trusted=true
 
 {{template "kubernetesInitSettings" .}}
 
+{{- if .BootstrapContainers}}
+{{template "bootstrapContainerSlice" .}}
+{{- end -}}
+
 {{- if (ne .HTTPSProxyEndpoint "")}}
 {{template "networkInitSettings" .}}
 {{- end -}}
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
new file mode 100644
index 000000000..9065a7c58
--- /dev/null
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
@@ -0,0 +1,99 @@
+package bottlerocket
+
+import (
+	"testing"
+
+	. "github.com/onsi/gomega"
+
+	bootstrapv1 "sigs.k8s.io/cluster-api/bootstrap/kubeadm/api/v1beta1"
+)
+
+const userData = `
+[settings.host-containers.admin]
+enabled = true
+superpowered = true
+user-data = "B64USERDATA"
+[settings.host-containers.kubeadm-bootstrap]
+enabled = true
+superpowered = true
+source = "REPO:TAG"
+user-data = "B64USERDATA"
+
+[settings.kubernetes]
+cluster-domain = "cluster.local"
+standalone-mode = true
+authentication-mode = "tls"
+server-tls-bootstrap = false
+pod-infra-container-image = "PAUSE"
+provider-id = "PROVIDERID"
+
+[settings.bootstrap-containers.BOOTSTRAP]
+essential = false
+mode = "MODE"
+user-data = "B64USERDATA"
+[settings.network]
+https-proxy = "PROXY"
+no-proxy = []
+[settings.container-registry.mirrors]
+"public.ecr.aws" = ["https://REGISTRYENDPOINT"]
+[settings.pki.registry-mirror-ca]
+data = "REGISTRYCA"
+trusted=true
+[settings.kubernetes.node-labels]
+KEY=VAR
+[settings.kubernetes.node-taints]
+KEY=VAR`
+
+func TestGenerateUserData(t *testing.T) {
+	g := NewWithT(t)
+
+	testcases := []struct {
+		name   string
+		input  *BottlerocketSettingsInput
+		output string
+	}{
+		{
+			name: "full settings",
+			input: &BottlerocketSettingsInput{
+				PauseContainerSource:   "PAUSE",
+				HTTPSProxyEndpoint:     "PROXY",
+				RegistryMirrorEndpoint: "REGISTRYENDPOINT",
+				RegistryMirrorCACert:   "REGISTRYCA",
+				NodeLabels:             "KEY=VAR",
+				Taints:                 "KEY=VAR",
+				ProviderId:             "PROVIDERID",
+				HostContainers: []bootstrapv1.BottlerocketHostContainer{
+					{
+						Name:         "admin",
+						Superpowered: true,
+						UserData:     "B64USERDATA",
+					},
+					{
+						Name:         "kubeadm-bootstrap",
+						Superpowered: true,
+						ImageMeta: bootstrapv1.ImageMeta{
+							ImageRepository: "REPO",
+							ImageTag:        "TAG",
+						},
+						UserData: "B64USERDATA",
+					},
+				},
+				BootstrapContainers: []bootstrapv1.BottlerocketBootstrapContainer{
+					{
+						Name:     "BOOTSTRAP",
+						Mode:     "MODE",
+						UserData: "B64USERDATA",
+					},
+				},
+			},
+			output: userData,
+		},
+	}
+	for _, testcase := range testcases {
+		t.Run(testcase.name, func(t *testing.T) {
+			b, err := generateNodeUserData("TestBottlerocketInit", bottlerocketNodeInitSettingsTemplate, testcase.input)
+			g.Expect(err).NotTo(HaveOccurred())
+			g.Expect(string(b)).To(Equal(testcase.output))
+		})
+	}
+}
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
index 0e6124b4c..e504684a0 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
@@ -23,14 +23,15 @@ const (
 )
 
 type BottlerocketConfig struct {
-	Pause                            bootstrapv1.Pause
-	BottlerocketBootstrap            bootstrapv1.BottlerocketBootstrap
-	BottlerocketControl              bootstrapv1.BottlerocketControl
-	ProxyConfiguration               bootstrapv1.ProxyConfiguration
-	RegistryMirrorConfiguration      bootstrapv1.RegistryMirrorConfiguration
-	KubeletExtraArgs                 map[string]string
-	Taints                           []corev1.Taint
-	BottlerocketCustomHostContainers []bootstrapv1.BottlerocketHostContainer
+	Pause                                 bootstrapv1.Pause
+	BottlerocketBootstrap                 bootstrapv1.BottlerocketBootstrap
+	BottlerocketControl                   bootstrapv1.BottlerocketControl
+	ProxyConfiguration                    bootstrapv1.ProxyConfiguration
+	RegistryMirrorConfiguration           bootstrapv1.RegistryMirrorConfiguration
+	KubeletExtraArgs                      map[string]string
+	Taints                                []corev1.Taint
+	BottlerocketCustomHostContainers      []bootstrapv1.BottlerocketHostContainer
+	BottlerocketCustomBootstrapContainers []bootstrapv1.BottlerocketBootstrapContainer
 }
 
 type BottlerocketSettingsInput struct {
@@ -43,6 +44,7 @@ type BottlerocketSettingsInput struct {
 	Taints                 string
 	ProviderId             string
 	HostContainers         []bootstrapv1.BottlerocketHostContainer
+	BootstrapContainers    []bootstrapv1.BottlerocketBootstrapContainer
 }
 
 type HostPath struct {
@@ -103,6 +105,12 @@ func generateNodeUserData(kind string, tpl string, data interface{}) ([]byte, er
 	if _, err := tm.Parse(hostContainerSliceTemplate); err != nil {
 		return nil, errors.Wrapf(err, "failed to parse hostContainerSettingsSlice %s template", kind)
 	}
+	if _, err := tm.Parse(bootstrapContainerTemplate); err != nil {
+		return nil, errors.Wrapf(err, "failed to parse bootstrapContainerSettings %s template", kind)
+	}
+	if _, err := tm.Parse(bootstrapContainerSliceTemplate); err != nil {
+		return nil, errors.Wrapf(err, "failed to parse bootstrapContainerSettingsSlice %s template", kind)
+	}
 	if _, err := tm.Parse(kubernetesInitTemplate); err != nil {
 		return nil, errors.Wrapf(err, "failed to parse kubernetes %s template", kind)
 	}
@@ -179,9 +187,10 @@ func getBottlerocketNodeUserData(bootstrapContainerUserData []byte, users []boot
 		HTTPSProxyEndpoint:     config.ProxyConfiguration.HTTPSProxy,
 		RegistryMirrorEndpoint: config.RegistryMirrorConfiguration.Endpoint,
 		NodeLabels:             parseNodeLabels(config.KubeletExtraArgs["node-labels"]), // empty string if it does not exist
-		Taints:                 parseTaints(config.Taints),                              //empty string if it does not exist
+		Taints:                 parseTaints(config.Taints),                              // empty string if it does not exist
 		ProviderId:             config.KubeletExtraArgs["provider-id"],
 		HostContainers:         hostContainers,
+		BootstrapContainers:    config.BottlerocketCustomBootstrapContainers,
 	}
 
 	if len(config.ProxyConfiguration.NoProxy) > 0 {
diff --git a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
index 30b45260f..f45394a39 100644
--- a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
+++ b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
@@ -547,10 +547,11 @@ func (r *KubeadmConfigReconciler) handleClusterNotInitialized(ctx context.Contex
 		}
 
 		bottlerocketConfig = &bottlerocket.BottlerocketConfig{
-			Pause:                            scope.Config.Spec.ClusterConfiguration.Pause,
-			BottlerocketBootstrap:            scope.Config.Spec.ClusterConfiguration.BottlerocketBootstrap,
-			BottlerocketControl:              scope.Config.Spec.ClusterConfiguration.BottlerocketControl,
-			BottlerocketCustomHostContainers: scope.Config.Spec.ClusterConfiguration.BottlerocketHostContainers,
+			Pause:                                 scope.Config.Spec.ClusterConfiguration.Pause,
+			BottlerocketBootstrap:                 scope.Config.Spec.ClusterConfiguration.BottlerocketBootstrap,
+			BottlerocketControl:                   scope.Config.Spec.ClusterConfiguration.BottlerocketControl,
+			BottlerocketCustomHostContainers:      scope.Config.Spec.ClusterConfiguration.BottlerocketHostContainers,
+			BottlerocketCustomBootstrapContainers: scope.Config.Spec.ClusterConfiguration.BottlerocketCustomBootstrapContainers,
 		}
 		if scope.Config.Spec.ClusterConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.ClusterConfiguration.Proxy
@@ -841,10 +842,11 @@ func (r *KubeadmConfigReconciler) joinWorker(ctx context.Context, scope *Scope)
 		})
 	case bootstrapv1.Bottlerocket:
 		bottlerocketConfig := &bottlerocket.BottlerocketConfig{
-			Pause:                            scope.Config.Spec.JoinConfiguration.Pause,
-			BottlerocketBootstrap:            scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
-			BottlerocketControl:              scope.Config.Spec.JoinConfiguration.BottlerocketControl,
-			BottlerocketCustomHostContainers: scope.Config.Spec.JoinConfiguration.BottlerocketCustomHostContainers,
+			Pause:                                 scope.Config.Spec.JoinConfiguration.Pause,
+			BottlerocketBootstrap:                 scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
+			BottlerocketControl:                   scope.Config.Spec.JoinConfiguration.BottlerocketControl,
+			BottlerocketCustomHostContainers:      scope.Config.Spec.JoinConfiguration.BottlerocketCustomHostContainers,
+			BottlerocketCustomBootstrapContainers: scope.Config.Spec.JoinConfiguration.BottlerocketCustomBootstrapContainers,
 		}
 		if scope.Config.Spec.JoinConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.JoinConfiguration.Proxy
@@ -1018,10 +1020,11 @@ func (r *KubeadmConfigReconciler) joinControlplane(ctx context.Context, scope *S
 		})
 	case bootstrapv1.Bottlerocket:
 		bottlerocketConfig := &bottlerocket.BottlerocketConfig{
-			Pause:                            scope.Config.Spec.JoinConfiguration.Pause,
-			BottlerocketBootstrap:            scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
-			BottlerocketControl:              scope.Config.Spec.JoinConfiguration.BottlerocketControl,
-			BottlerocketCustomHostContainers: scope.Config.Spec.JoinConfiguration.BottlerocketCustomHostContainers,
+			Pause:                                 scope.Config.Spec.JoinConfiguration.Pause,
+			BottlerocketBootstrap:                 scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
+			BottlerocketControl:                   scope.Config.Spec.JoinConfiguration.BottlerocketControl,
+			BottlerocketCustomHostContainers:      scope.Config.Spec.JoinConfiguration.BottlerocketCustomHostContainers,
+			BottlerocketCustomBootstrapContainers: scope.Config.Spec.JoinConfiguration.BottlerocketCustomBootstrapContainers,
 		}
 		if scope.Config.Spec.JoinConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.JoinConfiguration.Proxy
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/types.go b/bootstrap/kubeadm/types/upstreamv1beta1/types.go
index b1dd41ebe..53e96ea97 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/types.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/types.go
@@ -154,6 +154,11 @@ type ClusterConfiguration struct {
 	// that we will deploy as host containers in the CPIs
 	// +optional
 	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
 }
 
 // Pause defines the pause image repo and tag that should be run on the bootstrapped nodes.
@@ -447,6 +452,11 @@ type JoinConfiguration struct {
 	// that we will deploy as host containers in the CPIs
 	// +optional
 	BottlerocketCustomHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
 }
 
 // BottlerocketHostContainer describes a host image for Bottlerocket
@@ -464,6 +474,29 @@ type BottlerocketHostContainer struct {
 	UserData string `json:"userData,omitempty"`
 }
 
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// ImageMeta is the actual image used for Bottlerocket bootstrap.
+	ImageMeta `json:",inline"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
 type JoinControlPlane struct {
 	// LocalAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
index 0dfbd9ee9..8b2d77601 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
@@ -157,6 +157,22 @@ func (in *BottlerocketBootstrap) DeepCopy() *BottlerocketBootstrap {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketBootstrapContainer) DeepCopyInto(out *BottlerocketBootstrapContainer) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketBootstrapContainer.
+func (in *BottlerocketBootstrapContainer) DeepCopy() *BottlerocketBootstrapContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketBootstrapContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketControl) DeepCopyInto(out *BottlerocketControl) {
 	*out = *in
@@ -216,6 +232,11 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 		*out = make([]BottlerocketHostContainer, len(*in))
 		copy(*out, *in)
 	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
@@ -484,6 +505,11 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 		*out = make([]BottlerocketHostContainer, len(*in))
 		copy(*out, *in)
 	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JoinConfiguration.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
index eda036465..19f81b765 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
@@ -562,6 +562,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta2_ClusterConfigur
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
 	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	return nil
 }
 
@@ -900,6 +901,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta2_JoinConfiguration(
 	// WARNING: in.SkipPhases requires manual conversion: does not exist in peer-type
 	// WARNING: in.Patches requires manual conversion: does not exist in peer-type
 	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	return nil
 }
 
diff --git a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
index 1192eb15b..fe67ec0be 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
@@ -566,6 +566,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta3_ClusterConfigur
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
 	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	return nil
 }
 
@@ -897,6 +898,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta3_JoinConfiguration(
 	out.SkipPhases = *(*[]string)(unsafe.Pointer(&in.SkipPhases))
 	out.Patches = (*Patches)(unsafe.Pointer(in.Patches))
 	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	return nil
 }
 
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
index b0a9152bb..b3d793ca8 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
@@ -226,6 +226,50 @@ spec:
                               In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                ImageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                ImageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
                       bottlerocketCustomHostContainers:
                         description: |-
                           BottlerocketHostContainers contains the information of any additional images
@@ -910,6 +954,50 @@ spec:
                               In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                ImageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                ImageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
                       bottlerocketCustomHostContainers:
                         description: |-
                           BottlerocketCustomHostContainers contains the information of any additional images
@@ -1607,6 +1695,50 @@ spec:
                               In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                ImageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                ImageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
                       bottlerocketCustomHostContainers:
                         description: |-
                           BottlerocketHostContainers contains the information of any additional images
@@ -2288,6 +2420,50 @@ spec:
                               In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                ImageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                ImageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
                       bottlerocketCustomHostContainers:
                         description: |-
                           BottlerocketCustomHostContainers contains the information of any additional images
@@ -3204,6 +3380,50 @@ spec:
                               In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                ImageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                ImageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
                       bottlerocketCustomHostContainers:
                         description: |-
                           BottlerocketHostContainers contains the information of any additional images
@@ -4381,6 +4601,50 @@ spec:
                               In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                ImageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                ImageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
                       bottlerocketCustomHostContainers:
                         description: |-
                           BottlerocketCustomHostContainers contains the information of any additional images
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
index 6b840c58f..8140e825d 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
@@ -163,6 +163,52 @@ spec:
                                       In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        ImageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        ImageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
                               bottlerocketCustomHostContainers:
                                 description: |-
                                   BottlerocketHostContainers contains the information of any additional images
@@ -856,6 +902,52 @@ spec:
                                       In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        ImageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        ImageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
                               bottlerocketCustomHostContainers:
                                 description: |-
                                   BottlerocketCustomHostContainers contains the information of any additional images
@@ -1672,6 +1764,52 @@ spec:
                                       In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        ImageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        ImageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
                               bottlerocketCustomHostContainers:
                                 description: |-
                                   BottlerocketHostContainers contains the information of any additional images
@@ -2879,6 +3017,52 @@ spec:
                                       In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        ImageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        ImageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
                               bottlerocketCustomHostContainers:
                                 description: |-
                                   BottlerocketCustomHostContainers contains the information of any additional images
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go b/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
index aa546dc42..142d5c20d 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
@@ -156,6 +156,11 @@ type ClusterConfiguration struct {
 	// that we will deploy as host containers in the CPIs
 	// +optional
 	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
 }
 
 // Pause defines the pause image repo and tag that should be run on the bootstrapped nodes.
@@ -458,6 +463,11 @@ type JoinConfiguration struct {
 	// that we will deploy as host containers in the CPIs
 	// +optional
 	BottlerocketCustomHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
 }
 
 // BottlerocketHostContainer describes a host image for Bottlerocket
@@ -475,6 +485,29 @@ type BottlerocketHostContainer struct {
 	UserData string `json:"userData,omitempty"`
 }
 
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// ImageMeta is the actual image used for Bottlerocket bootstrap.
+	ImageMeta `json:",inline"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
 type JoinControlPlane struct {
 	// localAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
index c8c0e597f..4d95b56b2 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
@@ -100,6 +100,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*BottlerocketBootstrapContainer)(nil), (*v1beta1.BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(a.(*BottlerocketBootstrapContainer), b.(*v1beta1.BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.BottlerocketBootstrapContainer)(nil), (*BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(a.(*v1beta1.BottlerocketBootstrapContainer), b.(*BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*BottlerocketControl)(nil), (*v1beta1.BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1alpha4_BottlerocketControl_To_v1beta1_BottlerocketControl(a.(*BottlerocketControl), b.(*v1beta1.BottlerocketControl), scope)
 	}); err != nil {
@@ -625,6 +635,38 @@ func Convert_v1beta1_BottlerocketBootstrap_To_v1alpha4_BottlerocketBootstrap(in
 	return autoConvert_v1beta1_BottlerocketBootstrap_To_v1alpha4_BottlerocketBootstrap(in, out, s)
 }
 
+func autoConvert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta1.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	if err := Convert_v1alpha4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer is an autogenerated conversion function.
+func Convert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta1.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	return autoConvert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in, out, s)
+}
+
+func autoConvert_v1beta1_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(in *v1beta1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	if err := Convert_v1beta1_ImageMeta_To_v1alpha4_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
+		return err
+	}
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+// Convert_v1beta1_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer is an autogenerated conversion function.
+func Convert_v1beta1_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(in *v1beta1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	return autoConvert_v1beta1_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(in, out, s)
+}
+
 func autoConvert_v1alpha4_BottlerocketControl_To_v1beta1_BottlerocketControl(in *BottlerocketControl, out *v1beta1.BottlerocketControl, s conversion.Scope) error {
 	if err := Convert_v1alpha4_ImageMeta_To_v1beta1_ImageMeta(&in.ImageMeta, &out.ImageMeta, s); err != nil {
 		return err
@@ -720,6 +762,7 @@ func autoConvert_v1alpha4_ClusterConfiguration_To_v1beta1_ClusterConfiguration(i
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
 	out.BottlerocketHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	return nil
 }
 
@@ -769,6 +812,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(i
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	out.ClusterName = in.ClusterName
 	out.BottlerocketHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	return nil
 }
 
@@ -1164,6 +1208,7 @@ func autoConvert_v1alpha4_JoinConfiguration_To_v1beta1_JoinConfiguration(in *Joi
 	}
 	out.ControlPlane = (*v1beta1.JoinControlPlane)(unsafe.Pointer(in.ControlPlane))
 	out.BottlerocketCustomHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	return nil
 }
 
@@ -1199,6 +1244,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_v1alpha4_JoinConfiguration(in *v1b
 	// WARNING: in.SkipPhases requires manual conversion: does not exist in peer-type
 	// WARNING: in.Patches requires manual conversion: does not exist in peer-type
 	out.BottlerocketCustomHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
+	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	return nil
 }
 
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
index caed0611e..4e60b7369 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
@@ -158,6 +158,22 @@ func (in *BottlerocketBootstrap) DeepCopy() *BottlerocketBootstrap {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketBootstrapContainer) DeepCopyInto(out *BottlerocketBootstrapContainer) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketBootstrapContainer.
+func (in *BottlerocketBootstrapContainer) DeepCopy() *BottlerocketBootstrapContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketBootstrapContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketControl) DeepCopyInto(out *BottlerocketControl) {
 	*out = *in
@@ -217,6 +233,11 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 		*out = make([]BottlerocketHostContainer, len(*in))
 		copy(*out, *in)
 	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
@@ -585,6 +606,11 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 		*out = make([]BottlerocketHostContainer, len(*in))
 		copy(*out, *in)
 	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JoinConfiguration.
-- 
2.45.2

