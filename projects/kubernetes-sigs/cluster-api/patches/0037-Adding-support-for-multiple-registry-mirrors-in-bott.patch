From d7aa8cb0b30ac47ada8109ace606567240ad29d1 Mon Sep 17 00:00:00 2001
From: Aravind Ramalingam <ramaliar@amazon.com>
Date: Mon, 22 Jan 2024 12:47:26 -0800
Subject: [PATCH 37/40] Adding support for multiple registry mirrors in
 bottlerocket

---
 .../kubeadm/api/v1alpha4/kubeadm_types.go     |  15 +++
 .../api/v1alpha4/zz_generated.conversion.go   |  34 +++++
 .../api/v1alpha4/zz_generated.deepcopy.go     |  31 ++++-
 .../kubeadm/api/v1beta1/kubeadm_types.go      |  15 +++
 .../api/v1beta1/zz_generated.deepcopy.go      |  31 ++++-
 ...strap.cluster.x-k8s.io_kubeadmconfigs.yaml | 114 ++++++++++++++++
 ...uster.x-k8s.io_kubeadmconfigtemplates.yaml | 126 ++++++++++++++++++
 .../internal/bottlerocket/bootstrap.go        |  20 ++-
 .../internal/bottlerocket/bootstrap_test.go   |  72 +++++++++-
 .../internal/bottlerocket/bottlerocket.go     |  44 ++++--
 .../controllers/kubeadmconfig_controller.go   |  12 +-
 .../kubeadm/types/upstreamv1beta1/types.go    |  15 +++
 .../zz_generated.conversion.go                |  34 +++++
 .../upstreamv1beta1/zz_generated.deepcopy.go  |  31 ++++-
 .../zz_generated.conversion.go                |   1 +
 .../zz_generated.conversion.go                |   1 +
 .../cluster.x-k8s.io_machinedeployments.yaml  |   2 +-
 ...cluster.x-k8s.io_kubeadmcontrolplanes.yaml | 126 ++++++++++++++++++
 ...x-k8s.io_kubeadmcontrolplanetemplates.yaml |  88 ++++++++++++
 19 files changed, 783 insertions(+), 29 deletions(-)

diff --git a/bootstrap/kubeadm/api/v1alpha4/kubeadm_types.go b/bootstrap/kubeadm/api/v1alpha4/kubeadm_types.go
index 3d43cae72..ab4ae1aa7 100644
--- a/bootstrap/kubeadm/api/v1alpha4/kubeadm_types.go
+++ b/bootstrap/kubeadm/api/v1alpha4/kubeadm_types.go
@@ -259,6 +259,21 @@ type RegistryMirrorConfiguration struct {
 
 	// CACert defines the CA cert for the registry mirror
 	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
 }
 
 // ControlPlaneComponent holds settings common to control plane component of the cluster.
diff --git a/bootstrap/kubeadm/api/v1alpha4/zz_generated.conversion.go b/bootstrap/kubeadm/api/v1alpha4/zz_generated.conversion.go
index c02aee696..a4cb4b3ab 100644
--- a/bootstrap/kubeadm/api/v1alpha4/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/api/v1alpha4/zz_generated.conversion.go
@@ -420,6 +420,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*Mirror)(nil), (*v1beta1.Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1alpha4_Mirror_To_v1beta1_Mirror(a.(*Mirror), b.(*v1beta1.Mirror), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.Mirror)(nil), (*Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_Mirror_To_v1alpha4_Mirror(a.(*v1beta1.Mirror), b.(*Mirror), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*NTP)(nil), (*v1beta1.NTP)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1alpha4_NTP_To_v1beta1_NTP(a.(*NTP), b.(*v1beta1.NTP), scope)
 	}); err != nil {
@@ -1858,6 +1868,28 @@ func Convert_v1beta1_LocalEtcd_To_v1alpha4_LocalEtcd(in *v1beta1.LocalEtcd, out
 	return autoConvert_v1beta1_LocalEtcd_To_v1alpha4_LocalEtcd(in, out, s)
 }
 
+func autoConvert_v1alpha4_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1alpha4_Mirror_To_v1beta1_Mirror is an autogenerated conversion function.
+func Convert_v1alpha4_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	return autoConvert_v1alpha4_Mirror_To_v1beta1_Mirror(in, out, s)
+}
+
+func autoConvert_v1beta1_Mirror_To_v1alpha4_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1beta1_Mirror_To_v1alpha4_Mirror is an autogenerated conversion function.
+func Convert_v1beta1_Mirror_To_v1alpha4_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	return autoConvert_v1beta1_Mirror_To_v1alpha4_Mirror(in, out, s)
+}
+
 func autoConvert_v1alpha4_NTP_To_v1beta1_NTP(in *NTP, out *v1beta1.NTP, s conversion.Scope) error {
 	out.Servers = *(*[]string)(unsafe.Pointer(&in.Servers))
 	out.Enabled = (*bool)(unsafe.Pointer(in.Enabled))
@@ -2003,6 +2035,7 @@ func Convert_v1beta1_ProxyConfiguration_To_v1alpha4_ProxyConfiguration(in *v1bet
 func autoConvert_v1alpha4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(in *RegistryMirrorConfiguration, out *v1beta1.RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
@@ -2014,6 +2047,7 @@ func Convert_v1alpha4_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfi
 func autoConvert_v1beta1_RegistryMirrorConfiguration_To_v1alpha4_RegistryMirrorConfiguration(in *v1beta1.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/bootstrap/kubeadm/api/v1alpha4/zz_generated.deepcopy.go b/bootstrap/kubeadm/api/v1alpha4/zz_generated.deepcopy.go
index 4c3225e59..615ea1651 100644
--- a/bootstrap/kubeadm/api/v1alpha4/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/api/v1alpha4/zz_generated.deepcopy.go
@@ -354,7 +354,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.Etcd.DeepCopyInto(&out.Etcd)
 	out.Networking = in.Networking
 	in.APIServer.DeepCopyInto(&out.APIServer)
@@ -744,7 +744,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.NodeRegistration.DeepCopyInto(&out.NodeRegistration)
 	in.Discovery.DeepCopyInto(&out.Discovery)
 	if in.ControlPlane != nil {
@@ -1097,6 +1097,26 @@ func (in *LocalEtcd) DeepCopy() *LocalEtcd {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *Mirror) DeepCopyInto(out *Mirror) {
+	*out = *in
+	if in.Endpoints != nil {
+		in, out := &in.Endpoints, &out.Endpoints
+		*out = make([]string, len(*in))
+		copy(*out, *in)
+	}
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mirror.
+func (in *Mirror) DeepCopy() *Mirror {
+	if in == nil {
+		return nil
+	}
+	out := new(Mirror)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in MountPoints) DeepCopyInto(out *MountPoints) {
 	{
@@ -1254,6 +1274,13 @@ func (in *ProxyConfiguration) DeepCopy() *ProxyConfiguration {
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *RegistryMirrorConfiguration) DeepCopyInto(out *RegistryMirrorConfiguration) {
 	*out = *in
+	if in.Mirrors != nil {
+		in, out := &in.Mirrors, &out.Mirrors
+		*out = make([]Mirror, len(*in))
+		for i := range *in {
+			(*in)[i].DeepCopyInto(&(*out)[i])
+		}
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryMirrorConfiguration.
diff --git a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
index ed965709a..e3e4f3ef8 100644
--- a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
+++ b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
@@ -278,6 +278,21 @@ type RegistryMirrorConfiguration struct {
 
 	// CACert defines the CA cert for the registry mirror
 	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
 }
 
 // ControlPlaneComponent holds settings common to control plane component of the cluster.
diff --git a/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go b/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
index 9fefdcb62..7faf6f8c9 100644
--- a/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
@@ -354,7 +354,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.Etcd.DeepCopyInto(&out.Etcd)
 	out.Networking = in.Networking
 	in.APIServer.DeepCopyInto(&out.APIServer)
@@ -789,7 +789,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.NodeRegistration.DeepCopyInto(&out.NodeRegistration)
 	in.Discovery.DeepCopyInto(&out.Discovery)
 	if in.ControlPlane != nil {
@@ -1158,6 +1158,26 @@ func (in *LocalEtcd) DeepCopy() *LocalEtcd {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *Mirror) DeepCopyInto(out *Mirror) {
+	*out = *in
+	if in.Endpoints != nil {
+		in, out := &in.Endpoints, &out.Endpoints
+		*out = make([]string, len(*in))
+		copy(*out, *in)
+	}
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mirror.
+func (in *Mirror) DeepCopy() *Mirror {
+	if in == nil {
+		return nil
+	}
+	out := new(Mirror)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in MountPoints) DeepCopyInto(out *MountPoints) {
 	{
@@ -1346,6 +1366,13 @@ func (in *ProxyConfiguration) DeepCopy() *ProxyConfiguration {
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *RegistryMirrorConfiguration) DeepCopyInto(out *RegistryMirrorConfiguration) {
 	*out = *in
+	if in.Mirrors != nil {
+		in, out := &in.Mirrors, &out.Mirrors
+		*out = make([]Mirror, len(*in))
+		for i := range *in {
+			(*in)[i].DeepCopyInto(&(*out)[i])
+		}
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryMirrorConfiguration.
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
index 3b4cbbf3f..4a8934c6e 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
@@ -538,6 +538,25 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: Endpoints defines the registry mirror endpoints
+                                to use for pulling images. Currently we support only
+                                one private registry. Hence endpoints would have only
+                                one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   scheduler:
                     description: Scheduler contains extra settings for the scheduler
@@ -1296,6 +1315,25 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: Endpoints defines the registry mirror endpoints
+                                to use for pulling images. Currently we support only
+                                one private registry. Hence endpoints would have only
+                                one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                 type: object
               mounts:
@@ -1996,6 +2034,25 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: Endpoints defines the registry mirror endpoints
+                                to use for pulling images. Currently we support only
+                                one private registry. Hence endpoints would have only
+                                one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   scheduler:
                     description: Scheduler contains extra settings for the scheduler
@@ -2754,6 +2811,25 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: Endpoints defines the registry mirror endpoints
+                                to use for pulling images. Currently we support only
+                                one private registry. Hence endpoints would have only
+                                one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                 type: object
               mounts:
@@ -3457,6 +3533,25 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: Endpoints defines the registry mirror endpoints
+                                to use for pulling images. Currently we support only
+                                one private registry. Hence endpoints would have only
+                                one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   scheduler:
                     description: Scheduler contains extra settings for the scheduler
@@ -4310,6 +4405,25 @@ spec:
                         description: Endpoint defines the registry mirror endpoint
                           to use for pulling images
                         type: string
+                      mirrors:
+                        description: Mirrors defines a list of image registry mirrors.
+                        items:
+                          description: Mirror holds the settings for mirroring a registry.
+                          properties:
+                            endpoints:
+                              description: Endpoints defines the registry mirror endpoints
+                                to use for pulling images. Currently we support only
+                                one private registry. Hence endpoints would have only
+                                one entry.
+                              items:
+                                type: string
+                              type: array
+                            registry:
+                              description: Registry defines the registry we are mirroring
+                                to the endpoint.
+                              type: string
+                          type: object
+                        type: array
                     type: object
                   skipPhases:
                     description: SkipPhases is a list of phases to skip during command
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
index e25795947..235a375d2 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
@@ -573,6 +573,27 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: Endpoints defines the registry
+                                        mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry.
+                                        Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           scheduler:
                             description: Scheduler contains extra settings for the
@@ -1377,6 +1398,27 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: Endpoints defines the registry
+                                        mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry.
+                                        Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                         type: object
                       mounts:
@@ -2048,6 +2090,27 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: Endpoints defines the registry
+                                        mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry.
+                                        Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           scheduler:
                             description: Scheduler contains extra settings for the
@@ -2854,6 +2917,27 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: Endpoints defines the registry
+                                        mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry.
+                                        Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                         type: object
                       mounts:
@@ -3553,6 +3637,27 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: Endpoints defines the registry
+                                        mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry.
+                                        Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           scheduler:
                             description: Scheduler contains extra settings for the
@@ -4465,6 +4570,27 @@ spec:
                                 description: Endpoint defines the registry mirror
                                   endpoint to use for pulling images
                                 type: string
+                              mirrors:
+                                description: Mirrors defines a list of image registry
+                                  mirrors.
+                                items:
+                                  description: Mirror holds the settings for mirroring
+                                    a registry.
+                                  properties:
+                                    endpoints:
+                                      description: Endpoints defines the registry
+                                        mirror endpoints to use for pulling images.
+                                        Currently we support only one private registry.
+                                        Hence endpoints would have only one entry.
+                                      items:
+                                        type: string
+                                      type: array
+                                    registry:
+                                      description: Registry defines the registry we
+                                        are mirroring to the endpoint.
+                                      type: string
+                                  type: object
+                                type: array
                             type: object
                           skipPhases:
                             description: SkipPhases is a list of phases to skip during
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
index df222b943..f378c3362 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
@@ -74,8 +74,11 @@ no-proxy = [{{stringsJoin .NoProxyEndpoints "," }}]
 {{- end -}}
 `
 	registryMirrorTemplate = `{{ define "registryMirrorSettings" -}}
-[settings.container-registry.mirrors]
-"public.ecr.aws" = ["https://{{.RegistryMirrorEndpoint}}"]
+{{- range $orig, $mirror := .RegistryMirrorMap }}
+[[settings.container-registry.mirrors]]
+registry = "{{ $orig }}"
+endpoint = [{{stringsJoin $mirror "," }}]
+{{- end -}}
 {{- end -}}
 `
 	registryMirrorCACertTemplate = `{{ define "registryMirrorCACertSettings" -}}
@@ -88,16 +91,21 @@ trusted=true
 	// to "public.ecr.aws" rather than the mirror's endpoint
 	// TODO: Once the bottlerocket fixes are in we need to remove the "public.ecr.aws" creds
 	registryMirrorCredentialsTemplate = `{{define "registryMirrorCredentialsSettings" -}}
+{{- range $orig, $mirror := .RegistryMirrorMap }}
+{{- if (eq $orig "public.ecr.aws")}}
 [[settings.container-registry.credentials]]
-registry = "public.ecr.aws"
-username = "{{.RegistryMirrorUsername}}"
-password = "{{.RegistryMirrorPassword}}"
+registry = "{{ $orig }}"
+username = "{{$.RegistryMirrorUsername}}"
+password = "{{$.RegistryMirrorPassword}}"
+{{- end }}
+{{- end }}
 [[settings.container-registry.credentials]]
 registry = "{{.RegistryMirrorEndpoint}}"
 username = "{{.RegistryMirrorUsername}}"
 password = "{{.RegistryMirrorPassword}}"
 {{- end -}}
 `
+
 	nodeLabelsTemplate = `{{ define "nodeLabelSettings" -}}
 [settings.kubernetes.node-labels]
 {{.NodeLabels}}
@@ -153,7 +161,7 @@ trusted = true
 {{- end -}}
 
 
-{{- if (ne .RegistryMirrorEndpoint "")}}
+{{- if .RegistryMirrorMap}}
 {{template "registryMirrorSettings" .}}
 {{- end -}}
 
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
index 2ee2d942b..ed58dc035 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
@@ -134,8 +134,10 @@ provider-id = "PROVIDERID"
 
 [settings.network]
 hostname = "hostname"
-[settings.container-registry.mirrors]
-"public.ecr.aws" = ["https://REGISTRY_ENDPOINT"]
+
+[[settings.container-registry.mirrors]]
+registry = "public.ecr.aws"
+endpoint = ["REGISTRY_ENDPOINT"]
 [settings.pki.registry-mirror-ca]
 data = "UkVHSVNUUllfQ0E="
 trusted=true`
@@ -162,11 +164,14 @@ provider-id = "PROVIDERID"
 
 [settings.network]
 hostname = "hostname"
-[settings.container-registry.mirrors]
-"public.ecr.aws" = ["https://REGISTRY_ENDPOINT"]
+
+[[settings.container-registry.mirrors]]
+registry = "public.ecr.aws"
+endpoint = ["REGISTRY_ENDPOINT"]
 [settings.pki.registry-mirror-ca]
 data = "UkVHSVNUUllfQ0E="
 trusted=true
+
 [[settings.container-registry.credentials]]
 registry = "public.ecr.aws"
 username = "admin"
@@ -340,6 +345,39 @@ trusted = true
 [settings.pki.bundle2]
 data = "MTIzNDU2"
 trusted = true`
+
+	registryMirrorMultipleMirrorsUserData = `
+[settings.host-containers.admin]
+enabled = true
+superpowered = true
+source = "ADMIN_REPO:ADMIN_TAG"
+user-data = "CnsKCSJzc2giOiB7CgkJImF1dGhvcml6ZWQta2V5cyI6IFsic3NoLXJzYSBBQUEuLi4iXQoJfQp9"
+[settings.host-containers.kubeadm-bootstrap]
+enabled = true
+superpowered = true
+source = "BOOTSTRAP_REPO:BOOTSTRAP_TAG"
+user-data = "Qk9UVExFUk9DS0VUX0JPT1RTVFJBUF9VU0VSREFUQQ=="
+
+[settings.kubernetes]
+cluster-domain = "cluster.local"
+standalone-mode = true
+authentication-mode = "tls"
+server-tls-bootstrap = false
+pod-infra-container-image = "PAUSE_REPO:PAUSE_TAG"
+provider-id = "PROVIDERID"
+
+[settings.network]
+hostname = "hostname"
+
+[[settings.container-registry.mirrors]]
+registry = "docker.io"
+endpoint = ["REGISTRY_ENDPOINT"]
+[[settings.container-registry.mirrors]]
+registry = "public.ecr.aws"
+endpoint = ["REGISTRY_ENDPOINT"]
+[settings.pki.registry-mirror-ca]
+data = "UkVHSVNUUllfQ0E="
+trusted=true`
 )
 
 var (
@@ -622,6 +660,32 @@ func TestGetBottlerocketNodeUserData(t *testing.T) {
 			},
 			output: userDataWithCertBundle,
 		},
+		{
+			name: "with multiple registries to mirror",
+			config: &BottlerocketConfig{
+				BottlerocketAdmin:     brAdmin,
+				BottlerocketBootstrap: brBootstrap,
+				Hostname:              hostname,
+				Pause:                 pause,
+				KubeletExtraArgs: map[string]string{
+					"provider-id": "PROVIDERID",
+				},
+				RegistryMirrorConfiguration: bootstrapv1.RegistryMirrorConfiguration{
+					CACert: "REGISTRY_CA",
+					Mirrors: []bootstrapv1.Mirror{
+						{
+							Registry:  "docker.io",
+							Endpoints: []string{"REGISTRY_ENDPOINT"},
+						},
+						{
+							Registry:  "public.ecr.aws",
+							Endpoints: []string{"REGISTRY_ENDPOINT"},
+						},
+					},
+				},
+			},
+			output: registryMirrorMultipleMirrorsUserData,
+		},
 	}
 	for _, testcase := range testcases {
 		t.Run(testcase.name, func(t *testing.T) {
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
index ce796f206..f596d7b01 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
@@ -4,6 +4,7 @@ import (
 	"bytes"
 	"encoding/base64"
 	"fmt"
+	"regexp"
 	"strconv"
 	"strings"
 	"text/template"
@@ -63,6 +64,7 @@ type BottlerocketSettingsInput struct {
 	BootstrapContainers    []bootstrapv1.BottlerocketBootstrapContainer
 	SysctlSettings         string
 	CertBundles            []bootstrapv1.CertBundle
+	RegistryMirrorMap      map[string][]string
 }
 
 // HostPath holds the path and type of a host path volume.
@@ -227,15 +229,14 @@ func getBottlerocketNodeUserData(bootstrapContainerUserData []byte, users []boot
 	}
 
 	bottlerocketInput := &BottlerocketSettingsInput{
-		PauseContainerSource:   fmt.Sprintf("%s:%s", config.Pause.ImageRepository, config.Pause.ImageTag),
-		HTTPSProxyEndpoint:     config.ProxyConfiguration.HTTPSProxy,
-		RegistryMirrorEndpoint: config.RegistryMirrorConfiguration.Endpoint,
-		NodeLabels:             parseNodeLabels(config.KubeletExtraArgs["node-labels"]), // empty string if it does not exist
-		Taints:                 parseTaints(config.Taints),                              // empty string if it does not exist
-		ProviderID:             config.KubeletExtraArgs["provider-id"],
-		Hostname:               config.Hostname,
-		HostContainers:         hostContainers,
-		BootstrapContainers:    config.BottlerocketCustomBootstrapContainers,
+		PauseContainerSource: fmt.Sprintf("%s:%s", config.Pause.ImageRepository, config.Pause.ImageTag),
+		HTTPSProxyEndpoint:   config.ProxyConfiguration.HTTPSProxy,
+		NodeLabels:           parseNodeLabels(config.KubeletExtraArgs["node-labels"]), // empty string if it does not exist
+		Taints:               parseTaints(config.Taints),                              // empty string if it does not exist
+		ProviderID:           config.KubeletExtraArgs["provider-id"],
+		Hostname:             config.Hostname,
+		HostContainers:       hostContainers,
+		BootstrapContainers:  config.BottlerocketCustomBootstrapContainers,
 	}
 
 	if len(config.ProxyConfiguration.NoProxy) > 0 {
@@ -243,6 +244,31 @@ func getBottlerocketNodeUserData(bootstrapContainerUserData []byte, users []boot
 			bottlerocketInput.NoProxyEndpoints = append(bottlerocketInput.NoProxyEndpoints, strconv.Quote(noProxy))
 		}
 	}
+
+	// When RegistryMirrorConfiguration.Endpoint is specified, we default the mirror to public.ecr.aws.
+	// This was done for backward compatability, since public.ecr.aws was the only supported registry before.
+	// For existing customers this ensures that their nodes dont rollout, unless more mirrors are specified explicitly.
+	// If RegistryMirrorConfiguration.Endpoint is not specified, we iterate the RegistryMirrorConfiguration.Mirrors to setup the mirrors.
+	bottlerocketInput.RegistryMirrorMap = make(map[string][]string)
+	endpointRegex := regexp.MustCompile(`^(https?:\/\/)?[\w\.\:\-]+`)
+	if config.RegistryMirrorConfiguration.Endpoint != "" {
+		bottlerocketInput.RegistryMirrorMap["public.ecr.aws"] = []string{strconv.Quote(config.RegistryMirrorConfiguration.Endpoint)}
+		if endpoint := endpointRegex.FindStringSubmatch(config.RegistryMirrorConfiguration.Endpoint); endpoint != nil {
+			bottlerocketInput.RegistryMirrorEndpoint = endpoint[0]
+		}
+	} else if len(config.RegistryMirrorConfiguration.Mirrors) > 0 {
+		for _, mirror := range config.RegistryMirrorConfiguration.Mirrors {
+			for _, endpoint := range mirror.Endpoints {
+				bottlerocketInput.RegistryMirrorMap[mirror.Registry] = append(bottlerocketInput.RegistryMirrorMap[mirror.Registry], strconv.Quote(endpoint))
+			}
+		}
+
+		// Right now we support only one private registry. Hence defaulting to first entry.
+		if endpoint := endpointRegex.FindStringSubmatch(config.RegistryMirrorConfiguration.Mirrors[0].Endpoints[0]); endpoint != nil {
+			bottlerocketInput.RegistryMirrorEndpoint = endpoint[0]
+		}
+	}
+
 	if config.RegistryMirrorConfiguration.CACert != "" {
 		bottlerocketInput.RegistryMirrorCACert = base64.StdEncoding.EncodeToString([]byte(config.RegistryMirrorConfiguration.CACert))
 	}
diff --git a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
index 4e8b7c5e0..4d3d251d6 100644
--- a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
+++ b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
@@ -490,7 +490,9 @@ func (r *KubeadmConfigReconciler) handleClusterNotInitialized(ctx context.Contex
 		if scope.Config.Spec.ClusterConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.ClusterConfiguration.Proxy
 		}
-		if scope.Config.Spec.ClusterConfiguration.RegistryMirror.Endpoint != "" {
+
+		if scope.Config.Spec.ClusterConfiguration.RegistryMirror.Endpoint != "" ||
+			len(scope.Config.Spec.ClusterConfiguration.RegistryMirror.Mirrors) != 0 {
 			bottlerocketConfig.RegistryMirrorConfiguration = scope.Config.Spec.ClusterConfiguration.RegistryMirror
 			registryUsername, registryPassword, err := r.resolveRegistryCredentials(ctx, scope.Config)
 			if err != nil {
@@ -718,7 +720,9 @@ func (r *KubeadmConfigReconciler) joinWorker(ctx context.Context, scope *Scope)
 		if scope.Config.Spec.JoinConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.JoinConfiguration.Proxy
 		}
-		if scope.Config.Spec.JoinConfiguration.RegistryMirror.Endpoint != "" {
+
+		if scope.Config.Spec.JoinConfiguration.RegistryMirror.Endpoint != "" ||
+			len(scope.Config.Spec.JoinConfiguration.RegistryMirror.Mirrors) != 0 {
 			bottlerocketConfig.RegistryMirrorConfiguration = scope.Config.Spec.JoinConfiguration.RegistryMirror
 			registryUsername, registryPassword, err := r.resolveRegistryCredentials(ctx, scope.Config)
 			if err != nil {
@@ -868,7 +872,9 @@ func (r *KubeadmConfigReconciler) joinControlplane(ctx context.Context, scope *S
 		if scope.Config.Spec.JoinConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.JoinConfiguration.Proxy
 		}
-		if scope.Config.Spec.ClusterConfiguration.RegistryMirror.Endpoint != "" {
+
+		if scope.Config.Spec.ClusterConfiguration.RegistryMirror.Endpoint != "" ||
+			len(scope.Config.Spec.ClusterConfiguration.RegistryMirror.Mirrors) != 0 {
 			bottlerocketConfig.RegistryMirrorConfiguration = scope.Config.Spec.ClusterConfiguration.RegistryMirror
 			registryUsername, registryPassword, err := r.resolveRegistryCredentials(ctx, scope.Config)
 			if err != nil {
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/types.go b/bootstrap/kubeadm/types/upstreamv1beta1/types.go
index be0b0725c..8ae11ae0d 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/types.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/types.go
@@ -257,6 +257,21 @@ type RegistryMirrorConfiguration struct {
 
 	// CACert defines the CA cert for the registry mirror
 	CACert string `json:"caCert,omitempty"`
+
+	// Mirrors defines a list of image registry mirrors.
+	// +k8s:conversion-gen=false
+	// +optional
+	Mirrors []Mirror `json:"mirrors,omitempty"`
+}
+
+// Mirror holds the settings for mirroring a registry.
+type Mirror struct {
+	// Registry defines the registry we are mirroring to the endpoint.
+	Registry string `json:"registry,omitempty"`
+
+	// Endpoints defines the registry mirror endpoints to use for pulling images.
+	// Currently we support only one private registry. Hence endpoints would have only one entry.
+	Endpoints []string `json:"endpoints,omitempty"`
 }
 
 // ControlPlaneComponent holds settings common to control plane component of the cluster.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
index f77e22f31..3e1aa5b5c 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
@@ -308,6 +308,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*Mirror)(nil), (*v1beta1.Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta1_Mirror_To_v1beta1_Mirror(a.(*Mirror), b.(*v1beta1.Mirror), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.Mirror)(nil), (*Mirror)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_Mirror_To_upstreamv1beta1_Mirror(a.(*v1beta1.Mirror), b.(*Mirror), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*Networking)(nil), (*v1beta1.Networking)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_upstreamv1beta1_Networking_To_v1beta1_Networking(a.(*Networking), b.(*v1beta1.Networking), scope)
 	}); err != nil {
@@ -1225,6 +1235,28 @@ func Convert_v1beta1_LocalEtcd_To_upstreamv1beta1_LocalEtcd(in *v1beta1.LocalEtc
 	return autoConvert_v1beta1_LocalEtcd_To_upstreamv1beta1_LocalEtcd(in, out, s)
 }
 
+func autoConvert_upstreamv1beta1_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_upstreamv1beta1_Mirror_To_v1beta1_Mirror is an autogenerated conversion function.
+func Convert_upstreamv1beta1_Mirror_To_v1beta1_Mirror(in *Mirror, out *v1beta1.Mirror, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta1_Mirror_To_v1beta1_Mirror(in, out, s)
+}
+
+func autoConvert_v1beta1_Mirror_To_upstreamv1beta1_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	out.Registry = in.Registry
+	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
+	return nil
+}
+
+// Convert_v1beta1_Mirror_To_upstreamv1beta1_Mirror is an autogenerated conversion function.
+func Convert_v1beta1_Mirror_To_upstreamv1beta1_Mirror(in *v1beta1.Mirror, out *Mirror, s conversion.Scope) error {
+	return autoConvert_v1beta1_Mirror_To_upstreamv1beta1_Mirror(in, out, s)
+}
+
 func autoConvert_upstreamv1beta1_Networking_To_v1beta1_Networking(in *Networking, out *v1beta1.Networking, s conversion.Scope) error {
 	out.ServiceSubnet = in.ServiceSubnet
 	out.PodSubnet = in.PodSubnet
@@ -1321,6 +1353,7 @@ func Convert_v1beta1_ProxyConfiguration_To_upstreamv1beta1_ProxyConfiguration(in
 func autoConvert_upstreamv1beta1_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(in *RegistryMirrorConfiguration, out *v1beta1.RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
@@ -1332,6 +1365,7 @@ func Convert_upstreamv1beta1_RegistryMirrorConfiguration_To_v1beta1_RegistryMirr
 func autoConvert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta1_RegistryMirrorConfiguration(in *v1beta1.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
index ef10cb0b3..b8ef3ee30 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
@@ -353,7 +353,7 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.Etcd.DeepCopyInto(&out.Etcd)
 	out.Networking = in.Networking
 	in.APIServer.DeepCopyInto(&out.APIServer)
@@ -643,7 +643,7 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.BottlerocketAdmin = in.BottlerocketAdmin
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
-	out.RegistryMirror = in.RegistryMirror
+	in.RegistryMirror.DeepCopyInto(&out.RegistryMirror)
 	in.NodeRegistration.DeepCopyInto(&out.NodeRegistration)
 	in.Discovery.DeepCopyInto(&out.Discovery)
 	if in.ControlPlane != nil {
@@ -740,6 +740,26 @@ func (in *LocalEtcd) DeepCopy() *LocalEtcd {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *Mirror) DeepCopyInto(out *Mirror) {
+	*out = *in
+	if in.Endpoints != nil {
+		in, out := &in.Endpoints, &out.Endpoints
+		*out = make([]string, len(*in))
+		copy(*out, *in)
+	}
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mirror.
+func (in *Mirror) DeepCopy() *Mirror {
+	if in == nil {
+		return nil
+	}
+	out := new(Mirror)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *Networking) DeepCopyInto(out *Networking) {
 	*out = *in
@@ -823,6 +843,13 @@ func (in *ProxyConfiguration) DeepCopy() *ProxyConfiguration {
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *RegistryMirrorConfiguration) DeepCopyInto(out *RegistryMirrorConfiguration) {
 	*out = *in
+	if in.Mirrors != nil {
+		in, out := &in.Mirrors, &out.Mirrors
+		*out = make([]Mirror, len(*in))
+		for i := range *in {
+			(*in)[i].DeepCopyInto(&(*out)[i])
+		}
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryMirrorConfiguration.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
index 3b12557c4..2f462fbe6 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
@@ -1042,6 +1042,7 @@ func Convert_upstreamv1beta2_RegistryMirrorConfiguration_To_v1beta1_RegistryMirr
 func autoConvert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta2_RegistryMirrorConfiguration(in *v1beta1.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
index 6d812f516..dfff19e2d 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
@@ -1055,6 +1055,7 @@ func Convert_upstreamv1beta3_RegistryMirrorConfiguration_To_v1beta1_RegistryMirr
 func autoConvert_v1beta1_RegistryMirrorConfiguration_To_upstreamv1beta3_RegistryMirrorConfiguration(in *v1beta1.RegistryMirrorConfiguration, out *RegistryMirrorConfiguration, s conversion.Scope) error {
 	out.Endpoint = in.Endpoint
 	out.CACert = in.CACert
+	// INFO: in.Mirrors opted out of conversion generation
 	return nil
 }
 
diff --git a/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml b/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml
index 98c907371..2062fe6ff 100644
--- a/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml
+++ b/config/crd/bases/cluster.x-k8s.io_machinedeployments.yaml
@@ -703,7 +703,6 @@ spec:
                     enum:
                     - RollingUpdate
                     - OnDelete
-                    - InPlace
                     type: string
                 type: object
               template:
@@ -1197,6 +1196,7 @@ spec:
                     enum:
                     - RollingUpdate
                     - OnDelete
+                    - InPlace
                     type: string
                 type: object
               template:
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
index fc1332eef..9cca28afb 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
@@ -630,6 +630,27 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: Endpoints defines the registry mirror
+                                    endpoints to use for pulling images. Currently
+                                    we support only one private registry. Hence endpoints
+                                    would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       scheduler:
                         description: Scheduler contains extra settings for the scheduler
@@ -1418,6 +1439,27 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: Endpoints defines the registry mirror
+                                    endpoints to use for pulling images. Currently
+                                    we support only one private registry. Hence endpoints
+                                    would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                     type: object
                   mounts:
@@ -2255,6 +2297,27 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: Endpoints defines the registry mirror
+                                    endpoints to use for pulling images. Currently
+                                    we support only one private registry. Hence endpoints
+                                    would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       scheduler:
                         description: Scheduler contains extra settings for the scheduler
@@ -3045,6 +3108,27 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: Endpoints defines the registry mirror
+                                    endpoints to use for pulling images. Currently
+                                    we support only one private registry. Hence endpoints
+                                    would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                     type: object
                   mounts:
@@ -3971,6 +4055,27 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: Endpoints defines the registry mirror
+                                    endpoints to use for pulling images. Currently
+                                    we support only one private registry. Hence endpoints
+                                    would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       scheduler:
                         description: Scheduler contains extra settings for the scheduler
@@ -4862,6 +4967,27 @@ spec:
                             description: Endpoint defines the registry mirror endpoint
                               to use for pulling images
                             type: string
+                          mirrors:
+                            description: Mirrors defines a list of image registry
+                              mirrors.
+                            items:
+                              description: Mirror holds the settings for mirroring
+                                a registry.
+                              properties:
+                                endpoints:
+                                  description: Endpoints defines the registry mirror
+                                    endpoints to use for pulling images. Currently
+                                    we support only one private registry. Hence endpoints
+                                    would have only one entry.
+                                  items:
+                                    type: string
+                                  type: array
+                                registry:
+                                  description: Registry defines the registry we are
+                                    mirroring to the endpoint.
+                                  type: string
+                              type: object
+                            type: array
                         type: object
                       skipPhases:
                         description: SkipPhases is a list of phases to skip during
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
index ee4180f67..44712fe7a 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
@@ -605,6 +605,28 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: Endpoints defines the registry
+                                            mirror endpoints to use for pulling images.
+                                            Currently we support only one private
+                                            registry. Hence endpoints would have only
+                                            one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                               scheduler:
                                 description: Scheduler contains extra settings for
@@ -1447,6 +1469,28 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: Endpoints defines the registry
+                                            mirror endpoints to use for pulling images.
+                                            Currently we support only one private
+                                            registry. Hence endpoints would have only
+                                            one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                             type: object
                           mounts:
@@ -2315,6 +2359,28 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: Endpoints defines the registry
+                                            mirror endpoints to use for pulling images.
+                                            Currently we support only one private
+                                            registry. Hence endpoints would have only
+                                            one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                               scheduler:
                                 description: Scheduler contains extra settings for
@@ -3267,6 +3333,28 @@ spec:
                                     description: Endpoint defines the registry mirror
                                       endpoint to use for pulling images
                                     type: string
+                                  mirrors:
+                                    description: Mirrors defines a list of image registry
+                                      mirrors.
+                                    items:
+                                      description: Mirror holds the settings for mirroring
+                                        a registry.
+                                      properties:
+                                        endpoints:
+                                          description: Endpoints defines the registry
+                                            mirror endpoints to use for pulling images.
+                                            Currently we support only one private
+                                            registry. Hence endpoints would have only
+                                            one entry.
+                                          items:
+                                            type: string
+                                          type: array
+                                        registry:
+                                          description: Registry defines the registry
+                                            we are mirroring to the endpoint.
+                                          type: string
+                                      type: object
+                                    type: array
                                 type: object
                               skipPhases:
                                 description: SkipPhases is a list of phases to skip
-- 
2.42.0

