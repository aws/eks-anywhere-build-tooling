From 3cd2343abf92e4265e6273766defa6e8278c0d44 Mon Sep 17 00:00:00 2001
From: ahreehong <46465244+ahreehong@users.noreply.github.com>
Date: Fri, 19 May 2023 16:29:08 -0400
Subject: [PATCH 29/39] Add support for custom cert bundles in BR (#21)

* add support for custom cert bundles br

* take in non base-64 encoded data for cert

Signed-off-by: Ahree Hong <ahreeh@amazon.com>
---
 api/v1beta1/zz_generated.openapi.go           |   6 --
 .../kubeadm/api/v1beta1/kubeadm_types.go      |  17 +++
 .../api/v1beta1/zz_generated.deepcopy.go      |  25 +++++
 ...strap.cluster.x-k8s.io_kubeadmconfigs.yaml |  96 +++++++++++++++++
 ...uster.x-k8s.io_kubeadmconfigtemplates.yaml | 102 ++++++++++++++++++
 .../internal/bottlerocket/bootstrap.go        |  16 +++
 .../internal/bottlerocket/bootstrap_test.go   |  53 +++++++++
 .../internal/bottlerocket/bottlerocket.go     |  14 +++
 .../controllers/kubeadmconfig_controller.go   |   9 ++
 .../kubeadm/types/upstreamv1beta1/types.go    |  17 +++
 .../zz_generated.conversion.go                |  36 +++++++
 .../upstreamv1beta1/zz_generated.deepcopy.go  |  25 +++++
 .../zz_generated.conversion.go                |   2 +
 .../zz_generated.conversion.go                |   2 +
 ...cluster.x-k8s.io_kubeadmcontrolplanes.yaml |  96 +++++++++++++++++
 ...x-k8s.io_kubeadmcontrolplanetemplates.yaml |  68 ++++++++++++
 .../kubeadm/v1alpha4/kubeadm_types.go         |  17 +++
 .../v1alpha4/zz_generated.conversion.go       |  36 +++++++
 .../kubeadm/v1alpha4/zz_generated.deepcopy.go |  25 +++++
 19 files changed, 656 insertions(+), 6 deletions(-)

diff --git a/api/v1beta1/zz_generated.openapi.go b/api/v1beta1/zz_generated.openapi.go
index 9e16acde8..9db7f3712 100644
--- a/api/v1beta1/zz_generated.openapi.go
+++ b/api/v1beta1/zz_generated.openapi.go
@@ -803,12 +803,6 @@ func schema_sigsk8sio_cluster_api_api_v1beta1_ClusterSpec(ref common.ReferenceCa
 							Ref:         ref("k8s.io/api/core/v1.ObjectReference"),
 						},
 					},
-					"managedExternalEtcdRef": {
-						SchemaProps: spec.SchemaProps{
-							Description: "ManagedExternalEtcdRef is an optional reference to an etcd provider resource that holds details for provisioning an external etcd cluster",
-							Ref:         ref("k8s.io/api/core/v1.ObjectReference"),
-						},
-					},
 					"infrastructureRef": {
 						SchemaProps: spec.SchemaProps{
 							Description: "InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.",
diff --git a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
index 68dd4b9a9..6b228b547 100644
--- a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
+++ b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
@@ -190,6 +190,10 @@ type ClusterConfiguration struct {
 	// This is only for bottlerocket.
 	// +optional
 	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
 }
 
 // BottlerocketSettings define bottlerocket settings that can be configured on bottlerocket nodes.
@@ -621,6 +625,10 @@ type JoinConfiguration struct {
 	// This is only for bottlerocket.
 	// +optional
 	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
 }
 
 // BottlerocketHostContainer describes a host image for Bottlerocket
@@ -661,6 +669,15 @@ type BottlerocketBootstrapContainer struct {
 	UserData string `json:"userData,omitempty"`
 }
 
+// CertBundle holds the cert data.
+type CertBundle struct {
+	// Name is the name of the cert bundle.
+	Name string `json:"name"`
+
+	// Data is the actual cert.
+	Data string `json:"data"`
+}
+
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
 type JoinControlPlane struct {
 	// LocalAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.
diff --git a/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go b/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
index c89d4aa1f..9fefdcb62 100644
--- a/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/api/v1beta1/zz_generated.deepcopy.go
@@ -330,6 +330,21 @@ func (in *BottlerocketSettings) DeepCopy() *BottlerocketSettings {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *CertBundle) DeepCopyInto(out *CertBundle) {
+	*out = *in
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertBundle.
+func (in *CertBundle) DeepCopy() *CertBundle {
+	if in == nil {
+		return nil
+	}
+	out := new(CertBundle)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	*out = *in
@@ -368,6 +383,11 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 		*out = new(BottlerocketSettings)
 		(*in).DeepCopyInto(*out)
 	}
+	if in.CertBundles != nil {
+		in, out := &in.CertBundles, &out.CertBundles
+		*out = make([]CertBundle, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
@@ -802,6 +822,11 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 		*out = new(BottlerocketSettings)
 		(*in).DeepCopyInto(*out)
 	}
+	if in.CertBundles != nil {
+		in, out := &in.CertBundles, &out.CertBundles
+		*out = make([]CertBundle, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JoinConfiguration.
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
index 662a68087..fbdd8a47a 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
@@ -295,6 +295,22 @@ spec:
                       - superpowered
                       type: object
                     type: array
+                  certBundles:
+                    description: CertBundles holds additional trusted cert bundles.
+                    items:
+                      description: CertBundle holds the cert data.
+                      properties:
+                        data:
+                          description: Data is the actual cert.
+                          type: string
+                        name:
+                          description: Name is the name of the cert bundle.
+                          type: string
+                      required:
+                      - data
+                      - name
+                      type: object
+                    type: array
                   certificatesDir:
                     description: |-
                       CertificatesDir specifies where to store or look for all required certificates.
@@ -1089,6 +1105,22 @@ spec:
                       Defaults to "/etc/kubernetes/pki/ca.crt".
                       TODO: revisit when there is defaulting from k/k
                     type: string
+                  certBundles:
+                    description: CertBundles holds additional trusted cert bundles.
+                    items:
+                      description: CertBundle holds the cert data.
+                      properties:
+                        data:
+                          description: Data is the actual cert.
+                          type: string
+                        name:
+                          description: Name is the name of the cert bundle.
+                          type: string
+                      required:
+                      - data
+                      - name
+                      type: object
+                    type: array
                   controlPlane:
                     description: |-
                       ControlPlane defines the additional control plane instance to be deployed on the joining node.
@@ -1761,6 +1793,22 @@ spec:
                       - superpowered
                       type: object
                     type: array
+                  certBundles:
+                    description: CertBundles holds additional trusted cert bundles.
+                    items:
+                      description: CertBundle holds the cert data.
+                      properties:
+                        data:
+                          description: Data is the actual cert.
+                          type: string
+                        name:
+                          description: Name is the name of the cert bundle.
+                          type: string
+                      required:
+                      - data
+                      - name
+                      type: object
+                    type: array
                   certificatesDir:
                     description: |-
                       CertificatesDir specifies where to store or look for all required certificates.
@@ -2551,6 +2599,22 @@ spec:
                       Defaults to "/etc/kubernetes/pki/ca.crt".
                       TODO: revisit when there is defaulting from k/k
                     type: string
+                  certBundles:
+                    description: CertBundles holds additional trusted cert bundles.
+                    items:
+                      description: CertBundle holds the cert data.
+                      properties:
+                        data:
+                          description: Data is the actual cert.
+                          type: string
+                        name:
+                          description: Name is the name of the cert bundle.
+                          type: string
+                      required:
+                      - data
+                      - name
+                      type: object
+                    type: array
                   controlPlane:
                     description: |-
                       ControlPlane defines the additional control plane instance to be deployed on the joining node.
@@ -3215,6 +3279,22 @@ spec:
                       - superpowered
                       type: object
                     type: array
+                  certBundles:
+                    description: CertBundles holds additional trusted cert bundles.
+                    items:
+                      description: CertBundle holds the cert data.
+                      properties:
+                        data:
+                          description: Data is the actual cert.
+                          type: string
+                        name:
+                          description: Name is the name of the cert bundle.
+                          type: string
+                      required:
+                      - data
+                      - name
+                      type: object
+                    type: array
                   certificatesDir:
                     description: |-
                       CertificatesDir specifies where to store or look for all required certificates.
@@ -4076,6 +4156,22 @@ spec:
                       Defaults to "/etc/kubernetes/pki/ca.crt".
                       TODO: revisit when there is defaulting from k/k
                     type: string
+                  certBundles:
+                    description: CertBundles holds additional trusted cert bundles.
+                    items:
+                      description: CertBundle holds the cert data.
+                      properties:
+                        data:
+                          description: Data is the actual cert.
+                          type: string
+                        name:
+                          description: Name is the name of the cert bundle.
+                          type: string
+                      required:
+                      - data
+                      - name
+                      type: object
+                    type: array
                   controlPlane:
                     description: |-
                       ControlPlane defines the additional control plane instance to be deployed on the joining node.
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
index 01f1b0d6d..88f5085e0 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
@@ -305,6 +305,23 @@ spec:
                               - superpowered
                               type: object
                             type: array
+                          certBundles:
+                            description: CertBundles holds additional trusted cert
+                              bundles.
+                            items:
+                              description: CertBundle holds the cert data.
+                              properties:
+                                data:
+                                  description: Data is the actual cert.
+                                  type: string
+                                name:
+                                  description: Name is the name of the cert bundle.
+                                  type: string
+                              required:
+                              - data
+                              - name
+                              type: object
+                            type: array
                           certificatesDir:
                             description: |-
                               CertificatesDir specifies where to store or look for all required certificates.
@@ -1115,6 +1132,23 @@ spec:
                               Defaults to "/etc/kubernetes/pki/ca.crt".
                               TODO: revisit when there is defaulting from k/k
                             type: string
+                          certBundles:
+                            description: CertBundles holds additional trusted cert
+                              bundles.
+                            items:
+                              description: CertBundle holds the cert data.
+                              properties:
+                                data:
+                                  description: Data is the actual cert.
+                                  type: string
+                                name:
+                                  description: Name is the name of the cert bundle.
+                                  type: string
+                              required:
+                              - data
+                              - name
+                              type: object
+                            type: array
                           controlPlane:
                             description: |-
                               ControlPlane defines the additional control plane instance to be deployed on the joining node.
@@ -1733,6 +1767,23 @@ spec:
                               - superpowered
                               type: object
                             type: array
+                          certBundles:
+                            description: CertBundles holds additional trusted cert
+                              bundles.
+                            items:
+                              description: CertBundle holds the cert data.
+                              properties:
+                                data:
+                                  description: Data is the actual cert.
+                                  type: string
+                                name:
+                                  description: Name is the name of the cert bundle.
+                                  type: string
+                              required:
+                              - data
+                              - name
+                              type: object
+                            type: array
                           certificatesDir:
                             description: |-
                               CertificatesDir specifies where to store or look for all required certificates.
@@ -2540,6 +2591,23 @@ spec:
                               Defaults to "/etc/kubernetes/pki/ca.crt".
                               TODO: revisit when there is defaulting from k/k
                             type: string
+                          certBundles:
+                            description: CertBundles holds additional trusted cert
+                              bundles.
+                            items:
+                              description: CertBundle holds the cert data.
+                              properties:
+                                data:
+                                  description: Data is the actual cert.
+                                  type: string
+                                name:
+                                  description: Name is the name of the cert bundle.
+                                  type: string
+                              required:
+                              - data
+                              - name
+                              type: object
+                            type: array
                           controlPlane:
                             description: |-
                               ControlPlane defines the additional control plane instance to be deployed on the joining node.
@@ -3181,6 +3249,23 @@ spec:
                               - superpowered
                               type: object
                             type: array
+                          certBundles:
+                            description: CertBundles holds additional trusted cert
+                              bundles.
+                            items:
+                              description: CertBundle holds the cert data.
+                              properties:
+                                data:
+                                  description: Data is the actual cert.
+                                  type: string
+                                name:
+                                  description: Name is the name of the cert bundle.
+                                  type: string
+                              required:
+                              - data
+                              - name
+                              type: object
+                            type: array
                           certificatesDir:
                             description: |-
                               CertificatesDir specifies where to store or look for all required certificates.
@@ -4061,6 +4146,23 @@ spec:
                               Defaults to "/etc/kubernetes/pki/ca.crt".
                               TODO: revisit when there is defaulting from k/k
                             type: string
+                          certBundles:
+                            description: CertBundles holds additional trusted cert
+                              bundles.
+                            items:
+                              description: CertBundle holds the cert data.
+                              properties:
+                                data:
+                                  description: Data is the actual cert.
+                                  type: string
+                                name:
+                                  description: Name is the name of the cert bundle.
+                                  type: string
+                              required:
+                              - data
+                              - name
+                              type: object
+                            type: array
                           controlPlane:
                             description: |-
                               ControlPlane defines the additional control plane instance to be deployed on the joining node.
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
index 901db1cb7..df222b943 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
@@ -128,6 +128,18 @@ reboot-to-reconcile = true
 [settings.boot.kernel-parameters]
 {{.BootKernel}}
 {{- end -}}
+`
+	certsTemplate = `{{ define "certsSettings" -}}
+[settings.pki.{{.Name}}]
+data = "{{.Data}}"
+trusted = true
+{{- end -}}
+`
+	certBundlesSliceTemplate = `{{ define "certBundlesSlice" -}}
+{{- range $cBundle := .CertBundles }}
+{{template "certsSettings" $cBundle }}
+{{- end -}}
+{{- end -}}
 `
 
 	bottlerocketNodeInitSettingsTemplate = `{{template "hostContainerSlice" .}}
@@ -172,5 +184,9 @@ reboot-to-reconcile = true
 {{- if .BootKernel}}
 {{template "bootSettings" .}}
 {{- end -}}
+
+{{- if .CertBundles}}
+{{template "certBundlesSlice" .}}
+{{- end -}}
 `
 )
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
index 5846524be..2ee2d942b 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap_test.go
@@ -310,6 +310,36 @@ reboot-to-reconcile = true
 "abc" = ["def","123"]
 "foo" = ["bar"]
 `
+
+	userDataWithCertBundle = `
+[settings.host-containers.admin]
+enabled = true
+superpowered = true
+source = "ADMIN_REPO:ADMIN_TAG"
+user-data = "CnsKCSJzc2giOiB7CgkJImF1dGhvcml6ZWQta2V5cyI6IFsic3NoLXJzYSBBQUEuLi4iXQoJfQp9"
+[settings.host-containers.kubeadm-bootstrap]
+enabled = true
+superpowered = true
+source = "BOOTSTRAP_REPO:BOOTSTRAP_TAG"
+user-data = "Qk9UVExFUk9DS0VUX0JPT1RTVFJBUF9VU0VSREFUQQ=="
+
+[settings.kubernetes]
+cluster-domain = "cluster.local"
+standalone-mode = true
+authentication-mode = "tls"
+server-tls-bootstrap = false
+pod-infra-container-image = "PAUSE_REPO:PAUSE_TAG"
+provider-id = "PROVIDERID"
+
+[settings.network]
+hostname = "hostname"
+
+[settings.pki.bundle1]
+data = "QUJDREVG"
+trusted = true
+[settings.pki.bundle2]
+data = "MTIzNDU2"
+trusted = true`
 )
 
 var (
@@ -569,6 +599,29 @@ func TestGetBottlerocketNodeUserData(t *testing.T) {
 			},
 			output: BootSettingsUserData,
 		},
+		{
+			name: "with custom cert bundle settings",
+			config: &BottlerocketConfig{
+				BottlerocketAdmin:     brAdmin,
+				BottlerocketBootstrap: brBootstrap,
+				Hostname:              hostname,
+				Pause:                 pause,
+				KubeletExtraArgs: map[string]string{
+					"provider-id": "PROVIDERID",
+				},
+				CertBundle: []bootstrapv1.CertBundle{
+					{
+						Name: "bundle1",
+						Data: "ABCDEF",
+					},
+					{
+						Name: "bundle2",
+						Data: "123456",
+					},
+				},
+			},
+			output: userDataWithCertBundle,
+		},
 	}
 	for _, testcase := range testcases {
 		t.Run(testcase.name, func(t *testing.T) {
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
index 7b7131829..ce796f206 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
@@ -37,6 +37,7 @@ type BottlerocketConfig struct {
 	BottlerocketCustomBootstrapContainers []bootstrapv1.BottlerocketBootstrapContainer
 	NTPServers                            []string
 	Hostname                              string
+	CertBundle                            []bootstrapv1.CertBundle
 	RegistryMirrorCredentials
 }
 
@@ -61,6 +62,7 @@ type BottlerocketSettingsInput struct {
 	HostContainers         []bootstrapv1.BottlerocketHostContainer
 	BootstrapContainers    []bootstrapv1.BottlerocketBootstrapContainer
 	SysctlSettings         string
+	CertBundles            []bootstrapv1.CertBundle
 }
 
 // HostPath holds the path and type of a host path volume.
@@ -164,6 +166,12 @@ func generateNodeUserData(kind string, tpl string, data interface{}) ([]byte, er
 	if _, err := tm.Parse(bootSettingsTemplate); err != nil {
 		return nil, errors.Wrapf(err, "failed to parse boot settings %s template", kind)
 	}
+	if _, err := tm.Parse(certsTemplate); err != nil {
+		return nil, errors.Wrapf(err, "failed to parse certs %s template", kind)
+	}
+	if _, err := tm.Parse(certBundlesSliceTemplate); err != nil {
+		return nil, errors.Wrapf(err, "failed to parse cert bundles %s template", kind)
+	}
 	t, err := tm.Parse(tpl)
 	if err != nil {
 		return nil, errors.Wrapf(err, "failed to parse %s template", kind)
@@ -266,6 +274,12 @@ func getBottlerocketNodeUserData(bootstrapContainerUserData []byte, users []boot
 		}
 
 	}
+	if config.CertBundle != nil {
+		for _, cert := range config.CertBundle {
+			cert.Data = base64.StdEncoding.EncodeToString([]byte(cert.Data))
+			bottlerocketInput.CertBundles = append(bottlerocketInput.CertBundles, cert)
+		}
+	}
 
 	return generateNodeUserData("InitBottlerocketNode", bottlerocketNodeInitSettingsTemplate, bottlerocketInput)
 }
diff --git a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
index 64213e5be..e64be18ea 100644
--- a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
+++ b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
@@ -541,6 +541,9 @@ func (r *KubeadmConfigReconciler) handleClusterNotInitialized(ctx context.Contex
 		if scope.Config.Spec.NTP != nil && scope.Config.Spec.NTP.Enabled != nil && *scope.Config.Spec.NTP.Enabled {
 			bottlerocketConfig.NTPServers = scope.Config.Spec.NTP.Servers
 		}
+		if scope.Config.Spec.ClusterConfiguration.CertBundles != nil {
+			bottlerocketConfig.CertBundle = scope.Config.Spec.ClusterConfiguration.CertBundles
+		}
 	}
 
 	clusterdata, err := kubeadmtypes.MarshalClusterConfigurationForVersion(scope.Config.Spec.ClusterConfiguration, parsedVersion)
@@ -766,6 +769,9 @@ func (r *KubeadmConfigReconciler) joinWorker(ctx context.Context, scope *Scope)
 		if scope.Config.Spec.NTP != nil && scope.Config.Spec.NTP.Enabled != nil && *scope.Config.Spec.NTP.Enabled {
 			bottlerocketConfig.NTPServers = scope.Config.Spec.NTP.Servers
 		}
+		if scope.Config.Spec.JoinConfiguration.CertBundles != nil {
+			bottlerocketConfig.CertBundle = scope.Config.Spec.JoinConfiguration.CertBundles
+		}
 		bootstrapJoinData, err = bottlerocket.NewNode(nodeInput, bottlerocketConfig)
 		if err != nil {
 			scope.Error(err, "Failed to create a worker bottlerocket join configuration")
@@ -915,6 +921,9 @@ func (r *KubeadmConfigReconciler) joinControlplane(ctx context.Context, scope *S
 		if scope.Config.Spec.NTP != nil && scope.Config.Spec.NTP.Enabled != nil && *scope.Config.Spec.NTP.Enabled {
 			bottlerocketConfig.NTPServers = scope.Config.Spec.NTP.Servers
 		}
+		if scope.Config.Spec.JoinConfiguration.CertBundles != nil {
+			bottlerocketConfig.CertBundle = scope.Config.Spec.JoinConfiguration.CertBundles
+		}
 		bootstrapJoinData, err = bottlerocket.NewJoinControlPlane(controlPlaneJoinInput, bottlerocketConfig)
 		if err != nil {
 			scope.Error(err, "Failed to generate cloud init for bottlerocket bootstrap control plane")
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/types.go b/bootstrap/kubeadm/types/upstreamv1beta1/types.go
index 1b7ce57fe..be0b0725c 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/types.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/types.go
@@ -169,6 +169,10 @@ type ClusterConfiguration struct {
 	// This is only for bottlerocket.
 	// +optional
 	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
 }
 
 // BottlerocketSettings define bottlerocket settings that can be configured on bottlerocket nodes.
@@ -523,6 +527,10 @@ type JoinConfiguration struct {
 	// This is only for bottlerocket.
 	// +optional
 	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
 }
 
 // BottlerocketHostContainer describes a host image for Bottlerocket
@@ -563,6 +571,15 @@ type BottlerocketBootstrapContainer struct {
 	UserData string `json:"userData,omitempty"`
 }
 
+// CertBundle holds the cert data.
+type CertBundle struct {
+	// Name is the name of the cert bundle.
+	Name string `json:"name"`
+
+	// Data is the actual cert.
+	Data string `json:"data"`
+}
+
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
 type JoinControlPlane struct {
 	// LocalAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
index 5cef55e28..f77e22f31 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.conversion.go
@@ -178,6 +178,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*CertBundle)(nil), (*v1beta1.CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_upstreamv1beta1_CertBundle_To_v1beta1_CertBundle(a.(*CertBundle), b.(*v1beta1.CertBundle), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.CertBundle)(nil), (*CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_CertBundle_To_upstreamv1beta1_CertBundle(a.(*v1beta1.CertBundle), b.(*CertBundle), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*v1beta1.ClusterConfiguration)(nil), (*ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta1_ClusterConfiguration_To_upstreamv1beta1_ClusterConfiguration(a.(*v1beta1.ClusterConfiguration), b.(*ClusterConfiguration), scope)
 	}); err != nil {
@@ -721,6 +731,28 @@ func Convert_v1beta1_BottlerocketSettings_To_upstreamv1beta1_BottlerocketSetting
 	return autoConvert_v1beta1_BottlerocketSettings_To_upstreamv1beta1_BottlerocketSettings(in, out, s)
 }
 
+func autoConvert_upstreamv1beta1_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_upstreamv1beta1_CertBundle_To_v1beta1_CertBundle is an autogenerated conversion function.
+func Convert_upstreamv1beta1_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	return autoConvert_upstreamv1beta1_CertBundle_To_v1beta1_CertBundle(in, out, s)
+}
+
+func autoConvert_v1beta1_CertBundle_To_upstreamv1beta1_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_v1beta1_CertBundle_To_upstreamv1beta1_CertBundle is an autogenerated conversion function.
+func Convert_v1beta1_CertBundle_To_upstreamv1beta1_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	return autoConvert_v1beta1_CertBundle_To_upstreamv1beta1_CertBundle(in, out, s)
+}
+
 func autoConvert_upstreamv1beta1_ClusterConfiguration_To_v1beta1_ClusterConfiguration(in *ClusterConfiguration, out *v1beta1.ClusterConfiguration, s conversion.Scope) error {
 	if err := Convert_upstreamv1beta1_Pause_To_v1beta1_Pause(&in.Pause, &out.Pause, s); err != nil {
 		return err
@@ -768,6 +800,7 @@ func autoConvert_upstreamv1beta1_ClusterConfiguration_To_v1beta1_ClusterConfigur
 	out.BottlerocketHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	out.Bottlerocket = (*v1beta1.BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -817,6 +850,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta1_ClusterConfigur
 	out.BottlerocketHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	out.Bottlerocket = (*BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -1090,6 +1124,7 @@ func autoConvert_upstreamv1beta1_JoinConfiguration_To_v1beta1_JoinConfiguration(
 	out.BottlerocketCustomHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	out.Bottlerocket = (*v1beta1.BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -1130,6 +1165,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta1_JoinConfiguration(
 	out.BottlerocketCustomHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	out.Bottlerocket = (*BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
diff --git a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
index 2043410cf..ef10cb0b3 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta1/zz_generated.deepcopy.go
@@ -329,6 +329,21 @@ func (in *BottlerocketSettings) DeepCopy() *BottlerocketSettings {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *CertBundle) DeepCopyInto(out *CertBundle) {
+	*out = *in
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertBundle.
+func (in *CertBundle) DeepCopy() *CertBundle {
+	if in == nil {
+		return nil
+	}
+	out := new(CertBundle)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	*out = *in
@@ -367,6 +382,11 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 		*out = new(BottlerocketSettings)
 		(*in).DeepCopyInto(*out)
 	}
+	if in.CertBundles != nil {
+		in, out := &in.CertBundles, &out.CertBundles
+		*out = make([]CertBundle, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
@@ -646,6 +666,11 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 		*out = new(BottlerocketSettings)
 		(*in).DeepCopyInto(*out)
 	}
+	if in.CertBundles != nil {
+		in, out := &in.CertBundles, &out.CertBundles
+		*out = make([]CertBundle, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JoinConfiguration.
diff --git a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
index 8b1acbb57..3b12557c4 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta2/zz_generated.conversion.go
@@ -565,6 +565,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta2_ClusterConfigur
 	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
 	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
+	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
 	return nil
 }
 
@@ -877,6 +878,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta2_JoinConfiguration(
 	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
 	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
+	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
 	return nil
 }
 
diff --git a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
index c613bdd12..6d812f516 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
@@ -569,6 +569,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_upstreamv1beta3_ClusterConfigur
 	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
 	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
+	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
 	return nil
 }
 
@@ -869,6 +870,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_upstreamv1beta3_JoinConfiguration(
 	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
 	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	// WARNING: in.Bottlerocket requires manual conversion: does not exist in peer-type
+	// WARNING: in.CertBundles requires manual conversion: does not exist in peer-type
 	return nil
 }
 
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
index b5e63af3d..bb8edc495 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
@@ -380,6 +380,22 @@ spec:
                           - superpowered
                           type: object
                         type: array
+                      certBundles:
+                        description: CertBundles holds additional trusted cert bundles.
+                        items:
+                          description: CertBundle holds the cert data.
+                          properties:
+                            data:
+                              description: Data is the actual cert.
+                              type: string
+                            name:
+                              description: Name is the name of the cert bundle.
+                              type: string
+                          required:
+                          - data
+                          - name
+                          type: object
+                        type: array
                       certificatesDir:
                         description: |-
                           CertificatesDir specifies where to store or look for all required certificates.
@@ -1184,6 +1200,22 @@ spec:
                           Defaults to "/etc/kubernetes/pki/ca.crt".
                           TODO: revisit when there is defaulting from k/k
                         type: string
+                      certBundles:
+                        description: CertBundles holds additional trusted cert bundles.
+                        items:
+                          description: CertBundle holds the cert data.
+                          properties:
+                            data:
+                              description: Data is the actual cert.
+                              type: string
+                            name:
+                              description: Name is the name of the cert bundle.
+                              type: string
+                          required:
+                          - data
+                          - name
+                          type: object
+                        type: array
                       controlPlane:
                         description: |-
                           ControlPlane defines the additional control plane instance to be deployed on the joining node.
@@ -1992,6 +2024,22 @@ spec:
                           - superpowered
                           type: object
                         type: array
+                      certBundles:
+                        description: CertBundles holds additional trusted cert bundles.
+                        items:
+                          description: CertBundle holds the cert data.
+                          properties:
+                            data:
+                              description: Data is the actual cert.
+                              type: string
+                            name:
+                              description: Name is the name of the cert bundle.
+                              type: string
+                          required:
+                          - data
+                          - name
+                          type: object
+                        type: array
                       certificatesDir:
                         description: |-
                           CertificatesDir specifies where to store or look for all required certificates.
@@ -2793,6 +2841,22 @@ spec:
                           Defaults to "/etc/kubernetes/pki/ca.crt".
                           TODO: revisit when there is defaulting from k/k
                         type: string
+                      certBundles:
+                        description: CertBundles holds additional trusted cert bundles.
+                        items:
+                          description: CertBundle holds the cert data.
+                          properties:
+                            data:
+                              description: Data is the actual cert.
+                              type: string
+                            name:
+                              description: Name is the name of the cert bundle.
+                              type: string
+                          required:
+                          - data
+                          - name
+                          type: object
+                        type: array
                       controlPlane:
                         description: |-
                           ControlPlane defines the additional control plane instance to be deployed on the joining node.
@@ -3695,6 +3759,22 @@ spec:
                           - superpowered
                           type: object
                         type: array
+                      certBundles:
+                        description: CertBundles holds additional trusted cert bundles.
+                        items:
+                          description: CertBundle holds the cert data.
+                          properties:
+                            data:
+                              description: Data is the actual cert.
+                              type: string
+                            name:
+                              description: Name is the name of the cert bundle.
+                              type: string
+                          required:
+                          - data
+                          - name
+                          type: object
+                        type: array
                       certificatesDir:
                         description: |-
                           CertificatesDir specifies where to store or look for all required certificates.
@@ -4567,6 +4647,22 @@ spec:
                           Defaults to "/etc/kubernetes/pki/ca.crt".
                           TODO: revisit when there is defaulting from k/k
                         type: string
+                      certBundles:
+                        description: CertBundles holds additional trusted cert bundles.
+                        items:
+                          description: CertBundle holds the cert data.
+                          properties:
+                            data:
+                              description: Data is the actual cert.
+                              type: string
+                            name:
+                              description: Name is the name of the cert bundle.
+                              type: string
+                          required:
+                          - data
+                          - name
+                          type: object
+                        type: array
                       controlPlane:
                         description: |-
                           ControlPlane defines the additional control plane instance to be deployed on the joining node.
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
index 2653f0a36..8ba0071b1 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
@@ -321,6 +321,23 @@ spec:
                                   - superpowered
                                   type: object
                                 type: array
+                              certBundles:
+                                description: CertBundles holds additional trusted
+                                  cert bundles.
+                                items:
+                                  description: CertBundle holds the cert data.
+                                  properties:
+                                    data:
+                                      description: Data is the actual cert.
+                                      type: string
+                                    name:
+                                      description: Name is the name of the cert bundle.
+                                      type: string
+                                  required:
+                                  - data
+                                  - name
+                                  type: object
+                                type: array
                               certificatesDir:
                                 description: |-
                                   CertificatesDir specifies where to store or look for all required certificates.
@@ -1138,6 +1155,23 @@ spec:
                                   Defaults to "/etc/kubernetes/pki/ca.crt".
                                   TODO: revisit when there is defaulting from k/k
                                 type: string
+                              certBundles:
+                                description: CertBundles holds additional trusted
+                                  cert bundles.
+                                items:
+                                  description: CertBundle holds the cert data.
+                                  properties:
+                                    data:
+                                      description: Data is the actual cert.
+                                      type: string
+                                    name:
+                                      description: Name is the name of the cert bundle.
+                                      type: string
+                                  required:
+                                  - data
+                                  - name
+                                  type: object
+                                type: array
                               controlPlane:
                                 description: |-
                                   ControlPlane defines the additional control plane instance to be deployed on the joining node.
@@ -1939,6 +1973,23 @@ spec:
                                   - superpowered
                                   type: object
                                 type: array
+                              certBundles:
+                                description: CertBundles holds additional trusted
+                                  cert bundles.
+                                items:
+                                  description: CertBundle holds the cert data.
+                                  properties:
+                                    data:
+                                      description: Data is the actual cert.
+                                      type: string
+                                    name:
+                                      description: Name is the name of the cert bundle.
+                                      type: string
+                                  required:
+                                  - data
+                                  - name
+                                  type: object
+                                type: array
                               certificatesDir:
                                 description: |-
                                   CertificatesDir specifies where to store or look for all required certificates.
@@ -2829,6 +2880,23 @@ spec:
                                   Defaults to "/etc/kubernetes/pki/ca.crt".
                                   TODO: revisit when there is defaulting from k/k
                                 type: string
+                              certBundles:
+                                description: CertBundles holds additional trusted
+                                  cert bundles.
+                                items:
+                                  description: CertBundle holds the cert data.
+                                  properties:
+                                    data:
+                                      description: Data is the actual cert.
+                                      type: string
+                                    name:
+                                      description: Name is the name of the cert bundle.
+                                      type: string
+                                  required:
+                                  - data
+                                  - name
+                                  type: object
+                                type: array
                               controlPlane:
                                 description: |-
                                   ControlPlane defines the additional control plane instance to be deployed on the joining node.
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go b/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
index 010efa948..3d43cae72 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
@@ -171,6 +171,10 @@ type ClusterConfiguration struct {
 	// This is only for bottlerocket.
 	// +optional
 	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
 }
 
 // BottlerocketSettings define bottlerocket settings that can be configured on bottlerocket nodes.
@@ -534,6 +538,10 @@ type JoinConfiguration struct {
 	// This is only for bottlerocket.
 	// +optional
 	Bottlerocket *BottlerocketSettings `json:"bottlerocket,omitempty"`
+
+	// CertBundles holds additional trusted cert bundles.
+	// +optional
+	CertBundles []CertBundle `json:"certBundles,omitempty"`
 }
 
 // BottlerocketHostContainer describes a host image for Bottlerocket
@@ -574,6 +582,15 @@ type BottlerocketBootstrapContainer struct {
 	UserData string `json:"userData,omitempty"`
 }
 
+// CertBundle holds the cert data.
+type CertBundle struct {
+	// Name is the name of the cert bundle.
+	Name string `json:"name"`
+
+	// Data is the actual cert.
+	Data string `json:"data"`
+}
+
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
 type JoinControlPlane struct {
 	// LocalAPIEndpoint represents the endpoint of the API server instance to be deployed on this node.
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
index 4fcb86e9b..57400b3c0 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
@@ -180,6 +180,16 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddGeneratedConversionFunc((*CertBundle)(nil), (*v1beta1.CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1alpha4_CertBundle_To_v1beta1_CertBundle(a.(*CertBundle), b.(*v1beta1.CertBundle), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddGeneratedConversionFunc((*v1beta1.CertBundle)(nil), (*CertBundle)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_CertBundle_To_v1alpha4_CertBundle(a.(*v1beta1.CertBundle), b.(*CertBundle), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddGeneratedConversionFunc((*ClusterConfiguration)(nil), (*v1beta1.ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1alpha4_ClusterConfiguration_To_v1beta1_ClusterConfiguration(a.(*ClusterConfiguration), b.(*v1beta1.ClusterConfiguration), scope)
 	}); err != nil {
@@ -883,6 +893,28 @@ func Convert_v1beta1_BottlerocketSettings_To_v1alpha4_BottlerocketSettings(in *v
 	return autoConvert_v1beta1_BottlerocketSettings_To_v1alpha4_BottlerocketSettings(in, out, s)
 }
 
+func autoConvert_v1alpha4_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_v1alpha4_CertBundle_To_v1beta1_CertBundle is an autogenerated conversion function.
+func Convert_v1alpha4_CertBundle_To_v1beta1_CertBundle(in *CertBundle, out *v1beta1.CertBundle, s conversion.Scope) error {
+	return autoConvert_v1alpha4_CertBundle_To_v1beta1_CertBundle(in, out, s)
+}
+
+func autoConvert_v1beta1_CertBundle_To_v1alpha4_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Data = in.Data
+	return nil
+}
+
+// Convert_v1beta1_CertBundle_To_v1alpha4_CertBundle is an autogenerated conversion function.
+func Convert_v1beta1_CertBundle_To_v1alpha4_CertBundle(in *v1beta1.CertBundle, out *CertBundle, s conversion.Scope) error {
+	return autoConvert_v1beta1_CertBundle_To_v1alpha4_CertBundle(in, out, s)
+}
+
 func autoConvert_v1alpha4_ClusterConfiguration_To_v1beta1_ClusterConfiguration(in *ClusterConfiguration, out *v1beta1.ClusterConfiguration, s conversion.Scope) error {
 	if err := Convert_v1alpha4_Pause_To_v1beta1_Pause(&in.Pause, &out.Pause, s); err != nil {
 		return err
@@ -929,6 +961,7 @@ func autoConvert_v1alpha4_ClusterConfiguration_To_v1beta1_ClusterConfiguration(i
 	out.BottlerocketHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	out.Bottlerocket = (*v1beta1.BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -983,6 +1016,7 @@ func autoConvert_v1beta1_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(i
 	out.BottlerocketHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	out.Bottlerocket = (*BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -1359,6 +1393,7 @@ func autoConvert_v1alpha4_JoinConfiguration_To_v1beta1_JoinConfiguration(in *Joi
 	out.BottlerocketCustomHostContainers = *(*[]v1beta1.BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]v1beta1.BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	out.Bottlerocket = (*v1beta1.BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	out.CertBundles = *(*[]v1beta1.CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
@@ -1399,6 +1434,7 @@ func autoConvert_v1beta1_JoinConfiguration_To_v1alpha4_JoinConfiguration(in *v1b
 	out.BottlerocketCustomHostContainers = *(*[]BottlerocketHostContainer)(unsafe.Pointer(&in.BottlerocketCustomHostContainers))
 	out.BottlerocketCustomBootstrapContainers = *(*[]BottlerocketBootstrapContainer)(unsafe.Pointer(&in.BottlerocketCustomBootstrapContainers))
 	out.Bottlerocket = (*BottlerocketSettings)(unsafe.Pointer(in.Bottlerocket))
+	out.CertBundles = *(*[]CertBundle)(unsafe.Pointer(&in.CertBundles))
 	return nil
 }
 
diff --git a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
index e3e959285..7331e32eb 100644
--- a/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
+++ b/internal/apis/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
@@ -330,6 +330,21 @@ func (in *BottlerocketSettings) DeepCopy() *BottlerocketSettings {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *CertBundle) DeepCopyInto(out *CertBundle) {
+	*out = *in
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertBundle.
+func (in *CertBundle) DeepCopy() *CertBundle {
+	if in == nil {
+		return nil
+	}
+	out := new(CertBundle)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	*out = *in
@@ -368,6 +383,11 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 		*out = new(BottlerocketSettings)
 		(*in).DeepCopyInto(*out)
 	}
+	if in.CertBundles != nil {
+		in, out := &in.CertBundles, &out.CertBundles
+		*out = make([]CertBundle, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
@@ -747,6 +767,11 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 		*out = new(BottlerocketSettings)
 		(*in).DeepCopyInto(*out)
 	}
+	if in.CertBundles != nil {
+		in, out := &in.CertBundles, &out.CertBundles
+		*out = make([]CertBundle, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JoinConfiguration.
-- 
2.42.0

