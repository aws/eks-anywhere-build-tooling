From 197f6cf181f21654f54ed7cb85e4beb7e8cfb951 Mon Sep 17 00:00:00 2001
From: Vignesh Goutham Ganesh <vgg@amazon.com>
Date: Wed, 8 Jun 2022 10:27:26 -0700
Subject: [PATCH 13/38] Parse provider-id from kubelet extra args

Signed-off-by: Vignesh Goutham Ganesh <vgg@amazon.com>
---
 api/bootstrap/kubeadm/v1beta1/conversion.go   |  38 ++
 .../kubeadm/v1beta1/kubeadm_types.go          |  58 ++
 .../v1beta1/zz_generated.conversion.go        | 124 ++++
 .../kubeadm/v1beta1/zz_generated.deepcopy.go  |  52 ++
 .../kubeadm/v1beta2/kubeadm_types.go          |  79 +++
 .../kubeadm/v1beta2/zz_generated.deepcopy.go  |  50 ++
 ...strap.cluster.x-k8s.io_kubeadmconfigs.yaml | 524 +++++++++++++++++
 ...uster.x-k8s.io_kubeadmconfigtemplates.yaml | 530 +++++++++++++++++
 .../internal/bottlerocket/bootstrap.go        |  71 ++-
 .../internal/bottlerocket/bottlerocket.go     |  91 ++-
 .../controllers/kubeadmconfig_controller.go   |  24 +-
 .../zz_generated.conversion.go                |   4 +
 .../zz_generated.conversion.go                |   4 +
 ...cluster.x-k8s.io_kubeadmcontrolplanes.yaml | 530 +++++++++++++++++
 ...x-k8s.io_kubeadmcontrolplanetemplates.yaml | 548 ++++++++++++++++++
 .../v1alpha3/zz_generated.conversion.go       |   4 +
 .../bootstrap/kubeadm/v1alpha4/conversion.go  |  55 ++
 .../kubeadm/v1alpha4/kubeadm_types.go         |  58 ++
 .../v1alpha4/zz_generated.conversion.go       | 164 +++++-
 .../kubeadm/v1alpha4/zz_generated.deepcopy.go |  52 ++
 20 files changed, 2991 insertions(+), 69 deletions(-)

diff --git a/api/bootstrap/kubeadm/v1beta1/conversion.go b/api/bootstrap/kubeadm/v1beta1/conversion.go
index cab70aaa0..6a4eda59d 100644
--- a/api/bootstrap/kubeadm/v1beta1/conversion.go
+++ b/api/bootstrap/kubeadm/v1beta1/conversion.go
@@ -694,6 +694,44 @@ func Convert_v1beta2_BottlerocketControl_To_v1beta1_BottlerocketControl(in *boot
 	return nil
 }
 
+func Convert_v1beta1_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(in *BottlerocketHostContainer, out *bootstrapv1.BottlerocketHostContainer, _ apimachineryconversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	out.UserData = in.UserData
+	return nil
+}
+
+func Convert_v1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in *bootstrapv1.BottlerocketHostContainer, out *BottlerocketHostContainer, _ apimachineryconversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	out.UserData = in.UserData
+	return nil
+}
+
+func Convert_v1beta1_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *bootstrapv1.BottlerocketBootstrapContainer, _ apimachineryconversion.Scope) error {
+	out.Name = in.Name
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+func Convert_v1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *bootstrapv1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, _ apimachineryconversion.Scope) error {
+	out.Name = in.Name
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
 func Convert_v1beta1_Etcd_To_v1beta2_Etcd(in *Etcd, out *bootstrapv1.Etcd, s apimachineryconversion.Scope) error {
 	if in.Local != nil {
 		if err := Convert_v1beta1_LocalEtcd_To_v1beta2_LocalEtcd(in.Local, &out.Local, s); err != nil {
diff --git a/api/bootstrap/kubeadm/v1beta1/kubeadm_types.go b/api/bootstrap/kubeadm/v1beta1/kubeadm_types.go
index 8c9d46d83..05423a9aa 100644
--- a/api/bootstrap/kubeadm/v1beta1/kubeadm_types.go
+++ b/api/bootstrap/kubeadm/v1beta1/kubeadm_types.go
@@ -92,6 +92,16 @@ type ClusterConfiguration struct {
 	// +optional
 	BottlerocketControl BottlerocketControl `json:"bottlerocketControl,omitempty"`
 
+	// BottlerocketHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
 	// Proxy holds the https and no proxy information
 	// This is only for bottlerocket
 	// +optional
@@ -207,6 +217,44 @@ type BottlerocketControl struct {
 	ImageMeta `json:",inline"`
 }
 
+// BottlerocketHostContainer describes a host image for Bottlerocket
+type BottlerocketHostContainer struct {
+	// Name is the host container name that will be given to the container in BR's `apiserver`
+	// +kubebuilder:validation:Required
+	Name string `json:"name"`
+	// Superpowered indicates if the container will be superpowered
+	// +kubebuilder:validation:Required
+	Superpowered bool `json:"superpowered"`
+	// ImageMeta is the actual location of the container image
+	ImageMeta `json:"source"`
+	// UserData is the userdata that will be attached to the image.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// ImageMeta is the actual image used for Bottlerocket bootstrap.
+	ImageMeta `json:",inline"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
 // ProxyConfiguration holds the settings for proxying bottlerocket services
 type ProxyConfiguration struct {
 	// HTTPS proxy
@@ -587,6 +635,16 @@ type JoinConfiguration struct {
 	// +optional
 	BottlerocketControl BottlerocketControl `json:"bottlerocketControl,omitempty"`
 
+	// BottlerocketHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
 	// Proxy holds the https and no proxy information
 	// This is only for bottlerocket
 	// +optional
diff --git a/api/bootstrap/kubeadm/v1beta1/zz_generated.conversion.go b/api/bootstrap/kubeadm/v1beta1/zz_generated.conversion.go
index 6dccffc45..22ad09909 100644
--- a/api/bootstrap/kubeadm/v1beta1/zz_generated.conversion.go
+++ b/api/bootstrap/kubeadm/v1beta1/zz_generated.conversion.go
@@ -345,6 +345,11 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddConversionFunc((*BottlerocketBootstrapContainer)(nil), (*v1beta2.BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(a.(*BottlerocketBootstrapContainer), b.(*v1beta2.BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*BottlerocketBootstrap)(nil), (*v1beta2.BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta1_BottlerocketBootstrap_To_v1beta2_BottlerocketBootstrap(a.(*BottlerocketBootstrap), b.(*v1beta2.BottlerocketBootstrap), scope)
 	}); err != nil {
@@ -355,6 +360,11 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddConversionFunc((*BottlerocketHostContainer)(nil), (*v1beta2.BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta1_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(a.(*BottlerocketHostContainer), b.(*v1beta2.BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*ClusterConfiguration)(nil), (*v1beta2.ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta1_ClusterConfiguration_To_v1beta2_ClusterConfiguration(a.(*ClusterConfiguration), b.(*v1beta2.ClusterConfiguration), scope)
 	}); err != nil {
@@ -470,6 +480,11 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddConversionFunc((*v1beta2.BottlerocketBootstrapContainer)(nil), (*BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(a.(*v1beta2.BottlerocketBootstrapContainer), b.(*BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*v1beta2.BottlerocketBootstrap)(nil), (*BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta2_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(a.(*v1beta2.BottlerocketBootstrap), b.(*BottlerocketBootstrap), scope)
 	}); err != nil {
@@ -480,6 +495,11 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddConversionFunc((*v1beta2.BottlerocketHostContainer)(nil), (*BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(a.(*v1beta2.BottlerocketHostContainer), b.(*BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*v1beta2.ClusterConfiguration)(nil), (*ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta2_ClusterConfiguration_To_v1beta1_ClusterConfiguration(a.(*v1beta2.ClusterConfiguration), b.(*ClusterConfiguration), scope)
 	}); err != nil {
@@ -703,6 +723,25 @@ func autoConvert_v1beta2_BottlerocketBootstrap_To_v1beta1_BottlerocketBootstrap(
 	return nil
 }
 
+func autoConvert_v1beta1_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta2.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	// WARNING: in.ImageMeta requires manual conversion: does not exist in peer-type
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+func autoConvert_v1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(in *v1beta2.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	// WARNING: in.ImageRepository requires manual conversion: does not exist in peer-type
+	// WARNING: in.ImageTag requires manual conversion: does not exist in peer-type
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
 func autoConvert_v1beta1_BottlerocketControl_To_v1beta2_BottlerocketControl(in *BottlerocketControl, out *v1beta2.BottlerocketControl, s conversion.Scope) error {
 	// WARNING: in.ImageMeta requires manual conversion: does not exist in peer-type
 	return nil
@@ -714,6 +753,23 @@ func autoConvert_v1beta2_BottlerocketControl_To_v1beta1_BottlerocketControl(in *
 	return nil
 }
 
+func autoConvert_v1beta1_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(in *BottlerocketHostContainer, out *v1beta2.BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	// WARNING: in.ImageMeta requires manual conversion: does not exist in peer-type
+	out.UserData = in.UserData
+	return nil
+}
+
+func autoConvert_v1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(in *v1beta2.BottlerocketHostContainer, out *BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	// WARNING: in.ImageRepository requires manual conversion: does not exist in peer-type
+	// WARNING: in.ImageTag requires manual conversion: does not exist in peer-type
+	out.UserData = in.UserData
+	return nil
+}
+
 func autoConvert_v1beta1_ClusterConfiguration_To_v1beta2_ClusterConfiguration(in *ClusterConfiguration, out *v1beta2.ClusterConfiguration, s conversion.Scope) error {
 	// WARNING: in.TypeMeta requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta1_Pause_To_v1beta2_Pause(&in.Pause, &out.Pause, s); err != nil {
@@ -725,6 +781,28 @@ func autoConvert_v1beta1_ClusterConfiguration_To_v1beta2_ClusterConfiguration(in
 	if err := Convert_v1beta1_BottlerocketControl_To_v1beta2_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
+	if in.BottlerocketHostContainers != nil {
+		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
+		*out = make([]v1beta2.BottlerocketHostContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta1_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketHostContainers = nil
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]v1beta2.BottlerocketBootstrapContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta1_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomBootstrapContainers = nil
+	}
 	if err := Convert_v1beta1_ProxyConfiguration_To_v1beta2_ProxyConfiguration(&in.Proxy, &out.Proxy, s); err != nil {
 		return err
 	}
@@ -772,6 +850,28 @@ func autoConvert_v1beta2_ClusterConfiguration_To_v1beta1_ClusterConfiguration(in
 	if err := Convert_v1beta2_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
 		return err
 	}
+	if in.BottlerocketHostContainers != nil {
+		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta2_BottlerocketHostContainer_To_v1beta1_BottlerocketHostContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketHostContainers = nil
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomBootstrapContainers = nil
+	}
 	if err := Convert_v1beta2_Etcd_To_v1beta1_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
 		return err
 	}
@@ -1187,6 +1287,18 @@ func autoConvert_v1beta1_JoinConfiguration_To_v1beta2_JoinConfiguration(in *Join
 	if err := Convert_v1beta1_BottlerocketControl_To_v1beta2_BottlerocketControl(&in.BottlerocketControl, &out.BottlerocketControl, s); err != nil {
 		return err
 	}
+	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]v1beta2.BottlerocketBootstrapContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta1_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomBootstrapContainers = nil
+	}
 	if err := Convert_v1beta1_ProxyConfiguration_To_v1beta2_ProxyConfiguration(&in.Proxy, &out.Proxy, s); err != nil {
 		return err
 	}
@@ -1222,6 +1334,18 @@ func autoConvert_v1beta2_JoinConfiguration_To_v1beta1_JoinConfiguration(in *v1be
 	if err := Convert_v1beta2_RegistryMirrorConfiguration_To_v1beta1_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
 		return err
 	}
+	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta2_BottlerocketBootstrapContainer_To_v1beta1_BottlerocketBootstrapContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomBootstrapContainers = nil
+	}
 	if err := Convert_v1beta2_NodeRegistrationOptions_To_v1beta1_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
 		return err
 	}
diff --git a/api/bootstrap/kubeadm/v1beta1/zz_generated.deepcopy.go b/api/bootstrap/kubeadm/v1beta1/zz_generated.deepcopy.go
index 204a72a7c..f666f7474 100644
--- a/api/bootstrap/kubeadm/v1beta1/zz_generated.deepcopy.go
+++ b/api/bootstrap/kubeadm/v1beta1/zz_generated.deepcopy.go
@@ -158,6 +158,22 @@ func (in *BottlerocketBootstrap) DeepCopy() *BottlerocketBootstrap {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketBootstrapContainer) DeepCopyInto(out *BottlerocketBootstrapContainer) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketBootstrapContainer.
+func (in *BottlerocketBootstrapContainer) DeepCopy() *BottlerocketBootstrapContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketBootstrapContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketControl) DeepCopyInto(out *BottlerocketControl) {
 	*out = *in
@@ -174,6 +190,22 @@ func (in *BottlerocketControl) DeepCopy() *BottlerocketControl {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketHostContainer) DeepCopyInto(out *BottlerocketHostContainer) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketHostContainer.
+func (in *BottlerocketHostContainer) DeepCopy() *BottlerocketHostContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketHostContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	*out = *in
@@ -181,6 +213,16 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.Pause = in.Pause
 	out.BottlerocketBootstrap = in.BottlerocketBootstrap
 	out.BottlerocketControl = in.BottlerocketControl
+	if in.BottlerocketHostContainers != nil {
+		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		copy(*out, *in)
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
 	in.Etcd.DeepCopyInto(&out.Etcd)
@@ -644,6 +686,16 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.Pause = in.Pause
 	out.BottlerocketBootstrap = in.BottlerocketBootstrap
 	out.BottlerocketControl = in.BottlerocketControl
+	if in.BottlerocketHostContainers != nil {
+		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		copy(*out, *in)
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
 	in.NodeRegistration.DeepCopyInto(&out.NodeRegistration)
diff --git a/api/bootstrap/kubeadm/v1beta2/kubeadm_types.go b/api/bootstrap/kubeadm/v1beta2/kubeadm_types.go
index 45f332763..be2200ac6 100644
--- a/api/bootstrap/kubeadm/v1beta2/kubeadm_types.go
+++ b/api/bootstrap/kubeadm/v1beta2/kubeadm_types.go
@@ -162,6 +162,16 @@ type ClusterConfiguration struct {
 	// +optional
 	RegistryMirror RegistryMirrorConfiguration `json:"registryMirror,omitempty"`
 
+	// BottlerocketHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+
 	// etcd holds configuration for etcd.
 	// NB: This value defaults to a Local (stacked) etcd
 	// +optional
@@ -304,6 +314,66 @@ type BottlerocketControl struct {
 	// TODO: evaluate if we need also a ImageName based on user feedbacks
 }
 
+// BottlerocketHostContainer describes a host image for Bottlerocket
+type BottlerocketHostContainer struct {
+	// Name is the host container name that will be given to the container in BR's `apiserver`
+	// +kubebuilder:validation:Required
+	Name string `json:"name"`
+	// Superpowered indicates if the container will be superpowered
+	// +kubebuilder:validation:Required
+	Superpowered bool `json:"superpowered"`
+	// imageRepository sets the container registry to pull images from.
+	// if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+	// +optional
+	// +kubebuilder:validation:MinLength=1
+	// +kubebuilder:validation:MaxLength=512
+	ImageRepository string `json:"imageRepository,omitempty"`
+
+	// imageTag allows to specify a tag for the image.
+	// In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+	// +optional
+	// +kubebuilder:validation:MinLength=1
+	// +kubebuilder:validation:MaxLength=256
+	ImageTag string `json:"imageTag,omitempty"`
+	// UserData is the userdata that will be attached to the image.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// imageRepository sets the container registry to pull images from.
+	// if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+	// +optional
+	// +kubebuilder:validation:MinLength=1
+	// +kubebuilder:validation:MaxLength=512
+	ImageRepository string `json:"imageRepository,omitempty"`
+
+	// imageTag allows to specify a tag for the image.
+	// In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+	// +optional
+	// +kubebuilder:validation:MinLength=1
+	// +kubebuilder:validation:MaxLength=256
+	ImageTag string `json:"imageTag,omitempty"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
 // ProxyConfiguration holds the settings for proxying bottlerocket services
 type ProxyConfiguration struct {
 	// HTTPS proxy
@@ -720,6 +790,15 @@ type JoinConfiguration struct {
 	// +optional
 	RegistryMirror RegistryMirrorConfiguration `json:"registryMirror,omitempty"`
 
+	// BottlerocketCustomHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketCustomHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
 	// nodeRegistration holds fields that relate to registering the new control-plane node to the cluster.
 	// When used in the context of control plane nodes, NodeRegistration should remain consistent
 	// across both InitConfiguration and JoinConfiguration
diff --git a/api/bootstrap/kubeadm/v1beta2/zz_generated.deepcopy.go b/api/bootstrap/kubeadm/v1beta2/zz_generated.deepcopy.go
index 651d5db17..221e15eb8 100644
--- a/api/bootstrap/kubeadm/v1beta2/zz_generated.deepcopy.go
+++ b/api/bootstrap/kubeadm/v1beta2/zz_generated.deepcopy.go
@@ -194,6 +194,21 @@ func (in *BottlerocketBootstrap) DeepCopy() *BottlerocketBootstrap {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketBootstrapContainer) DeepCopyInto(out *BottlerocketBootstrapContainer) {
+	*out = *in
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketBootstrapContainer.
+func (in *BottlerocketBootstrapContainer) DeepCopy() *BottlerocketBootstrapContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketBootstrapContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketControl) DeepCopyInto(out *BottlerocketControl) {
 	*out = *in
@@ -209,6 +224,21 @@ func (in *BottlerocketControl) DeepCopy() *BottlerocketControl {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketHostContainer) DeepCopyInto(out *BottlerocketHostContainer) {
+	*out = *in
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketHostContainer.
+func (in *BottlerocketHostContainer) DeepCopy() *BottlerocketHostContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketHostContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	*out = *in
@@ -217,6 +247,16 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
+	if in.BottlerocketHostContainers != nil {
+		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		copy(*out, *in)
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 	in.Etcd.DeepCopyInto(&out.Etcd)
 	in.APIServer.DeepCopyInto(&out.APIServer)
 	in.ControllerManager.DeepCopyInto(&out.ControllerManager)
@@ -585,6 +625,16 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 	out.BottlerocketControl = in.BottlerocketControl
 	in.Proxy.DeepCopyInto(&out.Proxy)
 	out.RegistryMirror = in.RegistryMirror
+	if in.BottlerocketCustomHostContainers != nil {
+		in, out := &in.BottlerocketCustomHostContainers, &out.BottlerocketCustomHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		copy(*out, *in)
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 	in.NodeRegistration.DeepCopyInto(&out.NodeRegistration)
 	in.Discovery.DeepCopyInto(&out.Discovery)
 	if in.ControlPlane != nil {
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
index e63416d8d..941ea493a 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigs.yaml
@@ -1144,6 +1144,90 @@ spec:
                           In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            imageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          type: string
+                        imageTag:
+                          description: |-
+                            imageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
+                  bottlerocketCustomHostContainers:
+                    description: |-
+                      BottlerocketHostContainers contains the information of any additional images
+                      that we will deploy as host containers in the CPIs
+                    items:
+                      description: BottlerocketHostContainer describes a host image
+                        for Bottlerocket
+                      properties:
+                        name:
+                          description: Name is the host container name that will be
+                            given to the container in BR's `apiserver`
+                          type: string
+                        source:
+                          description: ImageMeta is the actual location of the container
+                            image
+                          properties:
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                          type: object
+                        superpowered:
+                          description: Superpowered indicates if the container will
+                            be superpowered
+                          type: boolean
+                        userData:
+                          description: UserData is the userdata that will be attached
+                            to the image.
+                          type: string
+                      required:
+                      - name
+                      - source
+                      - superpowered
+                      type: object
+                    type: array
                   certificatesDir:
                     description: |-
                       certificatesDir specifies where to store or look for all required certificates.
@@ -1774,6 +1858,90 @@ spec:
                           In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            imageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          type: string
+                        imageTag:
+                          description: |-
+                            imageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
+                  bottlerocketCustomHostContainers:
+                    description: |-
+                      BottlerocketCustomHostContainers contains the information of any additional images
+                      that we will deploy as host containers in the CPIs
+                    items:
+                      description: BottlerocketHostContainer describes a host image
+                        for Bottlerocket
+                      properties:
+                        name:
+                          description: Name is the host container name that will be
+                            given to the container in BR's `apiserver`
+                          type: string
+                        source:
+                          description: ImageMeta is the actual location of the container
+                            image
+                          properties:
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                          type: object
+                        superpowered:
+                          description: Superpowered indicates if the container will
+                            be superpowered
+                          type: boolean
+                        userData:
+                          description: UserData is the userdata that will be attached
+                            to the image.
+                          type: string
+                      required:
+                      - name
+                      - source
+                      - superpowered
+                      type: object
+                    type: array
                   caCertPath:
                     description: |-
                       caCertPath is the path to the SSL certificate authority used to
@@ -2441,6 +2609,98 @@ spec:
                         minLength: 1
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            imageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          maxLength: 512
+                          minLength: 1
+                          type: string
+                        imageTag:
+                          description: |-
+                            imageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          maxLength: 256
+                          minLength: 1
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
+                  bottlerocketCustomHostContainers:
+                    description: |-
+                      BottlerocketHostContainers contains the information of any additional images
+                      that we will deploy as host containers in the CPIs
+                    items:
+                      description: BottlerocketHostContainer describes a host image
+                        for Bottlerocket
+                      properties:
+                        name:
+                          description: Name is the host container name that will be
+                            given to the container in BR's `apiserver`
+                          type: string
+                        source:
+                          description: ImageMeta is the actual location of the container
+                            image
+                          properties:
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              maxLength: 512
+                              minLength: 1
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                          type: object
+                        superpowered:
+                          description: Superpowered indicates if the container will
+                            be superpowered
+                          type: boolean
+                        userData:
+                          description: UserData is the userdata that will be attached
+                            to the image.
+                          type: string
+                      required:
+                      - name
+                      - source
+                      - superpowered
+                      type: object
+                    type: array
                   certificatesDir:
                     description: |-
                       certificatesDir specifies where to store or look for all required certificates.
@@ -3645,6 +3905,98 @@ spec:
                         minLength: 1
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            imageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          maxLength: 512
+                          minLength: 1
+                          type: string
+                        imageTag:
+                          description: |-
+                            imageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          maxLength: 256
+                          minLength: 1
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
+                  bottlerocketCustomHostContainers:
+                    description: |-
+                      BottlerocketHostContainers contains the information of any additional images
+                      that we will deploy as host containers in the CPIs
+                    items:
+                      description: BottlerocketHostContainer describes a host image
+                        for Bottlerocket
+                      properties:
+                        name:
+                          description: Name is the host container name that will be
+                            given to the container in BR's `apiserver`
+                          type: string
+                        source:
+                          description: ImageMeta is the actual location of the container
+                            image
+                          properties:
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              maxLength: 512
+                              minLength: 1
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                          type: object
+                        superpowered:
+                          description: Superpowered indicates if the container will
+                            be superpowered
+                          type: boolean
+                        userData:
+                          description: UserData is the userdata that will be attached
+                            to the image.
+                          type: string
+                      required:
+                      - name
+                      - source
+                      - superpowered
+                      type: object
+                    type: array
                   caCertPath:
                     description: |-
                       caCertPath is the path to the SSL certificate authority used to
@@ -4730,6 +5082,92 @@ spec:
                         minLength: 1
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            imageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          maxLength: 512
+                          minLength: 1
+                          type: string
+                        imageTag:
+                          description: |-
+                            imageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          maxLength: 256
+                          minLength: 1
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
+                  bottlerocketCustomHostContainers:
+                    description: |-
+                      BottlerocketHostContainers contains the information of any additional images
+                      that we will deploy as host containers in the CPIs
+                    items:
+                      description: BottlerocketHostContainer describes a host image
+                        for Bottlerocket
+                      properties:
+                        imageRepository:
+                          description: |-
+                            imageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          maxLength: 512
+                          minLength: 1
+                          type: string
+                        imageTag:
+                          description: |-
+                            imageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          maxLength: 256
+                          minLength: 1
+                          type: string
+                        name:
+                          description: Name is the host container name that will be
+                            given to the container in BR's `apiserver`
+                          type: string
+                        superpowered:
+                          description: Superpowered indicates if the container will
+                            be superpowered
+                          type: boolean
+                        userData:
+                          description: UserData is the userdata that will be attached
+                            to the image.
+                          type: string
+                      required:
+                      - name
+                      - superpowered
+                      type: object
+                    type: array
                   caCertificateValidityPeriodDays:
                     description: |-
                       caCertificateValidityPeriodDays specifies the validity period for CA certificates generated by Cluster API.
@@ -6093,6 +6531,92 @@ spec:
                         minLength: 1
                         type: string
                     type: object
+                  bottlerocketCustomBootstrapContainers:
+                    description: |-
+                      BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                      This is only for bottlerocket.
+                    items:
+                      description: BottlerocketBootstrapContainer holds the bootstrap
+                        container setting for Bottlerocket
+                      properties:
+                        essential:
+                          description: |-
+                            Essential decides whether or not the container should fail the boot process.
+                            Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                            Default is false.
+                          type: boolean
+                        imageRepository:
+                          description: |-
+                            imageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          maxLength: 512
+                          minLength: 1
+                          type: string
+                        imageTag:
+                          description: |-
+                            imageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          maxLength: 256
+                          minLength: 1
+                          type: string
+                        mode:
+                          description: Mode represents the bootstrap container mode.
+                          enum:
+                          - always
+                          - "off"
+                          - once
+                          type: string
+                        name:
+                          description: Name is the bootstrap container name that will
+                            be given to the container in BR's `apiserver`.
+                          type: string
+                        userData:
+                          description: UserData is the base64-encoded userdata.
+                          type: string
+                      required:
+                      - mode
+                      - name
+                      type: object
+                    type: array
+                  bottlerocketCustomHostContainers:
+                    description: |-
+                      BottlerocketCustomHostContainers contains the information of any additional images
+                      that we will deploy as host containers in the CPIs
+                    items:
+                      description: BottlerocketHostContainer describes a host image
+                        for Bottlerocket
+                      properties:
+                        imageRepository:
+                          description: |-
+                            imageRepository sets the container registry to pull images from.
+                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                          maxLength: 512
+                          minLength: 1
+                          type: string
+                        imageTag:
+                          description: |-
+                            imageTag allows to specify a tag for the image.
+                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                          maxLength: 256
+                          minLength: 1
+                          type: string
+                        name:
+                          description: Name is the host container name that will be
+                            given to the container in BR's `apiserver`
+                          type: string
+                        superpowered:
+                          description: Superpowered indicates if the container will
+                            be superpowered
+                          type: boolean
+                        userData:
+                          description: UserData is the userdata that will be attached
+                            to the image.
+                          type: string
+                      required:
+                      - name
+                      - superpowered
+                      type: object
+                    type: array
                   caCertPath:
                     description: |-
                       caCertPath is the path to the SSL certificate authority used to
diff --git a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
index 4196f29ce..49142c9f7 100644
--- a/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
+++ b/bootstrap/kubeadm/config/crd/bases/bootstrap.cluster.x-k8s.io_kubeadmconfigtemplates.yaml
@@ -1107,6 +1107,91 @@ spec:
                                   In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
+                          bottlerocketCustomHostContainers:
+                            description: |-
+                              BottlerocketHostContainers contains the information of any additional images
+                              that we will deploy as host containers in the CPIs
+                            items:
+                              description: BottlerocketHostContainer describes a host
+                                image for Bottlerocket
+                              properties:
+                                name:
+                                  description: Name is the host container name that
+                                    will be given to the container in BR's `apiserver`
+                                  type: string
+                                source:
+                                  description: ImageMeta is the actual location of
+                                    the container image
+                                  properties:
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      type: string
+                                  type: object
+                                superpowered:
+                                  description: Superpowered indicates if the container
+                                    will be superpowered
+                                  type: boolean
+                                userData:
+                                  description: UserData is the userdata that will
+                                    be attached to the image.
+                                  type: string
+                              required:
+                              - name
+                              - source
+                              - superpowered
+                              type: object
+                            type: array
                           certificatesDir:
                             description: |-
                               certificatesDir specifies where to store or look for all required certificates.
@@ -1752,6 +1837,91 @@ spec:
                                   In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
+                          bottlerocketCustomHostContainers:
+                            description: |-
+                              BottlerocketCustomHostContainers contains the information of any additional images
+                              that we will deploy as host containers in the CPIs
+                            items:
+                              description: BottlerocketHostContainer describes a host
+                                image for Bottlerocket
+                              properties:
+                                name:
+                                  description: Name is the host container name that
+                                    will be given to the container in BR's `apiserver`
+                                  type: string
+                                source:
+                                  description: ImageMeta is the actual location of
+                                    the container image
+                                  properties:
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      type: string
+                                  type: object
+                                superpowered:
+                                  description: Superpowered indicates if the container
+                                    will be superpowered
+                                  type: boolean
+                                userData:
+                                  description: UserData is the userdata that will
+                                    be attached to the image.
+                                  type: string
+                              required:
+                              - name
+                              - source
+                              - superpowered
+                              type: object
+                            type: array
                           caCertPath:
                             description: |-
                               caCertPath is the path to the SSL certificate authority used to
@@ -2398,6 +2568,99 @@ spec:
                                 minLength: 1
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  maxLength: 512
+                                  minLength: 1
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  maxLength: 256
+                                  minLength: 1
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
+                          bottlerocketCustomHostContainers:
+                            description: |-
+                              BottlerocketHostContainers contains the information of any additional images
+                              that we will deploy as host containers in the CPIs
+                            items:
+                              description: BottlerocketHostContainer describes a host
+                                image for Bottlerocket
+                              properties:
+                                name:
+                                  description: Name is the host container name that
+                                    will be given to the container in BR's `apiserver`
+                                  type: string
+                                source:
+                                  description: ImageMeta is the actual location of
+                                    the container image
+                                  properties:
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      maxLength: 512
+                                      minLength: 1
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      maxLength: 256
+                                      minLength: 1
+                                      type: string
+                                  type: object
+                                superpowered:
+                                  description: Superpowered indicates if the container
+                                    will be superpowered
+                                  type: boolean
+                                userData:
+                                  description: UserData is the userdata that will
+                                    be attached to the image.
+                                  type: string
+                              required:
+                              - name
+                              - source
+                              - superpowered
+                              type: object
+                            type: array
                           certificatesDir:
                             description: |-
                               certificatesDir specifies where to store or look for all required certificates.
@@ -3632,6 +3895,99 @@ spec:
                                 minLength: 1
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  maxLength: 512
+                                  minLength: 1
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  maxLength: 256
+                                  minLength: 1
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
+                          bottlerocketCustomHostContainers:
+                            description: |-
+                              BottlerocketHostContainers contains the information of any additional images
+                              that we will deploy as host containers in the CPIs
+                            items:
+                              description: BottlerocketHostContainer describes a host
+                                image for Bottlerocket
+                              properties:
+                                name:
+                                  description: Name is the host container name that
+                                    will be given to the container in BR's `apiserver`
+                                  type: string
+                                source:
+                                  description: ImageMeta is the actual location of
+                                    the container image
+                                  properties:
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      maxLength: 512
+                                      minLength: 1
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      maxLength: 256
+                                      minLength: 1
+                                      type: string
+                                  type: object
+                                superpowered:
+                                  description: Superpowered indicates if the container
+                                    will be superpowered
+                                  type: boolean
+                                userData:
+                                  description: UserData is the userdata that will
+                                    be attached to the image.
+                                  type: string
+                              required:
+                              - name
+                              - source
+                              - superpowered
+                              type: object
+                            type: array
                           caCertPath:
                             description: |-
                               caCertPath is the path to the SSL certificate authority used to
@@ -4613,6 +4969,93 @@ spec:
                                 minLength: 1
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  maxLength: 512
+                                  minLength: 1
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  maxLength: 256
+                                  minLength: 1
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
+                          bottlerocketCustomHostContainers:
+                            description: |-
+                              BottlerocketHostContainers contains the information of any additional images
+                              that we will deploy as host containers in the CPIs
+                            items:
+                              description: BottlerocketHostContainer describes a host
+                                image for Bottlerocket
+                              properties:
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  maxLength: 512
+                                  minLength: 1
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  maxLength: 256
+                                  minLength: 1
+                                  type: string
+                                name:
+                                  description: Name is the host container name that
+                                    will be given to the container in BR's `apiserver`
+                                  type: string
+                                superpowered:
+                                  description: Superpowered indicates if the container
+                                    will be superpowered
+                                  type: boolean
+                                userData:
+                                  description: UserData is the userdata that will
+                                    be attached to the image.
+                                  type: string
+                              required:
+                              - name
+                              - superpowered
+                              type: object
+                            type: array
                           caCertificateValidityPeriodDays:
                             description: |-
                               caCertificateValidityPeriodDays specifies the validity period for CA certificates generated by Cluster API.
@@ -6005,6 +6448,93 @@ spec:
                                 minLength: 1
                                 type: string
                             type: object
+                          bottlerocketCustomBootstrapContainers:
+                            description: |-
+                              BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                              This is only for bottlerocket.
+                            items:
+                              description: BottlerocketBootstrapContainer holds the
+                                bootstrap container setting for Bottlerocket
+                              properties:
+                                essential:
+                                  description: |-
+                                    Essential decides whether or not the container should fail the boot process.
+                                    Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                    Default is false.
+                                  type: boolean
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  maxLength: 512
+                                  minLength: 1
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  maxLength: 256
+                                  minLength: 1
+                                  type: string
+                                mode:
+                                  description: Mode represents the bootstrap container
+                                    mode.
+                                  enum:
+                                  - always
+                                  - "off"
+                                  - once
+                                  type: string
+                                name:
+                                  description: Name is the bootstrap container name
+                                    that will be given to the container in BR's `apiserver`.
+                                  type: string
+                                userData:
+                                  description: UserData is the base64-encoded userdata.
+                                  type: string
+                              required:
+                              - mode
+                              - name
+                              type: object
+                            type: array
+                          bottlerocketCustomHostContainers:
+                            description: |-
+                              BottlerocketCustomHostContainers contains the information of any additional images
+                              that we will deploy as host containers in the CPIs
+                            items:
+                              description: BottlerocketHostContainer describes a host
+                                image for Bottlerocket
+                              properties:
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  maxLength: 512
+                                  minLength: 1
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  maxLength: 256
+                                  minLength: 1
+                                  type: string
+                                name:
+                                  description: Name is the host container name that
+                                    will be given to the container in BR's `apiserver`
+                                  type: string
+                                superpowered:
+                                  description: Superpowered indicates if the container
+                                    will be superpowered
+                                  type: boolean
+                                userData:
+                                  description: UserData is the userdata that will
+                                    be attached to the image.
+                                  type: string
+                              required:
+                              - name
+                              - superpowered
+                              type: object
+                            type: array
                           caCertPath:
                             description: |-
                               caCertPath is the path to the SSL certificate authority used to
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
index f8f1b97cb..04fb96221 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bootstrap.go
@@ -3,12 +3,6 @@
 package bottlerocket
 
 const (
-	adminContainerInitTemplate = `{{ define "adminContainerInitSettings" -}}
-[settings.host-containers.admin]
-enabled = true
-user-data = "{{.AdminContainerUserData}}"
-{{- end -}}
-`
 	kubernetesInitTemplate = `{{ define "kubernetesInitSettings" -}}
 [settings.kubernetes]
 cluster-domain = "cluster.local"
@@ -16,17 +10,52 @@ standalone-mode = true
 authentication-mode = "tls"
 server-tls-bootstrap = false
 pod-infra-container-image = "{{.PauseContainerSource}}"
+{{- if (ne .ProviderId "")}}
+provider-id = "{{.ProviderId}}"
+{{- end -}}
 {{- end -}}
 `
 
-	bootstrapHostContainerTemplate = `{{define "bootstrapHostContainerSettings" -}}
-[settings.host-containers.kubeadm-bootstrap]
+	hostContainerTemplate = `{{define "hostContainerSettings" -}}
+[settings.host-containers.{{.Name}}]
 enabled = true
-superpowered = true
-source = "{{.BootstrapContainerSource}}"
-user-data = "{{.BootstrapContainerUserData}}"
+superpowered = {{.Superpowered}}
+{{- if (ne (imageURL .ImageRepository .ImageTag) "")}}
+source = "{{imageURL .ImageRepository .ImageTag}}"
+{{- end -}}
+{{- if (ne .UserData "")}}
+user-data = "{{.UserData}}"
+{{- end -}}
+{{- end -}}
+`
+
+	hostContainerSliceTemplate = `{{define "hostContainerSlice" -}}
+{{- range $hContainer := .HostContainers }}
+{{template "hostContainerSettings" $hContainer }}
+{{- end -}}
+{{- end -}}
+`
+
+	bootstrapContainerTemplate = `{{ define "bootstrapContainerSettings" -}}
+[settings.bootstrap-containers.{{.Name}}]
+essential = {{.Essential}}
+mode = "{{.Mode}}"
+{{- if (ne (imageURL .ImageRepository .ImageTag) "")}}
+source = "{{imageURL .ImageRepository .ImageTag}}"
+{{- end -}}
+{{- if (ne .UserData "")}}
+user-data = "{{.UserData}}"
+{{- end -}}
 {{- end -}}
 `
+
+	bootstrapContainerSliceTemplate = `{{ define "bootstrapContainerSlice" -}}
+{{- range $bContainer := .BootstrapContainers }}
+{{template "bootstrapContainerSettings" $bContainer }}
+{{- end -}}
+{{- end -}}
+`
+
 	networkInitTemplate = `{{ define "networkInitSettings" -}}
 [settings.network]
 https-proxy = "{{.HTTPSProxyEndpoint}}"
@@ -55,20 +84,14 @@ trusted=true
 {{- end -}}
 `
 
-	controlContainerTemplate = `{{ define "controlContainerSettings" -}}
-[settings.host-containers.control]
-enabled = true
-superpowered = false
-source = "{{.ControlContainerSource}}"
-{{- end -}}
-`
-
-	bottlerocketNodeInitSettingsTemplate = `{{template "bootstrapHostContainerSettings" .}}
-
-{{template "adminContainerInitSettings" .}}
+	bottlerocketNodeInitSettingsTemplate = `{{template "hostContainerSlice" .}}
 
 {{template "kubernetesInitSettings" .}}
 
+{{- if .BootstrapContainers}}
+{{template "bootstrapContainerSlice" .}}
+{{- end -}}
+
 {{- if (ne .HTTPSProxyEndpoint "")}}
 {{template "networkInitSettings" .}}
 {{- end -}}
@@ -88,9 +111,5 @@ source = "{{.ControlContainerSource}}"
 {{- if (ne .Taints "")}}
 {{template "taintsTemplate" .}}
 {{- end -}}
-
-{{- if (ne .ControlContainerSource "")}}
-{{template "controlContainerSettings" .}}
-{{- end -}}
 `
 )
diff --git a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
index 1acdd341f..473050b6d 100644
--- a/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
+++ b/bootstrap/kubeadm/internal/bottlerocket/bottlerocket.go
@@ -23,13 +23,15 @@ const (
 )
 
 type BottlerocketConfig struct {
-	Pause                       bootstrapv1.Pause
-	BottlerocketBootstrap       bootstrapv1.BottlerocketBootstrap
-	BottlerocketControl         bootstrapv1.BottlerocketControl
-	ProxyConfiguration          bootstrapv1.ProxyConfiguration
-	RegistryMirrorConfiguration bootstrapv1.RegistryMirrorConfiguration
-	KubeletExtraArgs            []bootstrapv1.Arg
-	Taints                      []corev1.Taint
+	Pause                                 bootstrapv1.Pause
+	BottlerocketBootstrap                 bootstrapv1.BottlerocketBootstrap
+	BottlerocketControl                   bootstrapv1.BottlerocketControl
+	ProxyConfiguration                    bootstrapv1.ProxyConfiguration
+	RegistryMirrorConfiguration           bootstrapv1.RegistryMirrorConfiguration
+	KubeletExtraArgs                      []bootstrapv1.Arg
+	Taints                                []corev1.Taint
+	BottlerocketCustomHostContainers      []bootstrapv1.BottlerocketHostContainer
+	BottlerocketCustomBootstrapContainers []bootstrapv1.BottlerocketBootstrapContainer
 }
 
 type BottlerocketSettingsInput struct {
@@ -44,6 +46,9 @@ type BottlerocketSettingsInput struct {
 	RegistryMirrorCACert       string
 	NodeLabels                 string
 	Taints                     string
+	ProviderId                 string
+	HostContainers             []bootstrapv1.BottlerocketHostContainer
+	BootstrapContainers        []bootstrapv1.BottlerocketBootstrapContainer
 }
 
 type HostPath struct {
@@ -86,16 +91,29 @@ func generateAdminContainerUserData(kind string, tpl string, data interface{}) (
 	return out.Bytes(), nil
 }
 
+func imageURL(imageRepository string, imageTag string) string {
+	if imageRepository != "" && imageTag != "" {
+		return fmt.Sprintf("%s:%s", imageRepository, imageTag)
+	}
+	return ""
+}
+
 func generateNodeUserData(kind string, tpl string, data interface{}) ([]byte, error) {
-	tm := template.New(kind).Funcs(template.FuncMap{"stringsJoin": strings.Join})
-	if _, err := tm.Parse(bootstrapHostContainerTemplate); err != nil {
-		return nil, errors.Wrapf(err, "failed to parse hostContainer %s template", kind)
+	tm := template.New(kind).Funcs(template.FuncMap{
+		"stringsJoin": strings.Join,
+		"imageURL":    imageURL,
+	})
+	if _, err := tm.Parse(hostContainerTemplate); err != nil {
+		return nil, errors.Wrapf(err, "failed to parse hostContainerSettings %s template", kind)
+	}
+	if _, err := tm.Parse(hostContainerSliceTemplate); err != nil {
+		return nil, errors.Wrapf(err, "failed to parse hostContainerSettingsSlice %s template", kind)
 	}
-	if _, err := tm.Parse(adminContainerInitTemplate); err != nil {
-		return nil, errors.Wrapf(err, "failed to parse adminContainer %s template", kind)
+	if _, err := tm.Parse(bootstrapContainerTemplate); err != nil {
+		return nil, errors.Wrapf(err, "failed to parse bootstrapContainerSettings %s template", kind)
 	}
-	if _, err := tm.Parse(controlContainerTemplate); err != nil {
-		return nil, errors.Wrapf(err, "failed to parse controlContainer %s template", kind)
+	if _, err := tm.Parse(bootstrapContainerSliceTemplate); err != nil {
+		return nil, errors.Wrapf(err, "failed to parse bootstrapContainerSettingsSlice %s template", kind)
 	}
 	if _, err := tm.Parse(kubernetesInitTemplate); err != nil {
 		return nil, errors.Wrapf(err, "failed to parse kubernetes %s template", kind)
@@ -142,19 +160,44 @@ func getBottlerocketNodeUserData(bootstrapContainerUserData []byte, users []boot
 	}
 	b64AdminContainerUserData := base64.StdEncoding.EncodeToString(adminContainerUserData)
 
-	bottlerocketInput := &BottlerocketSettingsInput{
-		BootstrapContainerUserData: b64BootstrapContainerUserData,
-		AdminContainerUserData:     b64AdminContainerUserData,
-		BootstrapContainerSource:   fmt.Sprintf("%s:%s", config.BottlerocketBootstrap.ImageRepository, config.BottlerocketBootstrap.ImageTag),
-		PauseContainerSource:       fmt.Sprintf("%s:%s", config.Pause.ImageRepository, config.Pause.ImageTag),
-		HTTPSProxyEndpoint:         config.ProxyConfiguration.HTTPSProxy,
-		RegistryMirrorEndpoint:     config.RegistryMirrorConfiguration.Endpoint,
-		NodeLabels:                 parseNodeLabels(getArgValue(config.KubeletExtraArgs, "node-labels")), // empty string if it does not exist
-		Taints:                     parseTaints(config.Taints),                                           //empty string if it does not exist
+	hostContainers := []bootstrapv1.BottlerocketHostContainer{
+		{
+			Name:         "admin",
+			Superpowered: true,
+			UserData:     b64AdminContainerUserData,
+		},
+		{
+			Name:            "kubeadm-bootstrap",
+			Superpowered:    true,
+			ImageRepository: config.BottlerocketBootstrap.ImageRepository,
+			ImageTag:        config.BottlerocketBootstrap.ImageTag,
+			UserData:        b64BootstrapContainerUserData,
+		},
 	}
 
 	if config.BottlerocketControl.ImageRepository != "" && config.BottlerocketControl.ImageTag != "" {
-		bottlerocketInput.ControlContainerSource = fmt.Sprintf("%s:%s", config.BottlerocketControl.ImageRepository, config.BottlerocketControl.ImageTag)
+		hostContainers = append(hostContainers, bootstrapv1.BottlerocketHostContainer{
+			Name:            "control",
+			Superpowered:    false,
+			ImageRepository: config.BottlerocketControl.ImageRepository,
+			ImageTag:        config.BottlerocketControl.ImageTag,
+		})
+	}
+
+	if len(config.BottlerocketCustomHostContainers) != 0 {
+		hostContainers = append(hostContainers, config.BottlerocketCustomHostContainers...)
+	}
+
+	bottlerocketInput := &BottlerocketSettingsInput{
+		BootstrapContainerSource: fmt.Sprintf("%s:%s", config.BottlerocketBootstrap.ImageRepository, config.BottlerocketBootstrap.ImageTag),
+		PauseContainerSource:     fmt.Sprintf("%s:%s", config.Pause.ImageRepository, config.Pause.ImageTag),
+		HTTPSProxyEndpoint:       config.ProxyConfiguration.HTTPSProxy,
+		RegistryMirrorEndpoint:   config.RegistryMirrorConfiguration.Endpoint,
+		NodeLabels:               parseNodeLabels(getArgValue(config.KubeletExtraArgs, "node-labels")), // empty string if it does not exist
+		Taints:                   parseTaints(config.Taints),                                           //empty string if it does not exist
+		ProviderId:               getArgValue(config.KubeletExtraArgs, "provider-id"),
+		HostContainers:           hostContainers,
+		BootstrapContainers:      config.BottlerocketCustomBootstrapContainers,
 	}
 
 	if len(config.ProxyConfiguration.NoProxy) > 0 {
diff --git a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
index a3dbac817..fc33dbbd6 100644
--- a/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
+++ b/bootstrap/kubeadm/internal/controllers/kubeadmconfig_controller.go
@@ -563,9 +563,11 @@ func (r *KubeadmConfigReconciler) handleClusterNotInitialized(ctx context.Contex
 			},
 		}
 		bottlerocketConfig = &bottlerocket.BottlerocketConfig{
-			Pause:                 scope.Config.Spec.ClusterConfiguration.Pause,
-			BottlerocketBootstrap: scope.Config.Spec.ClusterConfiguration.BottlerocketBootstrap,
-			BottlerocketControl:   scope.Config.Spec.ClusterConfiguration.BottlerocketControl,
+			Pause:                                 scope.Config.Spec.ClusterConfiguration.Pause,
+			BottlerocketBootstrap:                 scope.Config.Spec.ClusterConfiguration.BottlerocketBootstrap,
+			BottlerocketControl:                   scope.Config.Spec.ClusterConfiguration.BottlerocketControl,
+			BottlerocketCustomHostContainers:      scope.Config.Spec.ClusterConfiguration.BottlerocketHostContainers,
+			BottlerocketCustomBootstrapContainers: scope.Config.Spec.ClusterConfiguration.BottlerocketCustomBootstrapContainers,
 		}
 		if scope.Config.Spec.ClusterConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.ClusterConfiguration.Proxy
@@ -866,9 +868,11 @@ func (r *KubeadmConfigReconciler) joinWorker(ctx context.Context, scope *Scope)
 		})
 	case bootstrapv1.Bottlerocket:
 		bottlerocketConfig := &bottlerocket.BottlerocketConfig{
-			Pause:                 scope.Config.Spec.JoinConfiguration.Pause,
-			BottlerocketBootstrap: scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
-			BottlerocketControl:   scope.Config.Spec.JoinConfiguration.BottlerocketControl,
+			Pause:                                 scope.Config.Spec.JoinConfiguration.Pause,
+			BottlerocketBootstrap:                 scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
+			BottlerocketControl:                   scope.Config.Spec.JoinConfiguration.BottlerocketControl,
+			BottlerocketCustomHostContainers:      scope.Config.Spec.JoinConfiguration.BottlerocketCustomHostContainers,
+			BottlerocketCustomBootstrapContainers: scope.Config.Spec.JoinConfiguration.BottlerocketCustomBootstrapContainers,
 		}
 		if scope.Config.Spec.JoinConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.JoinConfiguration.Proxy
@@ -1050,9 +1054,11 @@ func (r *KubeadmConfigReconciler) joinControlplane(ctx context.Context, scope *S
 		})
 	case bootstrapv1.Bottlerocket:
 		bottlerocketConfig := &bottlerocket.BottlerocketConfig{
-			Pause:                 scope.Config.Spec.JoinConfiguration.Pause,
-			BottlerocketBootstrap: scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
-			BottlerocketControl:   scope.Config.Spec.JoinConfiguration.BottlerocketControl,
+			Pause:                                 scope.Config.Spec.JoinConfiguration.Pause,
+			BottlerocketBootstrap:                 scope.Config.Spec.JoinConfiguration.BottlerocketBootstrap,
+			BottlerocketControl:                   scope.Config.Spec.JoinConfiguration.BottlerocketControl,
+			BottlerocketCustomHostContainers:      scope.Config.Spec.JoinConfiguration.BottlerocketCustomHostContainers,
+			BottlerocketCustomBootstrapContainers: scope.Config.Spec.JoinConfiguration.BottlerocketCustomBootstrapContainers,
 		}
 		if scope.Config.Spec.JoinConfiguration.Proxy.HTTPSProxy != "" {
 			bottlerocketConfig.ProxyConfiguration = scope.Config.Spec.JoinConfiguration.Proxy
diff --git a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
index 6ad00f074..ca5df4529 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta3/zz_generated.conversion.go
@@ -480,6 +480,8 @@ func autoConvert_v1beta2_ClusterConfiguration_To_upstreamv1beta3_ClusterConfigur
 	if err := Convert_v1beta2_RegistryMirrorConfiguration_To_upstreamv1beta3_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
 		return err
 	}
+	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta2_Etcd_To_upstreamv1beta3_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
 		return err
 	}
@@ -719,6 +721,8 @@ func autoConvert_v1beta2_JoinConfiguration_To_upstreamv1beta3_JoinConfiguration(
 	if err := Convert_v1beta2_RegistryMirrorConfiguration_To_upstreamv1beta3_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
 		return err
 	}
+	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta2_NodeRegistrationOptions_To_upstreamv1beta3_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
 		return err
 	}
diff --git a/bootstrap/kubeadm/types/upstreamv1beta4/zz_generated.conversion.go b/bootstrap/kubeadm/types/upstreamv1beta4/zz_generated.conversion.go
index eabb9d4be..9683f8959 100644
--- a/bootstrap/kubeadm/types/upstreamv1beta4/zz_generated.conversion.go
+++ b/bootstrap/kubeadm/types/upstreamv1beta4/zz_generated.conversion.go
@@ -508,6 +508,8 @@ func autoConvert_v1beta2_ClusterConfiguration_To_upstreamv1beta4_ClusterConfigur
 		return err
 	}
 	// WARNING: in.RegistryMirror requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta2_Etcd_To_upstreamv1beta4_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
 		return err
 	}
@@ -764,6 +766,8 @@ func autoConvert_v1beta2_JoinConfiguration_To_upstreamv1beta4_JoinConfiguration(
 		return err
 	}
 	// WARNING: in.RegistryMirror requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta2_NodeRegistrationOptions_To_upstreamv1beta4_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
 		return err
 	}
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
index 24cfffa8a..8b36ca0e5 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanes.yaml
@@ -1372,6 +1372,91 @@ spec:
                               In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
+                      bottlerocketCustomHostContainers:
+                        description: |-
+                          BottlerocketHostContainers contains the information of any additional images
+                          that we will deploy as host containers in the CPIs
+                        items:
+                          description: BottlerocketHostContainer describes a host
+                            image for Bottlerocket
+                          properties:
+                            name:
+                              description: Name is the host container name that will
+                                be given to the container in BR's `apiserver`
+                              type: string
+                            source:
+                              description: ImageMeta is the actual location of the
+                                container image
+                              properties:
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                              type: object
+                            superpowered:
+                              description: Superpowered indicates if the container
+                                will be superpowered
+                              type: boolean
+                            userData:
+                              description: UserData is the userdata that will be attached
+                                to the image.
+                              type: string
+                          required:
+                          - name
+                          - source
+                          - superpowered
+                          type: object
+                        type: array
                       certificatesDir:
                         description: |-
                           certificatesDir specifies where to store or look for all required certificates.
@@ -2012,6 +2097,91 @@ spec:
                               In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
+                      bottlerocketCustomHostContainers:
+                        description: |-
+                          BottlerocketCustomHostContainers contains the information of any additional images
+                          that we will deploy as host containers in the CPIs
+                        items:
+                          description: BottlerocketHostContainer describes a host
+                            image for Bottlerocket
+                          properties:
+                            name:
+                              description: Name is the host container name that will
+                                be given to the container in BR's `apiserver`
+                              type: string
+                            source:
+                              description: ImageMeta is the actual location of the
+                                container image
+                              properties:
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  type: string
+                              type: object
+                            superpowered:
+                              description: Superpowered indicates if the container
+                                will be superpowered
+                              type: boolean
+                            userData:
+                              description: UserData is the userdata that will be attached
+                                to the image.
+                              type: string
+                          required:
+                          - name
+                          - source
+                          - superpowered
+                          type: object
+                        type: array
                       caCertPath:
                         description: |-
                           caCertPath is the path to the SSL certificate authority used to
@@ -2918,6 +3088,99 @@ spec:
                             minLength: 1
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              maxLength: 512
+                              minLength: 1
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
+                      bottlerocketCustomHostContainers:
+                        description: |-
+                          BottlerocketHostContainers contains the information of any additional images
+                          that we will deploy as host containers in the CPIs
+                        items:
+                          description: BottlerocketHostContainer describes a host
+                            image for Bottlerocket
+                          properties:
+                            name:
+                              description: Name is the host container name that will
+                                be given to the container in BR's `apiserver`
+                              type: string
+                            source:
+                              description: ImageMeta is the actual location of the
+                                container image
+                              properties:
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  maxLength: 512
+                                  minLength: 1
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  maxLength: 256
+                                  minLength: 1
+                                  type: string
+                              type: object
+                            superpowered:
+                              description: Superpowered indicates if the container
+                                will be superpowered
+                              type: boolean
+                            userData:
+                              description: UserData is the userdata that will be attached
+                                to the image.
+                              type: string
+                          required:
+                          - name
+                          - source
+                          - superpowered
+                          type: object
+                        type: array
                       certificatesDir:
                         description: |-
                           certificatesDir specifies where to store or look for all required certificates.
@@ -4137,6 +4400,99 @@ spec:
                             minLength: 1
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              maxLength: 512
+                              minLength: 1
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
+                      bottlerocketCustomHostContainers:
+                        description: |-
+                          BottlerocketHostContainers contains the information of any additional images
+                          that we will deploy as host containers in the CPIs
+                        items:
+                          description: BottlerocketHostContainer describes a host
+                            image for Bottlerocket
+                          properties:
+                            name:
+                              description: Name is the host container name that will
+                                be given to the container in BR's `apiserver`
+                              type: string
+                            source:
+                              description: ImageMeta is the actual location of the
+                                container image
+                              properties:
+                                imageRepository:
+                                  description: |-
+                                    imageRepository sets the container registry to pull images from.
+                                    if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                  maxLength: 512
+                                  minLength: 1
+                                  type: string
+                                imageTag:
+                                  description: |-
+                                    imageTag allows to specify a tag for the image.
+                                    In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                  maxLength: 256
+                                  minLength: 1
+                                  type: string
+                              type: object
+                            superpowered:
+                              description: Superpowered indicates if the container
+                                will be superpowered
+                              type: boolean
+                            userData:
+                              description: UserData is the userdata that will be attached
+                                to the image.
+                              type: string
+                          required:
+                          - name
+                          - source
+                          - superpowered
+                          type: object
+                        type: array
                       caCertPath:
                         description: |-
                           caCertPath is the path to the SSL certificate authority used to
@@ -5654,6 +6010,93 @@ spec:
                             minLength: 1
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              maxLength: 512
+                              minLength: 1
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
+                      bottlerocketCustomHostContainers:
+                        description: |-
+                          BottlerocketHostContainers contains the information of any additional images
+                          that we will deploy as host containers in the CPIs
+                        items:
+                          description: BottlerocketHostContainer describes a host
+                            image for Bottlerocket
+                          properties:
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              maxLength: 512
+                              minLength: 1
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                            name:
+                              description: Name is the host container name that will
+                                be given to the container in BR's `apiserver`
+                              type: string
+                            superpowered:
+                              description: Superpowered indicates if the container
+                                will be superpowered
+                              type: boolean
+                            userData:
+                              description: UserData is the userdata that will be attached
+                                to the image.
+                              type: string
+                          required:
+                          - name
+                          - superpowered
+                          type: object
+                        type: array
                       caCertificateValidityPeriodDays:
                         description: |-
                           caCertificateValidityPeriodDays specifies the validity period for CA certificates generated by Cluster API.
@@ -7030,6 +7473,93 @@ spec:
                             minLength: 1
                             type: string
                         type: object
+                      bottlerocketCustomBootstrapContainers:
+                        description: |-
+                          BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                          This is only for bottlerocket.
+                        items:
+                          description: BottlerocketBootstrapContainer holds the bootstrap
+                            container setting for Bottlerocket
+                          properties:
+                            essential:
+                              description: |-
+                                Essential decides whether or not the container should fail the boot process.
+                                Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                Default is false.
+                              type: boolean
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              maxLength: 512
+                              minLength: 1
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                            mode:
+                              description: Mode represents the bootstrap container
+                                mode.
+                              enum:
+                              - always
+                              - "off"
+                              - once
+                              type: string
+                            name:
+                              description: Name is the bootstrap container name that
+                                will be given to the container in BR's `apiserver`.
+                              type: string
+                            userData:
+                              description: UserData is the base64-encoded userdata.
+                              type: string
+                          required:
+                          - mode
+                          - name
+                          type: object
+                        type: array
+                      bottlerocketCustomHostContainers:
+                        description: |-
+                          BottlerocketCustomHostContainers contains the information of any additional images
+                          that we will deploy as host containers in the CPIs
+                        items:
+                          description: BottlerocketHostContainer describes a host
+                            image for Bottlerocket
+                          properties:
+                            imageRepository:
+                              description: |-
+                                imageRepository sets the container registry to pull images from.
+                                if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                              maxLength: 512
+                              minLength: 1
+                              type: string
+                            imageTag:
+                              description: |-
+                                imageTag allows to specify a tag for the image.
+                                In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                              maxLength: 256
+                              minLength: 1
+                              type: string
+                            name:
+                              description: Name is the host container name that will
+                                be given to the container in BR's `apiserver`
+                              type: string
+                            superpowered:
+                              description: Superpowered indicates if the container
+                                will be superpowered
+                              type: boolean
+                            userData:
+                              description: UserData is the userdata that will be attached
+                                to the image.
+                              type: string
+                          required:
+                          - name
+                          - superpowered
+                          type: object
+                        type: array
                       caCertPath:
                         description: |-
                           caCertPath is the path to the SSL certificate authority used to
diff --git a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
index cb6f97406..9d237b9d8 100644
--- a/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
+++ b/controlplane/kubeadm/config/crd/bases/controlplane.cluster.x-k8s.io_kubeadmcontrolplanetemplates.yaml
@@ -160,6 +160,94 @@ spec:
                                       In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
+                              bottlerocketCustomHostContainers:
+                                description: |-
+                                  BottlerocketHostContainers contains the information of any additional images
+                                  that we will deploy as host containers in the CPIs
+                                items:
+                                  description: BottlerocketHostContainer describes
+                                    a host image for Bottlerocket
+                                  properties:
+                                    name:
+                                      description: Name is the host container name
+                                        that will be given to the container in BR's
+                                        `apiserver`
+                                      type: string
+                                    source:
+                                      description: ImageMeta is the actual location
+                                        of the container image
+                                      properties:
+                                        imageRepository:
+                                          description: |-
+                                            imageRepository sets the container registry to pull images from.
+                                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                          type: string
+                                        imageTag:
+                                          description: |-
+                                            imageTag allows to specify a tag for the image.
+                                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                          type: string
+                                      type: object
+                                    superpowered:
+                                      description: Superpowered indicates if the container
+                                        will be superpowered
+                                      type: boolean
+                                    userData:
+                                      description: UserData is the userdata that will
+                                        be attached to the image.
+                                      type: string
+                                  required:
+                                  - name
+                                  - source
+                                  - superpowered
+                                  type: object
+                                type: array
                               certificatesDir:
                                 description: |-
                                   certificatesDir specifies where to store or look for all required certificates.
@@ -811,6 +899,94 @@ spec:
                                       In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
+                              bottlerocketCustomHostContainers:
+                                description: |-
+                                  BottlerocketCustomHostContainers contains the information of any additional images
+                                  that we will deploy as host containers in the CPIs
+                                items:
+                                  description: BottlerocketHostContainer describes
+                                    a host image for Bottlerocket
+                                  properties:
+                                    name:
+                                      description: Name is the host container name
+                                        that will be given to the container in BR's
+                                        `apiserver`
+                                      type: string
+                                    source:
+                                      description: ImageMeta is the actual location
+                                        of the container image
+                                      properties:
+                                        imageRepository:
+                                          description: |-
+                                            imageRepository sets the container registry to pull images from.
+                                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                          type: string
+                                        imageTag:
+                                          description: |-
+                                            imageTag allows to specify a tag for the image.
+                                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                          type: string
+                                      type: object
+                                    superpowered:
+                                      description: Superpowered indicates if the container
+                                        will be superpowered
+                                      type: boolean
+                                    userData:
+                                      description: UserData is the userdata that will
+                                        be attached to the image.
+                                      type: string
+                                  required:
+                                  - name
+                                  - source
+                                  - superpowered
+                                  type: object
+                                type: array
                               caCertPath:
                                 description: |-
                                   caCertPath is the path to the SSL certificate authority used to
@@ -1609,6 +1785,102 @@ spec:
                                     minLength: 1
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      maxLength: 512
+                                      minLength: 1
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      maxLength: 256
+                                      minLength: 1
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
+                              bottlerocketCustomHostContainers:
+                                description: |-
+                                  BottlerocketHostContainers contains the information of any additional images
+                                  that we will deploy as host containers in the CPIs
+                                items:
+                                  description: BottlerocketHostContainer describes
+                                    a host image for Bottlerocket
+                                  properties:
+                                    name:
+                                      description: Name is the host container name
+                                        that will be given to the container in BR's
+                                        `apiserver`
+                                      type: string
+                                    source:
+                                      description: ImageMeta is the actual location
+                                        of the container image
+                                      properties:
+                                        imageRepository:
+                                          description: |-
+                                            imageRepository sets the container registry to pull images from.
+                                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                          maxLength: 512
+                                          minLength: 1
+                                          type: string
+                                        imageTag:
+                                          description: |-
+                                            imageTag allows to specify a tag for the image.
+                                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                          maxLength: 256
+                                          minLength: 1
+                                          type: string
+                                      type: object
+                                    superpowered:
+                                      description: Superpowered indicates if the container
+                                        will be superpowered
+                                      type: boolean
+                                    userData:
+                                      description: UserData is the userdata that will
+                                        be attached to the image.
+                                      type: string
+                                  required:
+                                  - name
+                                  - source
+                                  - superpowered
+                                  type: object
+                                type: array
                               certificatesDir:
                                 description: |-
                                   certificatesDir specifies where to store or look for all required certificates.
@@ -2857,6 +3129,102 @@ spec:
                                     minLength: 1
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      maxLength: 512
+                                      minLength: 1
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      maxLength: 256
+                                      minLength: 1
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
+                              bottlerocketCustomHostContainers:
+                                description: |-
+                                  BottlerocketHostContainers contains the information of any additional images
+                                  that we will deploy as host containers in the CPIs
+                                items:
+                                  description: BottlerocketHostContainer describes
+                                    a host image for Bottlerocket
+                                  properties:
+                                    name:
+                                      description: Name is the host container name
+                                        that will be given to the container in BR's
+                                        `apiserver`
+                                      type: string
+                                    source:
+                                      description: ImageMeta is the actual location
+                                        of the container image
+                                      properties:
+                                        imageRepository:
+                                          description: |-
+                                            imageRepository sets the container registry to pull images from.
+                                            if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                          maxLength: 512
+                                          minLength: 1
+                                          type: string
+                                        imageTag:
+                                          description: |-
+                                            imageTag allows to specify a tag for the image.
+                                            In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                          maxLength: 256
+                                          minLength: 1
+                                          type: string
+                                      type: object
+                                    superpowered:
+                                      description: Superpowered indicates if the container
+                                        will be superpowered
+                                      type: boolean
+                                    userData:
+                                      description: UserData is the userdata that will
+                                        be attached to the image.
+                                      type: string
+                                  required:
+                                  - name
+                                  - source
+                                  - superpowered
+                                  type: object
+                                type: array
                               caCertPath:
                                 description: |-
                                   caCertPath is the path to the SSL certificate authority used to
@@ -4027,6 +4395,96 @@ spec:
                                     minLength: 1
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      maxLength: 512
+                                      minLength: 1
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      maxLength: 256
+                                      minLength: 1
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
+                              bottlerocketCustomHostContainers:
+                                description: |-
+                                  BottlerocketHostContainers contains the information of any additional images
+                                  that we will deploy as host containers in the CPIs
+                                items:
+                                  description: BottlerocketHostContainer describes
+                                    a host image for Bottlerocket
+                                  properties:
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      maxLength: 512
+                                      minLength: 1
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      maxLength: 256
+                                      minLength: 1
+                                      type: string
+                                    name:
+                                      description: Name is the host container name
+                                        that will be given to the container in BR's
+                                        `apiserver`
+                                      type: string
+                                    superpowered:
+                                      description: Superpowered indicates if the container
+                                        will be superpowered
+                                      type: boolean
+                                    userData:
+                                      description: UserData is the userdata that will
+                                        be attached to the image.
+                                      type: string
+                                  required:
+                                  - name
+                                  - superpowered
+                                  type: object
+                                type: array
                               caCertificateValidityPeriodDays:
                                 description: |-
                                   caCertificateValidityPeriodDays specifies the validity period for CA certificates generated by Cluster API.
@@ -5438,6 +5896,96 @@ spec:
                                     minLength: 1
                                     type: string
                                 type: object
+                              bottlerocketCustomBootstrapContainers:
+                                description: |-
+                                  BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+                                  This is only for bottlerocket.
+                                items:
+                                  description: BottlerocketBootstrapContainer holds
+                                    the bootstrap container setting for Bottlerocket
+                                  properties:
+                                    essential:
+                                      description: |-
+                                        Essential decides whether or not the container should fail the boot process.
+                                        Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+                                        Default is false.
+                                      type: boolean
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      maxLength: 512
+                                      minLength: 1
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      maxLength: 256
+                                      minLength: 1
+                                      type: string
+                                    mode:
+                                      description: Mode represents the bootstrap container
+                                        mode.
+                                      enum:
+                                      - always
+                                      - "off"
+                                      - once
+                                      type: string
+                                    name:
+                                      description: Name is the bootstrap container
+                                        name that will be given to the container in
+                                        BR's `apiserver`.
+                                      type: string
+                                    userData:
+                                      description: UserData is the base64-encoded
+                                        userdata.
+                                      type: string
+                                  required:
+                                  - mode
+                                  - name
+                                  type: object
+                                type: array
+                              bottlerocketCustomHostContainers:
+                                description: |-
+                                  BottlerocketCustomHostContainers contains the information of any additional images
+                                  that we will deploy as host containers in the CPIs
+                                items:
+                                  description: BottlerocketHostContainer describes
+                                    a host image for Bottlerocket
+                                  properties:
+                                    imageRepository:
+                                      description: |-
+                                        imageRepository sets the container registry to pull images from.
+                                        if not set, the ImageRepository defined in ClusterConfiguration will be used instead.
+                                      maxLength: 512
+                                      minLength: 1
+                                      type: string
+                                    imageTag:
+                                      description: |-
+                                        imageTag allows to specify a tag for the image.
+                                        In case this value is set, kubeadm does not change automatically the version of the above components during upgrades.
+                                      maxLength: 256
+                                      minLength: 1
+                                      type: string
+                                    name:
+                                      description: Name is the host container name
+                                        that will be given to the container in BR's
+                                        `apiserver`
+                                      type: string
+                                    superpowered:
+                                      description: Superpowered indicates if the container
+                                        will be superpowered
+                                      type: boolean
+                                    userData:
+                                      description: UserData is the userdata that will
+                                        be attached to the image.
+                                      type: string
+                                  required:
+                                  - name
+                                  - superpowered
+                                  type: object
+                                type: array
                               caCertPath:
                                 description: |-
                                   caCertPath is the path to the SSL certificate authority used to
diff --git a/internal/api/bootstrap/kubeadm/v1alpha3/zz_generated.conversion.go b/internal/api/bootstrap/kubeadm/v1alpha3/zz_generated.conversion.go
index 5100ed463..cc752ec7c 100644
--- a/internal/api/bootstrap/kubeadm/v1alpha3/zz_generated.conversion.go
+++ b/internal/api/bootstrap/kubeadm/v1alpha3/zz_generated.conversion.go
@@ -545,6 +545,8 @@ func autoConvert_v1beta2_ClusterConfiguration_To_v1alpha3_ClusterConfiguration(i
 	// WARNING: in.BottlerocketControl requires manual conversion: does not exist in peer-type
 	// WARNING: in.Proxy requires manual conversion: does not exist in peer-type
 	// WARNING: in.RegistryMirror requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta2_Etcd_To_v1alpha3_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
 		return err
 	}
@@ -894,6 +896,8 @@ func autoConvert_v1beta2_JoinConfiguration_To_v1alpha3_JoinConfiguration(in *v1b
 	// WARNING: in.BottlerocketControl requires manual conversion: does not exist in peer-type
 	// WARNING: in.Proxy requires manual conversion: does not exist in peer-type
 	// WARNING: in.RegistryMirror requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomHostContainers requires manual conversion: does not exist in peer-type
+	// WARNING: in.BottlerocketCustomBootstrapContainers requires manual conversion: does not exist in peer-type
 	if err := Convert_v1beta2_NodeRegistrationOptions_To_v1alpha3_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
 		return err
 	}
diff --git a/internal/api/bootstrap/kubeadm/v1alpha4/conversion.go b/internal/api/bootstrap/kubeadm/v1alpha4/conversion.go
index 944a538ab..609801ca4 100644
--- a/internal/api/bootstrap/kubeadm/v1alpha4/conversion.go
+++ b/internal/api/bootstrap/kubeadm/v1alpha4/conversion.go
@@ -683,6 +683,11 @@ func Convert_v1alpha4_File_To_v1beta2_File(in *File, out *bootstrapv1.File, s ap
 	return nil
 }
 
+func Convert_v1beta1_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(in *bootstrapv1.ClusterConfiguration, out *ClusterConfiguration, s apimachineryconversion.Scope) error {
+	// ClusterConfiguration.BottlerocketCustomHostContainers exists in bootstrapv1.ClusterConfiguration but not in v1alpha4
+	return autoConvert_v1beta2_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(in, out, s)
+}
+
 func Convert_v1beta2_File_To_v1alpha4_File(in *bootstrapv1.File, out *File, s apimachineryconversion.Scope) error {
 	// File.Append does not exist in kubeadm v1alpha4 API.
 	if err := autoConvert_v1beta2_File_To_v1alpha4_File(in, out, s); err != nil {
@@ -721,6 +726,56 @@ func Convert_v1beta2_Pause_To_v1alpha4_Pause(in *bootstrapv1.Pause, out *Pause,
 	return nil
 }
 
+func Convert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *bootstrapv1.BottlerocketBootstrapContainer, _ apimachineryconversion.Scope) error {
+	out.Name = in.Name
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+func Convert_v1beta2_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(in *bootstrapv1.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, _ apimachineryconversion.Scope) error {
+	out.Name = in.Name
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+func Convert_v1alpha4_BottlerocketControl_To_v1beta2_BottlerocketControl(in *BottlerocketControl, out *bootstrapv1.BottlerocketControl, _ apimachineryconversion.Scope) error {
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	return nil
+}
+
+func Convert_v1beta2_BottlerocketControl_To_v1alpha4_BottlerocketControl(in *bootstrapv1.BottlerocketControl, out *BottlerocketControl, _ apimachineryconversion.Scope) error {
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	return nil
+}
+
+func Convert_v1alpha4_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(in *BottlerocketHostContainer, out *bootstrapv1.BottlerocketHostContainer, _ apimachineryconversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	out.UserData = in.UserData
+	return nil
+}
+
+func Convert_v1beta2_BottlerocketHostContainer_To_v1alpha4_BottlerocketHostContainer(in *bootstrapv1.BottlerocketHostContainer, out *BottlerocketHostContainer, _ apimachineryconversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	out.ImageRepository = in.ImageRepository
+	out.ImageTag = in.ImageTag
+	out.UserData = in.UserData
+	return nil
+}
+
 func dropEmptyStringsKubeadmConfigSpec(dst *KubeadmConfigSpec) {
 	for i, u := range dst.Users {
 		dropEmptyString(&u.Gecos)
diff --git a/internal/api/bootstrap/kubeadm/v1alpha4/kubeadm_types.go b/internal/api/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
index 55f700485..b6ea3a6c9 100644
--- a/internal/api/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
+++ b/internal/api/bootstrap/kubeadm/v1alpha4/kubeadm_types.go
@@ -151,6 +151,16 @@ type ClusterConfiguration struct {
 	// clusterName is the cluster name
 	// +optional
 	ClusterName string `json:"clusterName,omitempty"`
+
+	// BottlerocketHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
 }
 
 // Pause defines the pause image repo and tag that should be run on the bootstrapped nodes.
@@ -433,6 +443,54 @@ type JoinConfiguration struct {
 	// If nil, no additional control plane instance will be deployed.
 	// +optional
 	ControlPlane *JoinControlPlane `json:"controlPlane,omitempty"`
+
+	// BottlerocketCustomHostContainers contains the information of any additional images
+	// that we will deploy as host containers in the CPIs
+	// +optional
+	BottlerocketCustomHostContainers []BottlerocketHostContainer `json:"bottlerocketCustomHostContainers,omitempty"`
+
+	// BottlerocketCustomBootstrapContainers adds additional bootstrap containers for Bottlerocket.
+	// This is only for bottlerocket.
+	// +optional
+	BottlerocketCustomBootstrapContainers []BottlerocketBootstrapContainer `json:"bottlerocketCustomBootstrapContainers,omitempty"`
+}
+
+// BottlerocketHostContainer describes a host image for Bottlerocket
+type BottlerocketHostContainer struct {
+	// Name is the host container name that will be given to the container in BR's `apiserver`
+	// +kubebuilder:validation:Required
+	Name string `json:"name"`
+	// Superpowered indicates if the container will be superpowered
+	// +kubebuilder:validation:Required
+	Superpowered bool `json:"superpowered"`
+	// ImageMeta is the actual location of the container image
+	ImageMeta `json:"source"`
+	// UserData is the userdata that will be attached to the image.
+	// +optional
+	UserData string `json:"userData,omitempty"`
+}
+
+// BottlerocketBootstrapContainer holds the bootstrap container setting for Bottlerocket
+type BottlerocketBootstrapContainer struct {
+	// Name is the bootstrap container name that will be given to the container in BR's `apiserver`.
+	Name string `json:"name"`
+
+	// ImageMeta is the actual image used for Bottlerocket bootstrap.
+	ImageMeta `json:",inline"`
+
+	// Essential decides whether or not the container should fail the boot process.
+	// Bootstrap containers configured with essential = true will stop the boot process if they exit code is a non-zero value.
+	// Default is false.
+	// +optional
+	Essential bool `json:"essential"`
+
+	// Mode represents the bootstrap container mode.
+	// +kubebuilder:validation:Enum=always;off;once
+	Mode string `json:"mode"`
+
+	// UserData is the base64-encoded userdata.
+	// +optional
+	UserData string `json:"userData,omitempty"`
 }
 
 // JoinControlPlane contains elements describing an additional control plane instance to be deployed on the joining node.
diff --git a/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go b/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
index 490ac6cf5..08acfa3cd 100644
--- a/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
+++ b/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.conversion.go
@@ -69,16 +69,6 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
-	if err := s.AddGeneratedConversionFunc((*BottlerocketControl)(nil), (*v1beta2.BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
-		return Convert_v1alpha4_BottlerocketControl_To_v1beta2_BottlerocketControl(a.(*BottlerocketControl), b.(*v1beta2.BottlerocketControl), scope)
-	}); err != nil {
-		return err
-	}
-	if err := s.AddGeneratedConversionFunc((*v1beta2.BottlerocketControl)(nil), (*BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
-		return Convert_v1beta2_BottlerocketControl_To_v1alpha4_BottlerocketControl(a.(*v1beta2.BottlerocketControl), b.(*BottlerocketControl), scope)
-	}); err != nil {
-		return err
-	}
 	if err := s.AddGeneratedConversionFunc((*DiskSetup)(nil), (*v1beta2.DiskSetup)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1alpha4_DiskSetup_To_v1beta2_DiskSetup(a.(*DiskSetup), b.(*v1beta2.DiskSetup), scope)
 	}); err != nil {
@@ -269,11 +259,26 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddConversionFunc((*BottlerocketBootstrapContainer)(nil), (*v1beta2.BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(a.(*BottlerocketBootstrapContainer), b.(*v1beta2.BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*BottlerocketBootstrap)(nil), (*v1beta2.BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1alpha4_BottlerocketBootstrap_To_v1beta2_BottlerocketBootstrap(a.(*BottlerocketBootstrap), b.(*v1beta2.BottlerocketBootstrap), scope)
 	}); err != nil {
 		return err
 	}
+	if err := s.AddConversionFunc((*BottlerocketControl)(nil), (*v1beta2.BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1alpha4_BottlerocketControl_To_v1beta2_BottlerocketControl(a.(*BottlerocketControl), b.(*v1beta2.BottlerocketControl), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddConversionFunc((*BottlerocketHostContainer)(nil), (*v1beta2.BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1alpha4_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(a.(*BottlerocketHostContainer), b.(*v1beta2.BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*ClusterConfiguration)(nil), (*v1beta2.ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1alpha4_ClusterConfiguration_To_v1beta2_ClusterConfiguration(a.(*ClusterConfiguration), b.(*v1beta2.ClusterConfiguration), scope)
 	}); err != nil {
@@ -359,11 +364,26 @@ func RegisterConversions(s *runtime.Scheme) error {
 	}); err != nil {
 		return err
 	}
+	if err := s.AddConversionFunc((*v1beta2.BottlerocketBootstrapContainer)(nil), (*BottlerocketBootstrapContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta2_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(a.(*v1beta2.BottlerocketBootstrapContainer), b.(*BottlerocketBootstrapContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*v1beta2.BottlerocketBootstrap)(nil), (*BottlerocketBootstrap)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta2_BottlerocketBootstrap_To_v1alpha4_BottlerocketBootstrap(a.(*v1beta2.BottlerocketBootstrap), b.(*BottlerocketBootstrap), scope)
 	}); err != nil {
 		return err
 	}
+	if err := s.AddConversionFunc((*v1beta2.BottlerocketControl)(nil), (*BottlerocketControl)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta2_BottlerocketControl_To_v1alpha4_BottlerocketControl(a.(*v1beta2.BottlerocketControl), b.(*BottlerocketControl), scope)
+	}); err != nil {
+		return err
+	}
+	if err := s.AddConversionFunc((*v1beta2.BottlerocketHostContainer)(nil), (*BottlerocketHostContainer)(nil), func(a, b interface{}, scope conversion.Scope) error {
+		return Convert_v1beta2_BottlerocketHostContainer_To_v1alpha4_BottlerocketHostContainer(a.(*v1beta2.BottlerocketHostContainer), b.(*BottlerocketHostContainer), scope)
+	}); err != nil {
+		return err
+	}
 	if err := s.AddConversionFunc((*v1beta2.ClusterConfiguration)(nil), (*ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
 		return Convert_v1beta2_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(a.(*v1beta2.ClusterConfiguration), b.(*ClusterConfiguration), scope)
 	}); err != nil {
@@ -572,6 +592,25 @@ func autoConvert_v1beta2_BottlerocketBootstrap_To_v1alpha4_BottlerocketBootstrap
 	return nil
 }
 
+func autoConvert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(in *BottlerocketBootstrapContainer, out *v1beta2.BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	// WARNING: in.ImageMeta requires manual conversion: does not exist in peer-type
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
+func autoConvert_v1beta2_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(in *v1beta2.BottlerocketBootstrapContainer, out *BottlerocketBootstrapContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	// WARNING: in.ImageRepository requires manual conversion: does not exist in peer-type
+	// WARNING: in.ImageTag requires manual conversion: does not exist in peer-type
+	out.Essential = in.Essential
+	out.Mode = in.Mode
+	out.UserData = in.UserData
+	return nil
+}
+
 func autoConvert_v1alpha4_BottlerocketControl_To_v1beta2_BottlerocketControl(in *BottlerocketControl, out *v1beta2.BottlerocketControl, s conversion.Scope) error {
 	// WARNING: in.ImageMeta requires manual conversion: does not exist in peer-type
 	return nil
@@ -583,6 +622,23 @@ func autoConvert_v1beta2_BottlerocketControl_To_v1alpha4_BottlerocketControl(in
 	return nil
 }
 
+func autoConvert_v1alpha4_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(in *BottlerocketHostContainer, out *v1beta2.BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	// WARNING: in.ImageMeta requires manual conversion: does not exist in peer-type
+	out.UserData = in.UserData
+	return nil
+}
+
+func autoConvert_v1beta2_BottlerocketHostContainer_To_v1alpha4_BottlerocketHostContainer(in *v1beta2.BottlerocketHostContainer, out *BottlerocketHostContainer, s conversion.Scope) error {
+	out.Name = in.Name
+	out.Superpowered = in.Superpowered
+	// WARNING: in.ImageRepository requires manual conversion: does not exist in peer-type
+	// WARNING: in.ImageTag requires manual conversion: does not exist in peer-type
+	out.UserData = in.UserData
+	return nil
+}
+
 func autoConvert_v1alpha4_ClusterConfiguration_To_v1beta2_ClusterConfiguration(in *ClusterConfiguration, out *v1beta2.ClusterConfiguration, s conversion.Scope) error {
 	// WARNING: in.TypeMeta requires manual conversion: does not exist in peer-type
 	if err := Convert_v1alpha4_Pause_To_v1beta2_Pause(&in.Pause, &out.Pause, s); err != nil {
@@ -622,6 +678,28 @@ func autoConvert_v1alpha4_ClusterConfiguration_To_v1beta2_ClusterConfiguration(i
 	out.ImageRepository = in.ImageRepository
 	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
 	// WARNING: in.ClusterName requires manual conversion: does not exist in peer-type
+	if in.BottlerocketHostContainers != nil {
+		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
+		*out = make([]v1beta2.BottlerocketHostContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1alpha4_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketHostContainers = nil
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]v1beta2.BottlerocketBootstrapContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomBootstrapContainers = nil
+	}
 	return nil
 }
 
@@ -641,6 +719,28 @@ func autoConvert_v1beta2_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(i
 	if err := Convert_v1beta2_RegistryMirrorConfiguration_To_v1alpha4_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
 		return err
 	}
+	if in.BottlerocketHostContainers != nil {
+		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta2_BottlerocketHostContainer_To_v1alpha4_BottlerocketHostContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketHostContainers = nil
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta2_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomBootstrapContainers = nil
+	}
 	if err := Convert_v1beta2_Etcd_To_v1alpha4_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
 		return err
 	}
@@ -995,6 +1095,28 @@ func autoConvert_v1alpha4_JoinConfiguration_To_v1beta2_JoinConfiguration(in *Joi
 		return err
 	}
 	out.ControlPlane = (*v1beta2.JoinControlPlane)(unsafe.Pointer(in.ControlPlane))
+	if in.BottlerocketCustomHostContainers != nil {
+		in, out := &in.BottlerocketCustomHostContainers, &out.BottlerocketCustomHostContainers
+		*out = make([]v1beta2.BottlerocketHostContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1alpha4_BottlerocketHostContainer_To_v1beta2_BottlerocketHostContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomHostContainers = nil
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]v1beta2.BottlerocketBootstrapContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1alpha4_BottlerocketBootstrapContainer_To_v1beta2_BottlerocketBootstrapContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomBootstrapContainers = nil
+	}
 	return nil
 }
 
@@ -1014,6 +1136,28 @@ func autoConvert_v1beta2_JoinConfiguration_To_v1alpha4_JoinConfiguration(in *v1b
 	if err := Convert_v1beta2_RegistryMirrorConfiguration_To_v1alpha4_RegistryMirrorConfiguration(&in.RegistryMirror, &out.RegistryMirror, s); err != nil {
 		return err
 	}
+	if in.BottlerocketCustomHostContainers != nil {
+		in, out := &in.BottlerocketCustomHostContainers, &out.BottlerocketCustomHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta2_BottlerocketHostContainer_To_v1alpha4_BottlerocketHostContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomHostContainers = nil
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		for i := range *in {
+			if err := Convert_v1beta2_BottlerocketBootstrapContainer_To_v1alpha4_BottlerocketBootstrapContainer(&(*in)[i], &(*out)[i], s); err != nil {
+				return err
+			}
+		}
+	} else {
+		out.BottlerocketCustomBootstrapContainers = nil
+	}
 	if err := Convert_v1beta2_NodeRegistrationOptions_To_v1alpha4_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
 		return err
 	}
diff --git a/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go b/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
index 168109c1e..efd30edc9 100644
--- a/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
+++ b/internal/api/bootstrap/kubeadm/v1alpha4/zz_generated.deepcopy.go
@@ -158,6 +158,22 @@ func (in *BottlerocketBootstrap) DeepCopy() *BottlerocketBootstrap {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketBootstrapContainer) DeepCopyInto(out *BottlerocketBootstrapContainer) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketBootstrapContainer.
+func (in *BottlerocketBootstrapContainer) DeepCopy() *BottlerocketBootstrapContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketBootstrapContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *BottlerocketControl) DeepCopyInto(out *BottlerocketControl) {
 	*out = *in
@@ -174,6 +190,22 @@ func (in *BottlerocketControl) DeepCopy() *BottlerocketControl {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *BottlerocketHostContainer) DeepCopyInto(out *BottlerocketHostContainer) {
+	*out = *in
+	out.ImageMeta = in.ImageMeta
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BottlerocketHostContainer.
+func (in *BottlerocketHostContainer) DeepCopy() *BottlerocketHostContainer {
+	if in == nil {
+		return nil
+	}
+	out := new(BottlerocketHostContainer)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 	*out = *in
@@ -196,6 +228,16 @@ func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
 			(*out)[key] = val
 		}
 	}
+	if in.BottlerocketHostContainers != nil {
+		in, out := &in.BottlerocketHostContainers, &out.BottlerocketHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		copy(*out, *in)
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
@@ -528,6 +570,16 @@ func (in *JoinConfiguration) DeepCopyInto(out *JoinConfiguration) {
 		*out = new(JoinControlPlane)
 		**out = **in
 	}
+	if in.BottlerocketCustomHostContainers != nil {
+		in, out := &in.BottlerocketCustomHostContainers, &out.BottlerocketCustomHostContainers
+		*out = make([]BottlerocketHostContainer, len(*in))
+		copy(*out, *in)
+	}
+	if in.BottlerocketCustomBootstrapContainers != nil {
+		in, out := &in.BottlerocketCustomBootstrapContainers, &out.BottlerocketCustomBootstrapContainers
+		*out = make([]BottlerocketBootstrapContainer, len(*in))
+		copy(*out, *in)
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JoinConfiguration.
-- 
2.49.0

