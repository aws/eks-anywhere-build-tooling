From 2ef5360579b72f0249bb29975c17680f55ddf81d Mon Sep 17 00:00:00 2001
From: Xu Deng <xudeng@amazon.com>
Date: Wed, 14 Sep 2022 12:13:31 -0400
Subject: [PATCH 20/23] Fix the issue of passing [] taints to kubeadm

Cluster-api needs to pass [] taints to Kubeadm so that kubeadm will
not taint the control plane. However, a [] taints will be omitted by
cluster-api during Marshing, thus kubeadm gets a nil instead of [].

For more info: https://github.com/kubernetes-sigs/cluster-api/issues/7149
---
 .../kubeadm/api/v1beta1/kubeadm_types.go      | 36 +++++++++++++++++++
 1 file changed, 36 insertions(+)

diff --git a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
index 11ae4ae25..1c5992d35 100644
--- a/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
+++ b/bootstrap/kubeadm/api/v1beta1/kubeadm_types.go
@@ -17,6 +17,7 @@ limitations under the License.
 package v1beta1
 
 import (
+	"encoding/json"
 	"fmt"
 	"strings"
 
@@ -312,6 +313,41 @@ type NodeRegistrationOptions struct {
 	IgnorePreflightErrors []string `json:"ignorePreflightErrors,omitempty"`
 }
 
+// MarshalJSON marshals NodeRegistrationOptions.Taints in a way that an empty slice is preserved.
+func (n *NodeRegistrationOptions) MarshalJSON() ([]byte, error) {
+	// Marshal an empty Taints slice array with omitempty so it's preserved.
+	if n.Taints != nil && len(n.Taints) == 0 {
+		return json.Marshal(struct {
+			Name                  string            `json:"name,omitempty"`
+			CRISocket             string            `json:"criSocket,omitempty"`
+			Taints                []corev1.Taint    `json:"taints"`
+			KubeletExtraArgs      map[string]string `json:"kubeletExtraArgs,omitempty"`
+			IgnorePreflightErrors []string          `json:"ignorePreflightErrors,omitempty"`
+		}{
+			Name:                  n.Name,
+			CRISocket:             n.CRISocket,
+			Taints:                n.Taints,
+			KubeletExtraArgs:      n.KubeletExtraArgs,
+			IgnorePreflightErrors: n.IgnorePreflightErrors,
+		})
+	}
+
+	// If Taints is nil or not empty we can use omitempty.
+	return json.Marshal(struct {
+		Name                  string            `json:"name,omitempty"`
+		CRISocket             string            `json:"criSocket,omitempty"`
+		Taints                []corev1.Taint    `json:"taints,omitempty"`
+		KubeletExtraArgs      map[string]string `json:"kubeletExtraArgs,omitempty"`
+		IgnorePreflightErrors []string          `json:"ignorePreflightErrors,omitempty"`
+	}{
+		Name:                  n.Name,
+		CRISocket:             n.CRISocket,
+		Taints:                n.Taints,
+		KubeletExtraArgs:      n.KubeletExtraArgs,
+		IgnorePreflightErrors: n.IgnorePreflightErrors,
+	})
+}
+
 // Networking contains elements describing cluster's networking configuration.
 type Networking struct {
 	// ServiceSubnet is the subnet used by k8s services.
-- 
2.37.3

