From 6476ed7ba17df082f7568363d3612b4fe69894ea Mon Sep 17 00:00:00 2001
From: Rajashree Mandaogane <mandaor@amazon.com>
Date: Tue, 24 Aug 2021 09:00:39 -0700
Subject: [PATCH 2/2] Patch etcd cluster with upgrade complete annotation only
 after upgrade

After KCP upgrade is completed, the controller checks the condition "MachinesSpecUpToDate"
exists and marks it to true. The controller also updates the etcd cluster with an
annotation to indicate the controlplane upgrade is complete. But it should annotate
etcd cluster only if the MachineSpecUpToDate condition is False, since that will happen
only immediately after an upgrade. Without checking for false it will keep annotating
the etcd cluster on further reconcile calls.

cr: https://code.amazon.com/reviews/CR-55949234
---
 .../kubeadm/controllers/controller.go         | 33 ++++++++++---------
 1 file changed, 18 insertions(+), 15 deletions(-)

diff --git a/controlplane/kubeadm/controllers/controller.go b/controlplane/kubeadm/controllers/controller.go
index e9725da5a..588bbcf72 100644
--- a/controlplane/kubeadm/controllers/controller.go
+++ b/controlplane/kubeadm/controllers/controller.go
@@ -390,23 +390,26 @@ func (r *KubeadmControlPlaneReconciler) reconcile(ctx context.Context, cluster *
 		// NOTE: we are checking the condition already exists in order to avoid to set this condition at the first
 		// reconciliation/before a rolling upgrade actually starts.
 		if conditions.Has(controlPlane.KCP, controlplanev1.MachinesSpecUpToDateCondition) {
-			conditions.MarkTrue(controlPlane.KCP, controlplanev1.MachinesSpecUpToDateCondition)
-			/* Once KCP upgrade has completed, the controller will annotate the external etcd object to indicate that the older KCP machines
-			are no longer part of the cluster, and so any older out-of-date etcd members and machines can be deleted
-			*/
-			if cluster.Spec.ManagedExternalEtcdRef != nil {
-				etcdRef := cluster.Spec.ManagedExternalEtcdRef
-				externalEtcd, err := external.Get(ctx, r.Client, etcdRef, cluster.Namespace)
-				if err != nil {
-					return ctrl.Result{}, err
-				}
-				if err := external.SetKCPUpdateCompleteAnnotationOnEtcdadmCluster(externalEtcd); err != nil {
-					return ctrl.Result{}, err
-				}
-				if err := r.Client.Update(ctx, externalEtcd); err != nil {
-					return ctrl.Result{}, err
+			if conditions.IsFalse(controlPlane.KCP, controlplanev1.MachinesSpecUpToDateCondition) {
+				/* Once KCP upgrade has completed, the controller will annotate the external etcd object to indicate that the older KCP machines
+				are no longer part of the cluster, and so any older out-of-date etcd members and machines can be deleted
+				*/
+				if cluster.Spec.ManagedExternalEtcdRef != nil {
+					etcdRef := cluster.Spec.ManagedExternalEtcdRef
+					externalEtcd, err := external.Get(ctx, r.Client, etcdRef, cluster.Namespace)
+					if err != nil {
+						return ctrl.Result{}, err
+					}
+					logger.Info("Adding upgrade complete annotation on etcdadmCluster")
+					if err := external.SetKCPUpdateCompleteAnnotationOnEtcdadmCluster(externalEtcd); err != nil {
+						return ctrl.Result{}, err
+					}
+					if err := r.Client.Update(ctx, externalEtcd); err != nil {
+						return ctrl.Result{}, err
+					}
 				}
 			}
+			conditions.MarkTrue(controlPlane.KCP, controlplanev1.MachinesSpecUpToDateCondition)
 		}
 	}
 
-- 
2.30.1

