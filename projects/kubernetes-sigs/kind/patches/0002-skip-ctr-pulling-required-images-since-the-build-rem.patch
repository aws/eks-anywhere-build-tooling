From 64f7e306858e06d413905a9bf8a5111094e6f940 Mon Sep 17 00:00:00 2001
From: Jackson West <jgw@amazon.com>
Date: Sat, 2 Apr 2022 22:01:04 -0500
Subject: [PATCH 2/6] skip ctr pulling required images since the build removes
 them anyway

Signed-off-by: Jackson West <jgw@amazon.com>
---
 pkg/build/nodeimage/buildcontext.go | 52 ++++++++++++++---------------
 1 file changed, 26 insertions(+), 26 deletions(-)

diff --git a/pkg/build/nodeimage/buildcontext.go b/pkg/build/nodeimage/buildcontext.go
index 60b048d8..cd992e85 100644
--- a/pkg/build/nodeimage/buildcontext.go
+++ b/pkg/build/nodeimage/buildcontext.go
@@ -266,32 +266,32 @@ func (c *buildContext) prePullImagesAndWriteManifests(bits kube.Bits, parsedVers
 		}
 	}()
 
-	fns := []func() error{}
-	osArch := dockerBuildOsAndArch(c.arch)
-	for _, image := range requiredImages {
-		image := image // https://golang.org/doc/faq#closures_and_goroutines
-		if !builtImages.Has(image) {
-			fns = append(fns, func() error {
-				if err = importer.Pull(image, osArch); err != nil {
-					c.logger.Warnf("Failed to pull %s with error: %v", image, err)
-					runE := exec.RunErrorForError(err)
-					c.logger.Warn(string(runE.Output))
-					c.logger.Warnf("Retrying %s pull after 1s ...", image)
-					time.Sleep(time.Second)
-					return importer.Pull(image, osArch)
-				}
-				return nil
-			})
-		}
-	}
-	// Wait for containerd socket to be ready, which may take 1s when running under emulation
-	if err := importer.WaitForReady(); err != nil {
-		c.logger.Errorf("Image build failed, containerd did not become ready %v", err)
-		return nil, err
-	}
-	if err := errors.AggregateConcurrent(fns); err != nil {
-		return nil, err
-	}
+	// fns := []func() error{}
+	// osArch := dockerBuildOsAndArch(c.arch)
+	// for _, image := range requiredImages {
+	// 	image := image // https://golang.org/doc/faq#closures_and_goroutines
+	// 	if !builtImages.Has(image) {
+	// 		fns = append(fns, func() error {
+	// 			if err = importer.Pull(image, osArch); err != nil {
+	// 				c.logger.Warnf("Failed to pull %s with error: %v", image, err)
+	// 				runE := exec.RunErrorForError(err)
+	// 				c.logger.Warn(string(runE.Output))
+	// 				c.logger.Warnf("Retrying %s pull after 1s ...", image)
+	// 				time.Sleep(time.Second)
+	// 				return importer.Pull(image, osArch)
+	// 			}
+	// 			return nil
+	// 		})
+	// 	}
+	// }
+	// // Wait for containerd socket to be ready, which may take 1s when running under emulation
+	// if err := importer.WaitForReady(); err != nil {
+	// 	c.logger.Errorf("Image build failed, containerd did not become ready %v", err)
+	// 	return nil, err
+	// }
+	// if err := errors.AggregateConcurrent(fns); err != nil {
+	// 	return nil, err
+	// }
 
 	// create a plan of image loading
 	loadFns := []func() error{}
-- 
2.49.0

