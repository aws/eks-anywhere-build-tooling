From 97ebaae73e0ed4ef00e37cda324d2e35372083ce Mon Sep 17 00:00:00 2001
From: Rahul Ganesh <rahulgab@amazon.com>
Date: Wed, 16 Jul 2025 21:41:32 +0000
Subject: [PATCH 8/8] Fix file mounts on special dirs in cexec action

This commit changes how special directories (/dev, /proc, /sys) are mounted
in the cexec action. Instead of creating new filesystem mounts with read-only
permissions, we now use bind mounts that preserve the permissions and attributes
of the source directories. With some versions of docker, the current way
of mounting causes some file system permission error on /dev when
running consecutive actions.

Signed-off-by: Rahul Ganesh <rahulgab@amazon.com>
---
 cexec/main.go | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/cexec/main.go b/cexec/main.go
index 0925078..6d957d5 100644
--- a/cexec/main.go
+++ b/cexec/main.go
@@ -225,21 +225,24 @@ func chroot(path string) (func() error, error) {
 
 // mountSpecialDirs ensures that /dev /proc /sys /etc/resolv.conf exist in the chroot.
 func (s settings) mountSpecialDirs(path string) error {
+	if path == "" {
+		return errors.New("mount path cannot be empty")
+	}
 	// Mount dev
 	dev := filepath.Join(path, "dev")
-	if err := syscall.Mount("none", dev, "devtmpfs", syscall.MS_RDONLY, ""); err != nil {
+	if err := syscall.Mount("/dev", dev, "", syscall.MS_BIND, ""); err != nil {
 		return fmt.Errorf("couldn't mount /dev to %v: %w", dev, err)
 	}
 
 	// Mount proc
 	proc := filepath.Join(path, "proc")
-	if err := syscall.Mount("none", proc, "proc", syscall.MS_RDONLY, ""); err != nil {
+	if err := syscall.Mount("/proc", proc, "", syscall.MS_BIND, ""); err != nil {
 		return fmt.Errorf("couldn't mount /proc to %v: %w", proc, err)
 	}
 
 	// Mount sys
 	sys := filepath.Join(path, "sys")
-	if err := syscall.Mount("none", sys, "sysfs", syscall.MS_RDONLY, ""); err != nil {
+	if err := syscall.Mount("/sys", sys, "", syscall.MS_BIND, ""); err != nil {
 		return fmt.Errorf("couldn't mount /sys to %v: %w", sys, err)
 	}
 
-- 
2.47.1

