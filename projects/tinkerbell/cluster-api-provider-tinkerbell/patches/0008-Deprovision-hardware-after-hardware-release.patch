From bebb6e167670d7c7ff23cbb4b3fc52a7cea3c582 Mon Sep 17 00:00:00 2001
From: Aravind Ramalingam <ramaliar@amazon.com>
Date: Wed, 12 Jan 2022 18:57:51 -0800
Subject: [PATCH 5/5] Deprovision hardware after hardware release

---
 controllers/base.go            | 37 ++++++++++++++++++++++++++++++++++
 pbnj/controllers/controller.go |  2 ++
 2 files changed, 39 insertions(+)

diff --git a/controllers/base.go b/controllers/base.go
index bfb28a2..f74961a 100644
--- a/controllers/base.go
+++ b/controllers/base.go
@@ -32,6 +32,7 @@ import (
 	"sigs.k8s.io/controller-runtime/pkg/controller/controllerutil"
 
 	infrastructurev1 "github.com/tinkerbell/cluster-api-provider-tinkerbell/api/v1beta1"
+	pbnjv1 "github.com/tinkerbell/cluster-api-provider-tinkerbell/pbnj/api/v1alpha1"
 	tinkv1 "github.com/tinkerbell/cluster-api-provider-tinkerbell/tink/api/v1alpha1"
 )
 
@@ -161,6 +162,42 @@ func (bmrc *baseMachineReconcileContext) releaseHardware() error {
 		return fmt.Errorf("patching Hardware object: %w", err)
 	}
 
+	return bmrc.deprovisionHardware(hardware)
+}
+
+func (bmrc *baseMachineReconcileContext) deprovisionHardware(hardware *tinkv1.Hardware) error {
+	if hardware.Spec.BmcRef == "" {
+		bmrc.log.Info("Skipping deprovision for hardware", "BMC Ref", hardware.Spec.BmcRef, "Hardware name", hardware.Name)
+
+		return nil
+	}
+
+	// Fetch the bmc.
+	bmc := &pbnjv1.BMC{}
+	namespacedName := types.NamespacedName{
+		Name: hardware.Spec.BmcRef,
+	}
+
+	if err := bmrc.client.Get(bmrc.ctx, namespacedName, bmc); err != nil {
+		if apierrors.IsNotFound(err) {
+			return fmt.Errorf("BMC not found: %w", err)
+		}
+
+		return fmt.Errorf("failed to get bmc: %w", err)
+	}
+
+	patchHelper, err := patch.NewHelper(bmc, bmrc.client)
+	if err != nil {
+		return fmt.Errorf("initializing patch helper for bmc: %w", err)
+	}
+
+	bmc.Spec.BootDevice = "BOOT_DEVICE_PXE"
+	bmc.Spec.PowerAction = "POWER_ACTION_RESET"
+
+	if err := patchHelper.Patch(bmrc.ctx, bmc); err != nil {
+		return fmt.Errorf("patching BMC object: %w", err)
+	}
+
 	return nil
 }
 
diff --git a/pbnj/controllers/controller.go b/pbnj/controllers/controller.go
index a14d81b..139bbbd 100644
--- a/pbnj/controllers/controller.go
+++ b/pbnj/controllers/controller.go
@@ -146,6 +146,8 @@ func (r *Reconciler) setBootDevice(ctx context.Context, username, password strin
 			Name: bmc.Spec.Vendor,
 		},
 		BootDevice: v1.BootDevice(bootDeviceValue),
+		Persistent: false,
+		EfiBoot:    true,
 	}
 
 	_, err := r.PbnjClient.MachineBootDev(ctx, deviceRequest)
-- 
2.34.1

