From 36a26aa62022d263b37605fe52de72087483ff13 Mon Sep 17 00:00:00 2001
From: Aravind Ramalingam <ramaliar@amazon.com>
Date: Fri, 11 Mar 2022 10:06:34 -0800
Subject: [PATCH] Adding mutex to lock hardware selection

---
 controllers/machine.go | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/controllers/machine.go b/controllers/machine.go
index aeac2b1..23d9728 100644
--- a/controllers/machine.go
+++ b/controllers/machine.go
@@ -23,6 +23,7 @@ import (
 	"os"
 	"regexp"
 	"strings"
+	"sync"
 	"text/template"
 
 	corev1 "k8s.io/api/core/v1"
@@ -49,6 +50,9 @@ type machineReconcileContext struct {
 	bootstrapCloudConfig string
 }
 
+// Add mutex lock for picking up a hardware for the nodes.
+var lock sync.Mutex
+
 // ErrHardwareMissingDiskConfiguration is returned when the referenced hardware is missing
 // disk configuration.
 var ErrHardwareMissingDiskConfiguration = fmt.Errorf("disk configuration is required")
@@ -328,6 +332,11 @@ func (mrc *machineReconcileContext) ensureHardwareUserData(hardware *tinkv1.Hard
 }
 
 func (mrc *machineReconcileContext) ensureHardware() (*tinkv1.Hardware, error) {
+	// lock the process of picking up the hardware and updating it's ownership.
+	// This avoids picking up same hardware for the machines.
+	lock.Lock()
+	defer lock.Unlock()
+
 	hardware, err := mrc.hardwareForMachine()
 	if err != nil {
 		return nil, fmt.Errorf("getting hardware: %w", err)
-- 
2.34.1

